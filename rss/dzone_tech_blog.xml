<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>DZone.com 饲料</title><link>https://dzone.com</link><description>DZone.com 上的最新帖子</description><lastBuildDate>Tue, 02 Jul 2024 03:05:16 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>【GBase 8a Implementation Guide: Resource Assessment】</title><link>https://dzone.com/articles/gbase-8a-implementation-guide-resource-assessment</link><description>&lt;h2&gt;1、磁盘存储空间评估&lt;/h2&gt;&lt;p&gt;GBase集群的存储空间需求是根据业务系统的数据量、压缩算法的选择以及集群副本数量来计算的。业务系统的数据量通常包括以下几个方面：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;历史数据量&lt;/li&gt;&lt;li&gt;增量数据量及每次增量的大小&lt;/li&gt;&lt;li&gt;数据存储时长及整个期间的总数据量&lt;/li&gt;&lt;li&gt;数据增长率和预留存储空间&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;综合以上各方面，假设某业务系统全周期总数据量为30TB。 GBase集群的物理磁盘容量的计算方法如下：&lt;/p&gt;</description><pubDate>Mon, 01 Jul 2024 21:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/gbase-8a-implementation-guide-resource-assessment</guid></item><item><title>【A Look Into Netflix System Architecture】</title><link>https://dzone.com/articles/a-look-into-netflix-system-architecture</link><description>&lt;p&gt;有没有想过 Netflix 如何让您始终紧盯着屏幕，享受不间断的流媒体体验？ Netflix 架构负责提供流畅的流媒体体验，吸引全世界的幕后观众。 Netflix的系统架构强调了决定未来内容如何塑造的重要性。与我们一起踏上 Netflix 流媒体宇宙的幕后之旅！&lt;/p&gt;&lt;p&gt; Netflix 这个术语的意思是娱乐、追剧和尖端流媒体服务。 Netflix 的迅速普及可能归功于其庞大的内容收藏、全球影响力以及富有弹性和创造性的架构。&lt;/p&gt;</description><pubDate>Mon, 01 Jul 2024 20:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/a-look-into-netflix-system-architecture</guid></item><item><title>【High Availability and Disaster Recovery (HADR) in SQL Server on AWS】</title><link>https://dzone.com/articles/high-availability-and-disaster-recovery-on-AWS</link><description>&lt;p&gt;高可用性和灾难恢复 ( &lt;a href="https://dzone.com/articles/disaster-recovery-and-high-availability-solutions"&gt;HADR&lt;/a&gt; ) 在维护企业数据库系统中的数据完整性、减少停机时间和防止数据丢失方面发挥着至关重要的作用。 AWS 为&lt;a href="https://dzone.com/articles/an-overview-of-sql-server-joins"&gt;SQL Server&lt;/a&gt;提供了一系列 HADR 选项，这些选项利用了 SQL Server 的强大功能以及 AWS 的可扩展性和灵活性。在本文中，我们将指导您完成在 AWS 上为 SQL Server 配置 HADR 的过程，并提供用于设置和恢复 SQL Server 数据库的实用代码示例。&lt;/p&gt;&lt;h2&gt; 1. 在 AWS 上设置 SQL Server&lt;/h2&gt;&lt;h3&gt;使用 SQL Server 启动 EC2 实例&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;启动 EC2 实例的部署：&lt;/strong&gt;利用 AWS 管理控制台，通过选择合适的 SQL Server AMI（Amazon 系统映像）开始部署&lt;a href="https://dzone.com/articles/how-to-understand-and-choose-your-first-ec2-instan"&gt;EC2 实例&lt;/a&gt;。选择符合您的特定性能标准的实例类型。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;设置安全组：&lt;/strong&gt;保证安全组允许必要的入站和出站流量，以促进无缝 SQL Server 通信。 &lt;/li&gt;&lt;/ol&gt;&lt;div class="codeMirror-wrapper" contenteditable="false"&gt;&lt;div contenteditable="false"&gt;&lt;div class="codeHeader"&gt;&lt;div class="nameLanguage"&gt;壳&lt;/div&gt;&lt;i class="icon-cancel-circled-1 cm-remove"&gt;&amp;nbsp;&lt;/i&gt;&lt;/div&gt;&lt;div class="codeMirror-code--wrapper"&gt;&lt;pre&gt; &lt;code lang="text/x-sh"&gt;aws ec2 run-instances \    --image-id ami-0abcdef1234567890 \    --instance-type t3.large \    --key-name MyKeyPair \    --security-group-ids sg-0123456789abcdef0 \    --subnet-id subnet-6e7f829e&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description><pubDate>Mon, 01 Jul 2024 19:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/high-availability-and-disaster-recovery-on-AWS</guid></item><item><title>【Terraform Tips for Efficient Infrastructure Management】</title><link>https://dzone.com/articles/terraform-tips-for-efficient-infrastructure-management</link><description>&lt;p dir="ltr"&gt;&lt;a href="https://dzone.com/articles/infrastructure-as-code-exploring-terraforms-domina"&gt;Terraform&lt;/a&gt;是一种流行的工具，用于定义和配置&lt;a href="https://dzone.com/articles/what-is-infrastructure-as-code"&gt;基础设施即代码 (IaC)&lt;/a&gt; 、提高一致性、可重复性和版本控制。但您需要知道如何正确使用它，以从其作为基础设施管理工具中获取最大价值。&lt;/p&gt;&lt;p dir="ltr"&gt;在本文中，我们将探讨使用 Terraform 有效简化基础设施管理并避免常见陷阱的最佳实践。&lt;/p&gt;</description><pubDate>Mon, 01 Jul 2024 18:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/terraform-tips-for-efficient-infrastructure-management</guid></item><item><title>【Integration Testing With Keycloak, Spring Security, Spring Boot, and Spock Framework】</title><link>https://dzone.com/articles/integration-testing-with-keycloak-spring-security</link><description>&lt;p&gt;在当今的安全环境中，OAuth2 已成为保护 API 安全的标准，提供比基本身份验证更强大、更灵活的方法。我进入这个领域的旅程始于一个关键的解决方案架构决策：从基本身份验证迁移到 OAuth2 客户端凭据以获取访问令牌。虽然 Spring Security 为这两种身份验证方法提供了强大的支持，但我遇到了重大挑战。我找不到在同一应用程序中无缝集成基本身份验证和 JWT 身份验证的声明式方法。&lt;/p&gt;&lt;p&gt;这种功能上的差距促使我探索和开发一种不仅满足身份验证要求而且支持全面集成测试的解决方案。本文分享了我的发现，并提供了有关设置 Keycloak、将其与 Spring Security 和 Spring Boot 集成以及利用 Spock 框架进行可重复集成测试的详细指南。读完本文后，您将清楚地了解如何使用 Keycloak 作为身份提供者来有效配置和测试您的身份验证机制，确保顺利过渡到 OAuth2，同时保持在必要时支持基本身份验证的灵活性。&lt;/p&gt;</description><pubDate>Mon, 01 Jul 2024 17:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/integration-testing-with-keycloak-spring-security</guid></item><item><title>【Handling “Element Is Not Clickable at Point” Exception in Selenium】</title><link>https://dzone.com/articles/handling-element-is-not-clickable-at-point-excepti</link><description>&lt;p&gt;在 Selenium 自动化测试中，定位器有助于识别网页上的任何元素并与之交互。例如， &lt;code&gt;ID&lt;/code&gt; 、 &lt;code&gt;Name&lt;/code&gt; 、 &lt;code&gt;ClassName&lt;/code&gt; 、 &lt;code&gt;XPath&lt;/code&gt; 、 &lt;code&gt;CSS Selector&lt;/code&gt; 、 &lt;code&gt;TagName&lt;/code&gt; 、 &lt;code&gt;LinkText&lt;/code&gt;和&lt;code&gt;Partial LinkText&lt;/code&gt;被广泛用于帮助您与网页上的元素进行交互。&lt;/p&gt;&lt;p&gt;识别元素可能是一项简单的任务，但您的测试可能会由于&lt;code&gt;WebElement&lt;/code&gt;的状态而失败（例如，元素不可见或元素在某个点不可单击等）。在这种情况下，测试可能会抛出不同的 Selenium 异常，例如&lt;code&gt;NoSuchElementException&lt;/code&gt; 、 &lt;code&gt;ElementNotVisibleException&lt;/code&gt;等。&lt;/p&gt;</description><pubDate>Mon, 01 Jul 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/handling-element-is-not-clickable-at-point-excepti</guid></item><item><title>【OpenID Connect Flows: From Implicit to Authorization Code With PKCE and BFF】</title><link>https://dzone.com/articles/from-implicit-to-authorization-code-with-pcke-and-bff</link><description>&lt;p&gt;本文将回顾各种 OpenID Connect (OIDC) 身份验证流程背后的原理，从最简单到最现代，重点介绍每个流程中存在的漏洞。&lt;/p&gt;&lt;p&gt;我们将详细探讨以下每个 OpenID Connect 流程：&lt;/p&gt;</description><pubDate>Mon, 01 Jul 2024 15:00:01 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/from-implicit-to-authorization-code-with-pcke-and-bff</guid></item><item><title>【Use AWS Generative AI CDK Constructs To Speed up App Development】</title><link>https://dzone.com/articles/use-aws-generative-ai-cdk-constructs-to-speed-up</link><description>&lt;div&gt;&lt;p&gt;在本博客中，我们将使用 AWS Generative AI Constructs Library 部署由以下组件组成的完整 RAG 应用程序：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base.html"&gt;&lt;strong&gt;Amazon Bedrock 知识库&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;：&lt;/strong&gt;这是 RAG 解决方案的基础。&lt;/li&gt;&lt;li&gt; &lt;a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless.html"&gt;&lt;strong&gt;OpenSearch Serverless&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;集合：&lt;/strong&gt;支持矢量搜索集合类型，提供相似性搜索能力。&lt;/li&gt;&lt;li&gt; &lt;strong&gt;S3 存储桶：&lt;/strong&gt;这将充当知识库的&lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-ds.html"&gt;数据源&lt;/a&gt;。&lt;/li&gt;&lt;li&gt; &lt;strong&gt;AWS Lambda 函数&lt;/strong&gt;（用 Python 编写）以及&lt;strong&gt;API 网关&lt;/strong&gt;，该网关使用&lt;a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html"&gt;RetrieveAndGenerate API&lt;/a&gt;查询知识库并根据检索到的信息生成响应。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt; &lt;a href="https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F7ex2pmue5yzihyvqf0fi.jpg"&gt;&lt;img alt="AWS云" class="fr-fic fr-dib lazyload" style="width: 635px; height: 328.613px;" width="800" /&gt;&lt;/a&gt;&lt;/p&gt;</description><pubDate>Mon, 01 Jul 2024 14:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/use-aws-generative-ai-cdk-constructs-to-speed-up</guid></item><item><title>【Explainable AI: Seven Tools and Techniques for Model Interpretability】</title><link>https://dzone.com/articles/explainable-ai-7-tools-and-techniques-for-model</link><description>&lt;p dir="ltr"&gt;随着人工智能模型变得越来越复杂，了解它们如何做出决策至关重要。在医疗保健、金融和法律等领域尤其如此，这些领域的透明度和问责制至关重要。可解释的人工智能 ( &lt;a href="https://dzone.com/articles/unlocking-the-power-of-explainable-ai-with-5-popul"&gt;XAI&lt;/a&gt; ) 有助于使人工智能模型更具可解释性。本博客将介绍七种用于&lt;a href="https://dzone.com/articles/explainable-ai-making-the-black-box-transparent"&gt;模型可解释性&lt;/a&gt;的工具和技术，为软件开发人员提供揭开人工智能神秘面纱的实用方法。&lt;/p&gt;&lt;h2 dir="ltr"&gt; 1. LIME（本地可解释模型不可知解释）&lt;/h2&gt;&lt;h3 dir="ltr"&gt;什么是石灰？&lt;/h3&gt;&lt;p dir="ltr"&gt; &lt;a href="https://dzone.com/articles/interpretable-and-explainable-ner-with-lime"&gt;LIME&lt;/a&gt;是解释复杂模型的流行工具。它的工作原理是使用可解释的模型（例如线性回归或决策树）在本地近似模型。&lt;/p&gt;</description><pubDate>Mon, 01 Jul 2024 13:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/explainable-ai-7-tools-and-techniques-for-model</guid></item><item><title>【Front-End Application Performance Monitoring (APM)】</title><link>https://dzone.com/articles/frontend-application-performance-monitoring-apm</link><description>&lt;h2&gt;前端 APM 工具简介：Dynatrace 与 AppDynamics&lt;/h2&gt;&lt;p&gt;如今，使用 React 和 Angular 等技术可以轻松构建企业 Web 应用程序，但性能管理至关重要且经常被忽视。有多种应用程序性能管理 ( &lt;a href="https://dzone.com/articles/introduction-to-apm-unveiling-the-basics"&gt;APM&lt;/a&gt; ) 工具可供您使用，但在实施灵活性、监控功能、动态错误解决和易用性方面超越其他工具的两种工具是&lt;a href="https://dzone.com/articles/dynatrace-perform-day-two"&gt;&lt;strong&gt;Dynatrace&lt;/strong&gt;&lt;/a&gt;和&lt;a href="https://dzone.com/articles/appdynamics-vs-new-relic-%E2%80%93"&gt;&lt;strong&gt;AppDynamics&lt;/strong&gt;&lt;/a&gt; 。&lt;/p&gt;&lt;p&gt;在这篇文章中，我们将使用两个领先的工具深入研究前端监控：Dynatrace 和 AppDynamics。此外，我们将比较每个工具的优缺点，并在前端源代码中重点介绍实现细节。&lt;/p&gt;</description><pubDate>Mon, 01 Jul 2024 12:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/frontend-application-performance-monitoring-apm</guid></item></channel></rss>