<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>DZone.com 饲料</title><link>https://dzone.com</link><description>DZone.com 上的最新帖子</description><lastBuildDate>Tue, 04 Jun 2024 16:04:09 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>【Security Considerations When Building SaaS】构建 SaaS 时的安全注意事项</title><link>https://dzone.com/articles/security-considerations-when-building-saas</link><description>&lt;p dir="ltr"&gt;没有明确定义的模式或框架来构建托管 SaaS。构建管理良好的 SaaS 需要解决各种各样的问题。其中一些问题在不同类型的 SaaS 中很常见，而另一些则针对 SaaS。常见问题的示例包括计费、分析、指标和入职。每个 SaaS 的不同问题示例包括配置（新租户加入时应配置哪些资源）、数据隔离、扩展和性能需求。为了本文的目的，我们将常见问题分类为控制平面问题，将不同问题分类为数据平面问题。&lt;/p&gt;&lt;p dir="ltr"&gt;本文简要讨论提供租户隔离的不同模型，然后深入探讨构建 SaaS 的安全注意事项。&lt;/p&gt;</description><pubDate>Tue, 04 Jun 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/security-considerations-when-building-saas</guid></item><item><title>【How to Quickly Learn Coding and Land a Job in Tech】如何快速学习编码并找到一份科技工作</title><link>https://dzone.com/articles/how-to-quickly-learn-coding-and-land-a-job-in-tech</link><description>&lt;p dir="ltr"&gt;从我编写第一个 Hello World 程序的那天起，我花了两年时间在亚马逊找到了工作，又花了两年时间进入谷歌。那是因为我在没有计算机科学学位或参加训练营的情况下完成了这一任务。一路上我犯了无数的错误，这使得我成为一名软件工程师的道路比应有的时间更长。我花了无数个小时观看 YouTube 教程并支付了大量 Udemy 课程，却发现它们没有增加任何实际价值。如果我能回到过去并撤消所有不起作用的事情，那么在开始编程后的六个月内，我将处于与今天完全相同的情况。这正是我写这篇有用文章的原因。&lt;/p&gt;&lt;p dir="ltr"&gt;今天，我将剔除所有不必要的废话，为您提供从初学者到全职软件工程师的最快路线。&lt;/p&gt;</description><pubDate>Tue, 04 Jun 2024 15:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/how-to-quickly-learn-coding-and-land-a-job-in-tech</guid></item><item><title>【What Is Reverse ETL? Overview, Use Cases, and Key Benefits】什么是反向 ETL？概述、用例和主要优点</title><link>https://dzone.com/articles/what-is-reverse-etl-overview</link><description>&lt;p dir="ltr"&gt;在不断发展的数据工程领域，反向 ETL 已成为企业的关键流程，旨在利用传统分析之外的数据仓库和其他数据平台。反向 ETL（或反向“提取、转换、加载”）是将数据从集中式数据仓库或数据湖移动到&lt;a href="https://dzone.com/articles/what-is-a-data-pipeline"&gt;数据管道&lt;/a&gt;中的操作系统和应用程序的过程。这使企业能够实施其分析，通过将数据反馈到最需要的日常工作流程和系统中来使数据具有可操作性。&lt;/p&gt;&lt;h2 dir="ltr"&gt;反向 ETL 如何工作？&lt;/h2&gt;&lt;p dir="ltr"&gt;反向 ETL 可以可视化为一个循环，该循环以数据仓库中聚合的数据开始。然后，数据被提取、转换（以满足操作系统的要求），最后加载到各种业务应用程序中，例如 CRM、营销平台或其他客户支持工具。可以在本资源中关于&lt;a href="https://dzone.com/articles/an-overview-of-key-components-of-a-data-pipeline"&gt;数据管道关键组件的内容&lt;/a&gt;中进一步探讨这些概念。&lt;/p&gt;</description><pubDate>Tue, 04 Jun 2024 14:03:25 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/what-is-reverse-etl-overview</guid></item><item><title>【Python in Finance: A Developer’s Guide】Python 在金融中的应用：开发人员指南</title><link>https://dzone.com/articles/python-in-finance-a-developers-guide</link><description>&lt;h2&gt;Python 金融简介&lt;/h2&gt;&lt;p&gt;&lt;a href="https://dzone.com/articles/what-to-know-about-python-and-why-its-the-most-popular-today"&gt;Python&lt;/a&gt;已成为金融领域的一股强大力量，改变了金融实体的运营格局并促进创新。对于软件工程师来说，掌握 Python 在金融领域的实用性可以释放开发高级金融应用程序和工具的机会。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;为什么在金融领域选择 Python？&lt;/strong&gt;&lt;/h2&gt;&lt;h3&gt;&lt;strong&gt;简单易懂&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Python 简单明了的语法使开发人员能够轻松构建复杂的金融算法和模型。这种清晰度缩短了开发生命周期并减少了错误，这在高风险的金融领域是必不可少的。&lt;/p&gt;</description><pubDate>Tue, 04 Jun 2024 14:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/python-in-finance-a-developers-guide</guid></item><item><title>【Effective Java Application Testing With Cucumber and BDD】使用 Cucumber 和 BDD 进行有效的 Java 应用程序测试</title><link>https://dzone.com/articles/effective-java-application-testing-with-cucumber</link><description>&lt;p&gt;利用 Cucumber 进行 Java 应用程序测试，并与行为驱动开发 (BDD) 完全集成，从而提高测试效率。本指南提供了项目设置、场景编写、步骤实施和报告的全面步骤。&lt;/p&gt;&lt;h2&gt;介绍&lt;/h2&gt;&lt;p&gt;&lt;a href="https://cucumber.io/" rel="noreferrer noopener" target="_blank"&gt;Cucumber&lt;/a&gt;是一个支持行为驱动开发（BDD）的工具。 &lt;a href="https://cucumber.io/docs/guides/" rel="noreferrer noopener" target="_blank"&gt;Cucumber 指南&lt;/a&gt;是了解有关 BDD 和 Cucumber 的更多信息的一个很好的起点。 BDD本身是由Dan North在2006年提出的，你可以阅读他&lt;a href="https://dannorth.net/introducing-bdd/" rel="noreferrer noopener" target="_blank"&gt;介绍BDD&lt;/a&gt;的博客。然而，Cucumber 是一个支持 BDD 的工具，这并不意味着你只是使用 Cucumber 来练习 BDD。在这方面，《黄瓜&lt;a href="https://cucumber.io/docs/bdd/myths/" rel="noreferrer noopener" target="_blank"&gt;神话》&lt;/a&gt;是一本有趣的读物。&lt;/p&gt;</description><pubDate>Tue, 04 Jun 2024 13:00:01 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/effective-java-application-testing-with-cucumber</guid></item><item><title>【New Ways for CNAPP to Shift Left and Shield Right: The Technology Trends That Will Allow CNAPP to Address More Extensive Threat Models】CNAPP左转右盾的新途径：技术趋势将使CNAPP应对更广泛的威胁模型</title><link>https://dzone.com/articles/new-ways-for-cnapp-to-shift-left-and-shield-right</link><description>&lt;p style="font-size: 17px;"&gt;&lt;em&gt;编者注：以下是为 DZone 的 2024 年趋势报告《&lt;/em&gt; &lt;a href="https://dzone.com/link/2024-tr-cloud-native-contributor-article" rel="noopener noreferrer" target="_blank"&gt;&lt;em&gt;云原生：倡导跨 SDLC 的云开发》&lt;/em&gt;&lt;/a&gt;撰写并发表的文章。&lt;/p&gt;&lt;hr /&gt;&lt;p dir="ltr"&gt;云原生应用程序保护平台（CNAPP）模型旨在保护利用云原生技术的应用程序。然而，不在范围内的应用程序通常是遗留系统，其设计目的不是在现代云基础设施中运行。因此，在实践中，CNAPP涵盖了容器化应用程序、无服务器功能和微服务架构的安全性，可能跨不同的云环境运行。&lt;/p&gt;</description><pubDate>Tue, 04 Jun 2024 12:30:01 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/new-ways-for-cnapp-to-shift-left-and-shield-right</guid></item><item><title>【Queuing Theory for Software Engineers】软件工程师的排队论</title><link>https://dzone.com/articles/queuing-theory-for-software-engineers</link><description>&lt;h2&gt;“从为什么开始”&lt;a href="http://localhost:8888/lab/tree/Article.ipynb#%22Start-with-Why%22" target="_self"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;队列是当今软件中随处可见的内置机制。不熟悉&lt;a href="https://dzone.com/articles/queuing-theory-for-non-functional-testing"&gt;排队论&lt;/a&gt;的基础知识将妨碍您理解&lt;a href="https://dzone.com/articles/reducing-network-latency-and-improving-read-perfor"&gt;延迟&lt;/a&gt;和&lt;a href="https://dzone.com/articles/non-functional-requirements-how-to-improve-perform"&gt;吞吐量&lt;/a&gt;、高级容量估计和工作负载优化之间的关系。了解排队模型的内部结构实际上并不难掌握。在本文中，我将总结软件工程师在其领域中更加高效所需的本质。&lt;/p&gt;&lt;h2&gt;到处都是排队！&lt;/h2&gt;&lt;p&gt;让我们看看普通人（比如我）的词汇中的一些常见示例。我将不假思索地列出队列的一些技术用法。&lt;/p&gt;</description><pubDate>Tue, 04 Jun 2024 11:00:01 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/queuing-theory-for-software-engineers</guid></item><item><title>【What Is ElastiCache Serverless?】什么是 ElastiCache 无服务器？</title><link>https://dzone.com/articles/what-is-elasticache-serverless</link><description>&lt;p&gt;本文是我们对 Amazon ElastiCache Serverless 工程师的采访的优化转录。它提供了有关该服务、为什么需要该服务以及何时最好使用该服务的全面答案。您还可以在我们的&lt;a href="https://www.youtube.com/@ITsyndicateOU" rel="nofollow" target="_blank"&gt;YouTube 频道&lt;/a&gt;上观看此采访。阅读愉快。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;问：&lt;/strong&gt;大家好！这是 IT Syndicate 的联系方式。我们是领先的 DevOps 服务提供商，在该领域拥有十多年的经验。我们的团队专注于提供有效的 DevOps 解决方案。具体来说，我们帮助优化和改进基础设施，确保其可扩展性、可靠性和安全性。今天，我们将有机会与我们的 DevOps 工程师讨论 Amazon ElastiCache Serverless。亚马逊的这款新产品引起了在云环境中工作的开发人员和公司的广泛关注。&lt;/p&gt;</description><pubDate>Mon, 03 Jun 2024 20:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/what-is-elasticache-serverless</guid></item><item><title>【Enhancing Vehicle Routing Problems With Deep Reinforcement Learning and Metaheuristics】通过深度强化学习和元启发法增强车辆路径问题</title><link>https://dzone.com/articles/enhancing-vehicle-routing-problems</link><description>&lt;p&gt;车辆路线问题 (VRP) 是物流和供应链管理中的一个基本挑战，涉及优化车队向一组客户运送货物的路线。问题的复杂性随着车辆数量、送货点以及送货窗口、车辆容量和交通状况等限制因素的增加而增加。深度强化学习 ( &lt;a href="https://dzone.com/articles/reinforcement-learning-overview"&gt;DRL&lt;/a&gt; ) 和元启发法的最新进展为提高 VRP 效率和可扩展性提供了有前途的解决方案。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;了解车辆路径问题&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;VRP 可以被视为旅行商问题 ( &lt;a href="https://dzone.com/articles/traveling-salesman-problem-with-gnns-and-b-and-b"&gt;TSP&lt;/a&gt; ) 的延伸，其中多辆车必须访问一组位置并返回中央仓库。目标是最大限度地减少总行驶距离或时间，同时满足车辆容量和送货窗口等限制。 VRP 的组合性质使其在计算上具有挑战性，尤其是当问题规模增大时。&lt;/p&gt;</description><pubDate>Mon, 03 Jun 2024 19:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/enhancing-vehicle-routing-problems</guid></item><item><title>【Managing Architectural Tech Debt】管理建筑技术债务</title><link>https://dzone.com/articles/managing-architectural-tech-debt</link><description>&lt;p dir="ltr"&gt;当我想到&lt;a href="https://dzone.com/articles/what-is-tech-debt-and-how-to-explain-it-to-non-tec"&gt;技术债务&lt;/a&gt;时，我仍然记得我创建的第一个应用程序，它让我意识到不合适的架构的后果。这件事发生在 20 世纪 90 年代末，当时我刚开始担任顾问。&lt;/p&gt;&lt;p&gt;客户要求使用&lt;a href="https://en.wikipedia.org/wiki/HCL_Notes"&gt;Lotus Notes&lt;/a&gt;平台为其客户构建采购系统。使用 Lotus Notes 客户端和自定义应用程序，最终用户可以提出请求，这些请求将由应用程序跟踪并由产品所有者团队完成。从理论上讲，这是一个非常酷的想法——特别是因为 Web 开发的应用程序并不流行，而且每个人每天都使用 Lotus Notes。&lt;/p&gt;</description><pubDate>Mon, 03 Jun 2024 18:00:01 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/managing-architectural-tech-debt</guid></item></channel></rss>