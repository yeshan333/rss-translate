<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>DZone.com 饲料</title><link>https://dzone.com</link><description>DZone.com 上的最新帖子</description><lastBuildDate>Tue, 11 Jun 2024 16:04:04 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>【The Meta-Retrospective】元回顾</title><link>https://dzone.com/articles/the-meta-retrospective</link><description>&lt;p&gt;元回顾是一个很好的练习，可以促进扩展团队内的协作，形成对大局的共同理解，并立即创建有价值的行动项目。它由一个或多个产品团队的团队成员（或这些团队的代表）和利益相关者组成。利益相关方的参与者包括企业人员和客户。元回顾既可以作为常规活动（例如每季度一次），也可以在实现特定里程碑（例如产品的特定版本）之后进行。&lt;/p&gt;&lt;h2&gt;元回顾的好处&lt;/h2&gt;&lt;p&gt;您的利益相关者是您的盟友，而不是障碍！&lt;/p&gt;</description><pubDate>Tue, 11 Jun 2024 15:00:01 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/the-meta-retrospective</guid></item><item><title>【A Single API for All Your Conversational Generative AI Applications】适用于所有对话式生成 AI 应用程序的单一 API</title><link>https://dzone.com/articles/a-single-api-for-all-your-conversational</link><description>&lt;p&gt;您现在可以使用 Amazon Bedrock 中的&lt;a href="https://docs.aws.amazon.com/bedrock/latest/userguide/conversation-inference.html"&gt;&lt;strong&gt;Converse API&lt;/strong&gt;&lt;/a&gt;创建对话应用程序，例如聊天机器人和支持助理。它是一个一致、&lt;strong&gt;统一的&lt;/strong&gt;API，可与支持消息的所有 Amazon Bedrock 模型配合使用。好处是您有一个代码库（应用程序）并将其与不同的模型一起使用 - 这使得使用&lt;code&gt;Converse&lt;/code&gt; API 优于&lt;a href="https://pkg.go.dev/github.com/aws/aws-sdk-go-v2/service/bedrockruntime#Client.InvokeModel"&gt;InvokeModel&lt;/a&gt; （或&lt;a href="https://pkg.go.dev/github.com/aws/aws-sdk-go-v2/service/bedrockruntime#Client.InvokeModelWithResponseStream"&gt;InvokeModelWithResponseStream&lt;/a&gt; ）API。&lt;/p&gt;&lt;p&gt;我将引导您了解如何将此 API 与&lt;a href="https://aws.github.io/aws-sdk-go-v2/docs/"&gt;AWS SDK for Go v2&lt;/a&gt;结合使用。&lt;/p&gt;</description><pubDate>Tue, 11 Jun 2024 14:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/a-single-api-for-all-your-conversational</guid></item><item><title>【KNIME’s Path To Empowering Developers in the Evolving Data Science Landscape】KNIME 在不断发展的数据科学领域为开发人员提供支持的途径</title><link>https://dzone.com/articles/knimes-path-to-empowering-developers</link><description>&lt;p dir="ltr"&gt;在快速发展的数据科学世界中，公司不断寻找可以帮助他们利用数据力量的工具和平台。&lt;a href="http://www.knime.com" rel="noopener noreferrer" target="_blank"&gt;&lt;/a&gt; &lt;a href="http://www.knime.com" rel="noopener noreferrer" target="_blank"&gt;KNIME&lt;/a&gt;是一个开源数据科学平台，一直处于这场革命的前沿，为数据准备、机器学习和分析提供了全面的环境。最近，我有机会在&lt;a href="https://www.snowflake.com/summit/" rel="noopener noreferrer" target="_blank"&gt;Snowflake 数据云峰会上&lt;/a&gt;与 KNIME 创始人兼首席执行官&lt;a href="https://www.linkedin.com/in/michaelberthold/" rel="noopener noreferrer" target="_blank"&gt;Michael Berthold&lt;/a&gt;会面，我们在会上讨论了该公司过去五年的历程及其在数据方面为开发人员、工程师和架构师提供支持的愿景科学景观。&lt;/p&gt;&lt;h2 dir="ltr"&gt;与时俱进&lt;/h2&gt;&lt;p dir="ltr"&gt;在过去五年中，KNIME 经历了重大变化，以保持领先地位。 “我们彻底改变了我们的两种技术，”伯特霍尔德透露。分析平台现已支持浏览器，KNIME 服务器已替换为云原生业务中心。该公司最近还推出了 SaaS 产品，允许用户访问 KNIME 的强大功能，而无需进行本地安装。&lt;/p&gt;</description><pubDate>Tue, 11 Jun 2024 13:00:02 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/knimes-path-to-empowering-developers</guid></item><item><title>【Exploring the Dynamics of Streaming Databases】探索流数据库的动态</title><link>https://dzone.com/articles/exploring-the-dynamics-of-streaming-databases</link><description>&lt;p&gt;在之前的文章中，我们讨论了&lt;a href="https://dzone.com/articles/an-introduction-to-stream-processing"&gt;流处理的基础知识&lt;/a&gt;以及&lt;a href="https://dzone.com/articles/choosing-the-right-stream-processing-system"&gt;如何选择流处理系统&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;在本文中，我们将描述什么是流数据库，因为它是流处理系统的核心组件。如果您需要选择一个，我们还将提供一些商用解决方案，以便您做出明智的选择。&lt;/p&gt;</description><pubDate>Tue, 11 Jun 2024 12:00:01 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/exploring-the-dynamics-of-streaming-databases</guid></item><item><title>【GitHub Copilot Tutorial】GitHub Copilot 教程</title><link>https://dzone.com/articles/github-copilot-tutorial-weve-tested-it-with-java</link><description>&lt;p&gt;本文介绍了 GitHub Copilot 工具以及有关其在软件开发项目中使用的主要指南和假设。该指南涉及该工具的配置及其在日常工作中的应用，并假设读者将使用 GitHub Copilot 和 IntelliJ IDEA（通过专用插件）。&lt;/p&gt;&lt;h2&gt;&lt;a&gt;&lt;/a&gt; GitHub Copilot：这是什么？&lt;/h2&gt;&lt;p&gt; GitHub Copilot 是一款 AI 开发人员助手，它使用针对 GitHub 存储库中提供的所有编程语言进行训练的生成式 AI 模型。&lt;a href="https://docs.github.com/en/copilot/about-github-copilot" rel="noopener" target="_blank"&gt;此处&lt;/a&gt;提供了该工具的完整说明和文档。&lt;/p&gt;</description><pubDate>Tue, 11 Jun 2024 11:00:01 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/github-copilot-tutorial-weve-tested-it-with-java</guid></item><item><title>【Why Choose Bug Bounty Programs? (Benefits and Challenges Explained)】为什么选择错误赏金计划？ （好处和挑战解释）</title><link>https://dzone.com/articles/why-choose-bug-bounty-programs</link><description>&lt;p&gt;勤奋的软件开发人员在处理软件漏洞时必须遵循安全开发实践、行业标准和监管要求。&lt;a href="https://dzone.com/articles/vulnerability-management-in-devsecops"&gt;处理漏洞&lt;/a&gt;是一个复杂的、多步骤的过程，涉及多种方法和阶段。查找漏洞的一种有效方法是通过错误赏金计划。&lt;/p&gt;&lt;h2&gt;准备漏洞赏金计划&lt;/h2&gt;&lt;p&gt;在启动错误赏金计划之前，公司应该已经建立了识别漏洞的流程。拥有与第三方组织合作进行代码和流程安全审计（&lt;a href="https://dzone.com/articles/guide-to-pen-testing"&gt;通常称为渗透测试）的&lt;/a&gt;经验至关重要。有&lt;a href="https://www.crowdstrike.com/cybersecurity-101/red-teaming/"&gt;红队&lt;/a&gt;经验就更好了。&lt;/p&gt;</description><pubDate>Mon, 10 Jun 2024 21:00:01 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/why-choose-bug-bounty-programs</guid></item><item><title>【Choosing the Optimal Data Storage Architecture】选择最佳的数据存储架构</title><link>https://dzone.com/articles/choosing-the-optimal-data-storage-architecture</link><description>&lt;p&gt;&lt;em&gt;数据仓库、数据湖和数据湖屋是最流行的数据存储架构类型，可能有利于任何希望开发其分析功能的企业。它们每个都有一系列优点和最适合的用例。最重要的是选择最适合您业务需求的数据存储方法。在这篇博文中，我们将描述每个解决方案的工作原理，以帮助您做出更明智的决定。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;随着大数据分析需求的不断增长，数据存储架构成为当今商业世界的热门话题。企业会生成大量数据，需要强大的解决方案来有效地收集、存储和分析数据。数据存储是大数据架构及其组件的基础。它提供了存储和服务数据的环境，并对基本 KPI 有直接影响，例如：&lt;/p&gt;</description><pubDate>Mon, 10 Jun 2024 20:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/choosing-the-optimal-data-storage-architecture</guid></item><item><title>【Creating Custom Dashboards With Vizro: A Comprehensive Guide】使用 Vizro 创建自定义仪表板：综合指南</title><link>https://dzone.com/articles/creating-custom-dashboards-with-vizro</link><description>&lt;h2&gt;什么是维兹罗？&lt;/h2&gt;&lt;figure&gt;&lt;div tabindex="0"&gt;&lt;source type="image/webp" /&gt;&lt;source /&gt;&lt;/div&gt;此信息来源于 Vizro 官方 GitHub 页面。&lt;/figure&gt;&lt;p&gt; Vizro 是一个 Python 库，可以简单地为您的数据创建仪表板，构建在 Dash 和 Plotly 之上。它旨在将 Streamlit 的快速原型设计能力与 Dash 的定制能力相融合。&lt;/p&gt;&lt;p&gt; Vizro&lt;strong&gt;仪表板&lt;/strong&gt;由&lt;strong&gt;页面组成，&lt;/strong&gt;每个页面主要包含&lt;strong&gt;组件&lt;/strong&gt;（可以是&lt;strong&gt;图形&lt;/strong&gt;或&lt;strong&gt;表格&lt;/strong&gt;）、&lt;strong&gt;过滤器&lt;/strong&gt;（可以是&lt;strong&gt;滑块&lt;/strong&gt;、&lt;strong&gt;下拉&lt;/strong&gt;框和其他按钮）和可选的&lt;strong&gt;操作&lt;/strong&gt;。它们一起可以在本机 Python 中格式化为对象或 YAML 文件。在本教程中，我将使用 Python 在本地开发 Vizro 仪表板。我假设您对 Pandas 库有一些先验知识。&lt;/p&gt;</description><pubDate>Mon, 10 Jun 2024 19:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/creating-custom-dashboards-with-vizro</guid></item><item><title>【Analysis of Flubot Malware on Android OS】Android操作系统上的Flubot恶意软件分析</title><link>https://dzone.com/articles/analysis-of-flubot-malware-on-android-os</link><description>&lt;p&gt;随着Android操作系统的进步，智能手机的使用日益增加。随后，有报道称，恶意个人和黑客利用 Android 提供的漏洞来访问用户珍视的数据。例如，此类威胁包括 2021 年针对 Android 设备发布的 Flubot 恶意软件攻击。值得注意的是，该恶意软件针对受害者在其小工具上使用的银行应用程序进行网络攻击。因此，参考对Flubot恶意软件特征和行为的理解，我们的研究重点是网络威胁未来可能的攻击方式。&lt;/p&gt;&lt;p&gt;最初，我们的研究包括对 Hatching Triage 平台免费存储库中发现的三个不同 Flubot 恶意软件样本进行探索性分析。&lt;/p&gt;</description><pubDate>Mon, 10 Jun 2024 18:00:01 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/analysis-of-flubot-malware-on-android-os</guid></item><item><title>【Navigating the Maze: Evolving Projects and Database Dilemmas】穿越迷宫：不断发展的项目和数据库困境</title><link>https://dzone.com/articles/navigating-the-maze-evolving-projects-and-database</link><description>&lt;p dir="ltr"&gt;想象一下：一个新项目以清晰的愿景和结构良好的代码开始。随着时间的推移，它有了自己的生命，成长为一个由功能、需求和代码模块组成的网络。尽管这种增长证明了项目的成功，但它也增加了其复杂性，如果管理不当，复杂性可能会变得难以承受。你以前听说过这个故事。&lt;/p&gt;&lt;p dir="ltr"&gt;众所周知，实际编程开始将这种复杂性转变为可维护和可扩展的形式。我们需要确保项目的扩展是线性的，或者至少其复杂性是可预测的。该项目的关系数据库模式通常是这项工作的主要战场。&lt;/p&gt;</description><pubDate>Mon, 10 Jun 2024 17:00:00 GMT</pubDate><guid isPermaLink="true">https://dzone.com/articles/navigating-the-maze-evolving-projects-and-database</guid></item></channel></rss>