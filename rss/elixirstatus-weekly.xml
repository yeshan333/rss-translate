<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Elixir状态</title><link>https://elixirstatus.com/</link><description>来自 Elixir 和 Phoenix 社区的 Elixir 新闻和状态更新</description><lastBuildDate>Tue, 25 Jun 2024 03:06:18 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>【Using AI to Boost Accessibility and SEO】</title><link>https://elixirstatus.com/p/QI0HM-using-ai-to-boost-accessibility-and-seo</link><description>&lt;table border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="80"&gt;&lt;img height="64" src="https://elixirstatus.com/rss/avatar/brainlid?uid=QI0HM" width="64" /&gt;&lt;/td&gt;&lt;td&gt;&lt;h1&gt;使用 AI 提高可访问性和 SEO&lt;/h1&gt; &lt;font color="#aaa"&gt;&lt;font color="#aaa"&gt;2024 年 6 月 24&lt;/font&gt;&lt;font color="#aaa"&gt;日&lt;i class="icon-git_circle"&gt;&lt;/i&gt;脑盖&lt;/font&gt;&lt;font color="#aaa"&gt;
                    
                  &lt;/font&gt;&lt;/font&gt;&lt;p&gt;让人工智能为您服务，看看它如何增强您网站的可访问性和搜索引擎优化！我们深入研究利用 OpenAI 的 ChatGPT 和 Anthropic 的 Claude 等人工智能工具来自动创建上下文感知的图像描述和标题。了解人工智能如何简化图像的批量处理，生成替代文本的最佳实践，并提高整体网络可访问性，使您的内容更具包容性和可发现性。查找用于将这些强大功能集成到内容管理系统中的分步指南、代码示例和提示。对于任何热衷于优化数字内容的人来说，这是一本发人深省的读物！&lt;/p&gt;&lt;p&gt; &lt;a href="https://fly.io/phoenix-files/using-ai-to-boost-accessibility-and-seo/"&gt;https://fly.io/phoenix-files/using-ai-to-boost-accessibility-and-seo/&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt;&lt;small&gt;&lt;a href="https://elixirstatus.com/p/QI0HM-using-ai-to-boost-accessibility-and-seo"&gt;查看 ElixirStatus&lt;/a&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><pubDate>Mon, 24 Jun 2024 13:26:04 GMT</pubDate><guid isPermaLink="true">https://elixirstatus.com/p/QI0HM-using-ai-to-boost-accessibility-and-seo</guid></item><item><title>【How to manage and install multiple versions of Erlang/OTP and Elixir via vfox in Windows】</title><link>https://elixirstatus.com/p/qbJzf-how-to-manage-and-install-multiple-versions-of-erlangotp-and-elixir-via-vfox-in-windows</link><description>&lt;table border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="80"&gt;&lt;img height="64" src="https://elixirstatus.com/rss/avatar/yeshan333?uid=qbJzf" width="64" /&gt;&lt;/td&gt;&lt;td&gt;&lt;h1&gt;如何在 Windows 中通过 vfox 管理和安装多个版本的 Erlang/OTP 和 Elixir&lt;/h1&gt; &lt;font color="#aaa"&gt;&lt;font color="#aaa"&gt;2024 年 6 月 22 日&lt;/font&gt;&lt;font color="#aaa"&gt;通过&lt;i class="icon-git_circle"&gt;&lt;/i&gt;野山333&lt;/font&gt;&lt;font color="#aaa"&gt;
                    
                  &lt;/font&gt;&lt;/font&gt;&lt;p&gt;&lt;img alt="横幅" src="https://telegraph.shansan.top/file/e47d436092cf177a103bc.png" /&gt;大约一个月前，我写了一篇关于如何使用跨平台版本管理工具&lt;a href="https://github.com/version-fox/vfox"&gt;vfox&lt;/a&gt;在 Linux 系统下安装和管理多个 Erlang/OTP 和 Elixir 版本的文章 -&amp;gt;&lt;a href="https://dev.to/yeshan333/install-mutiple-erlang-and-elixir-with-vfox-57ii"&gt;使用 vfox 安装多个 Erlang 和 Elixir&lt;/a&gt; 。文中使用的演示操作系统是Ubuntu 20.04 Linux操作系统。&lt;/p&gt;&lt;p&gt;近期，最新版本的&lt;a href="https://github.com/version-fox/vfox-erlang"&gt;vfox-erlang&lt;/a&gt;和&lt;a href="https://github.com/version-fox/vfox-elixir"&gt;vfox-elixir&lt;/a&gt;插件已经支持Windows平台下多个版本的Erlang/OTP和Elixir的安装和管理。并已通过&lt;a href="https://en.wikipedia.org/wiki/System_testing"&gt;端到端测试&lt;/a&gt;-&amp;gt;&lt;a href="https://github.com/version-fox/vfox-elixir/actions/runs/9566734284"&gt;测试&lt;/a&gt;。 &lt;/p&gt;&lt;p&gt;&lt;img alt="端到端测试" src="https://telegraph.shansan.top/file/bb7f655d91fc39e97c57c.png" /&gt;&lt;/p&gt;&lt;p&gt;本文将以Windows 10操作系统为例，教您如何在Windows平台上安装和管理多个Erlang/OTP和Elixir版本。&lt;/p&gt;&lt;pre&gt; &lt;code class="powershell"&gt;&amp;gt; Get-ComputerInfo WindowsBuildLabEx : 22621.1.amd64fre.ni_release.220506-1250 WindowsCurrentVersion : 6.3 WindowsInstallationType : Client WindowsProductName : Windows 10 Pro ......&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;文章链接（阅读更多详细信息）-&amp;gt; &lt;a href="https://dev.to/yeshan333/amazing-how-to-manage-and-install-multiple-versions-of-erlangotp-and-elixir-via-vfox-in-windows-32bp"&gt;https://dev.to/yeshan333/amazing-how-to-manage-and-install-multiple-versions-of-erlangotp-and-elixir-via-vfox-in-windows -32bp&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt; &lt;small&gt;&lt;a href="https://elixirstatus.com/p/qbJzf-how-to-manage-and-install-multiple-versions-of-erlangotp-and-elixir-via-vfox-in-windows"&gt;查看 ElixirStatus&lt;/a&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><pubDate>Sat, 22 Jun 2024 08:20:43 GMT</pubDate><guid isPermaLink="true">https://elixirstatus.com/p/qbJzf-how-to-manage-and-install-multiple-versions-of-erlangotp-and-elixir-via-vfox-in-windows</guid></item><item><title>【Elixir, Phoenix, and the OWASP Top 10】</title><link>https://elixirstatus.com/p/PXuF6-elixir-phoenix-and-the-owasp-top-10</link><description>&lt;table border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="80"&gt;&lt;img height="64" src="https://elixirstatus.com/rss/avatar/realcorvus?uid=PXuF6" width="64" /&gt;&lt;/td&gt;&lt;td&gt;&lt;h1&gt; Elixir、Phoenix 和 OWASP 前 10 名&lt;/h1&gt;&lt;font color="#aaa"&gt;&lt;font color="#aaa"&gt;2024 年 6 月 20&lt;/font&gt;&lt;font color="#aaa"&gt;日&lt;i class="icon-git_circle"&gt;&lt;/i&gt;真正的乌鸦&lt;/font&gt;&lt;font color="#aaa"&gt;
                    
                  &lt;/font&gt;&lt;/font&gt;&lt;p&gt;关于 Elixir、Phoenix 和 OWASP Top 10 的新博客文章。Top 10 是经常推荐的安全指南，对开发人员来说是有用的资源。了解如何在自己的工作中有效地使用它！&lt;/p&gt;&lt;p&gt; &lt;a href="https://paraxial.io/blog/owasp-top-ten"&gt;https://paraxis.io/blog/owasp-top-ten&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt;&lt;small&gt;&lt;a href="https://elixirstatus.com/p/PXuF6-elixir-phoenix-and-the-owasp-top-10"&gt;查看 ElixirStatus&lt;/a&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><pubDate>Thu, 20 Jun 2024 13:38:13 GMT</pubDate><guid isPermaLink="true">https://elixirstatus.com/p/PXuF6-elixir-phoenix-and-the-owasp-top-10</guid></item><item><title>【How to use WebComponents inside Phoenix LiveView】</title><link>https://elixirstatus.com/p/A4ow8-how-to-use-webcomponents-inside-phoenix-liveview</link><description>&lt;table border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="80"&gt;&lt;img height="64" src="https://elixirstatus.com/rss/avatar/ViktoriiaYar?uid=A4ow8" width="64" /&gt;&lt;/td&gt;&lt;td&gt;&lt;h1&gt;如何在 Phoenix LiveView 中使用 WebComponents&lt;/h1&gt; &lt;font color="#aaa"&gt;&lt;font color="#aaa"&gt;2024 年 6 月 20&lt;/font&gt;&lt;font color="#aaa"&gt;日&lt;i class="icon-git_circle"&gt;&lt;/i&gt;维多利亚·亚尔&lt;/font&gt;&lt;font color="#aaa"&gt;
                    
                  &lt;/font&gt;&lt;/font&gt;&lt;p&gt;正在努力在 Phoenix LiveView 应用程序中构建一致的 UI？ Freshcode 的博客文章揭示了 WebComponents 如何提供帮助。了解此标准化解决方案如何允许可重用​​组件与 LiveView 和其他框架无缝协作。立即阅读以简化您的 UI 开发： &lt;a href="https://www.freshcodeit.com/blog/web-components-in-liveview"&gt;https://www.freshcodeit.com/blog/web-components-in-liveview&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt; &lt;small&gt;&lt;a href="https://elixirstatus.com/p/A4ow8-how-to-use-webcomponents-inside-phoenix-liveview"&gt;查看 ElixirStatus&lt;/a&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><pubDate>Thu, 20 Jun 2024 10:44:13 GMT</pubDate><guid isPermaLink="true">https://elixirstatus.com/p/A4ow8-how-to-use-webcomponents-inside-phoenix-liveview</guid></item><item><title>【LiveView Is Not a Zero-JS Framework, It’s a Zero-Boring-JS Framework】</title><link>https://elixirstatus.com/p/X0SZv-liveview-is-not-a-zero-js-framework-its-a-zero-boring-js-framework</link><description>&lt;table border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="80"&gt;&lt;img height="64" src="https://elixirstatus.com/rss/avatar/tylerbarker?uid=X0SZv" width="64" /&gt;&lt;/td&gt;&lt;td&gt;&lt;h1&gt; LiveView 不是一个零 JS 框架，它是一个零无聊的 JS 框架&lt;/h1&gt;&lt;font color="#aaa"&gt;&lt;font color="#aaa"&gt;2024 年 6 月 20&lt;/font&gt;&lt;font color="#aaa"&gt;日&lt;i class="icon-git_circle"&gt;&lt;/i&gt;泰勒巴克&lt;/font&gt;&lt;font color="#aaa"&gt;
                    
                  &lt;/font&gt;&lt;/font&gt;&lt;p&gt;如果我们将 Phoenix LiveView 视为一个零 JS 框架，那么我们就忽略了当我们使用客户端挂钩来实现 JS 互操作性时出现的可能性。 &lt;a href="http://tylerbarker.com/posts/liveview-is-not-a-zero-js-framework-it-s-a-zero-boring-js-framework"&gt;这篇博文&lt;/a&gt;详细介绍了我在构建 Prototape 时是如何做到这一点的。&lt;/p&gt;&lt;hr /&gt; &lt;small&gt;&lt;a href="https://elixirstatus.com/p/X0SZv-liveview-is-not-a-zero-js-framework-its-a-zero-boring-js-framework"&gt;查看 ElixirStatus&lt;/a&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><pubDate>Thu, 20 Jun 2024 05:17:32 GMT</pubDate><guid isPermaLink="true">https://elixirstatus.com/p/X0SZv-liveview-is-not-a-zero-js-framework-its-a-zero-boring-js-framework</guid></item><item><title>【Stack Overflow Survey 2024】</title><link>https://elixirstatus.com/p/gEelH-stack-overflow-survey-2024</link><description>&lt;table border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="80"&gt;&lt;img height="64" src="https://elixirstatus.com/rss/avatar/pauloffborba?uid=gEelH" width="64" /&gt;&lt;/td&gt;&lt;td&gt;&lt;h1&gt; 2024 年 Stack Overflow 调查&lt;/h1&gt;&lt;font color="#aaa"&gt;&lt;font color="#aaa"&gt;2024 年 6 月 19&lt;/font&gt;&lt;font color="#aaa"&gt;日&lt;i class="icon-git_circle"&gt;&lt;/i&gt;保罗夫博巴&lt;/font&gt;&lt;font color="#aaa"&gt;
                    
                  &lt;/font&gt;&lt;/font&gt;&lt;p&gt;Stack Overflow 的年度调查正在进行中。很高兴看到 Elixir、Phoenix 和 Ash 再次登顶！ Elixir 和 Phoenix 是最受欢迎的语言/框架。我搜索了他们并最终找到了你。&lt;/p&gt;&lt;p&gt; &lt;a href="https://stackoverflow.com/"&gt;https://stackoverflow.com/&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt;&lt;small&gt;&lt;a href="https://elixirstatus.com/p/gEelH-stack-overflow-survey-2024"&gt;查看 ElixirStatus&lt;/a&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><pubDate>Wed, 19 Jun 2024 20:49:30 GMT</pubDate><guid isPermaLink="true">https://elixirstatus.com/p/gEelH-stack-overflow-survey-2024</guid></item><item><title>【Turbocharge your Ecto Schemas with this One Trick】</title><link>https://elixirstatus.com/p/mCRA3-turbocharge-your-ecto-schemas-with-this-one-trick</link><description>&lt;table border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="80"&gt;&lt;img height="64" src="https://elixirstatus.com/rss/avatar/John-Elm?uid=mCRA3" width="64" /&gt;&lt;/td&gt;&lt;td&gt;&lt;h1&gt;用这一技巧增强你的 Ecto 模式&lt;/h1&gt;&lt;font color="#aaa"&gt;&lt;font color="#aaa"&gt;2024 年 6 月 19&lt;/font&gt;&lt;font color="#aaa"&gt;日&lt;i class="icon-git_circle"&gt;&lt;/i&gt;约翰·埃尔姆&lt;/font&gt;&lt;font color="#aaa"&gt;
                    
                  &lt;/font&gt;&lt;/font&gt;&lt;p&gt;Ecto 架构字段名称不允许使用特殊字符。或者他们……？&lt;/p&gt;&lt;p&gt;推文： &lt;a href="https://x.com/JohnElmLabs/status/1803465036511268912"&gt;https://x.com/JohnElmLabs/status/1803465036511268912&lt;/a&gt;&lt;/p&gt;&lt;p&gt;帖子： &lt;a href="https://johnelmlabs.com/posts/ecto-schema-source-option"&gt;https://johnelmlabs.com/posts/ecto-schema-source-option&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt;&lt;small&gt;&lt;a href="https://elixirstatus.com/p/mCRA3-turbocharge-your-ecto-schemas-with-this-one-trick"&gt;查看 ElixirStatus&lt;/a&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><pubDate>Wed, 19 Jun 2024 16:45:42 GMT</pubDate><guid isPermaLink="true">https://elixirstatus.com/p/mCRA3-turbocharge-your-ecto-schemas-with-this-one-trick</guid></item><item><title>【ExTypesense - Typesense client with support for importing your Ecto schemas】</title><link>https://elixirstatus.com/p/Sov4c-extypesense---typesense-client-with-support-for-importing-your-ecto-schemas</link><description>&lt;table border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="80"&gt;&lt;img height="64" src="https://elixirstatus.com/rss/avatar/jaeyson?uid=Sov4c" width="64" /&gt;&lt;/td&gt;&lt;td&gt;&lt;h1&gt; ExTypesense - 支持导入 Ecto 模式的 Typesense 客户端&lt;/h1&gt;&lt;font color="#aaa"&gt;&lt;font color="#aaa"&gt;2024 年 6 月 19&lt;/font&gt;&lt;font color="#aaa"&gt;日&lt;i class="icon-git_circle"&gt;&lt;/i&gt;杰森&lt;/font&gt;&lt;font color="#aaa"&gt;
                    
                  &lt;/font&gt;&lt;/font&gt;&lt;p&gt;你好！我想分享一个支持 Ecto 的简单 Typesense 库。非常感谢任何反馈！&lt;/p&gt;&lt;p&gt;&lt;a href="https://hex.pm/packages/ex_typesense"&gt;六角封装&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/jaeyson/ex_typesense"&gt;吉图布&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt;&lt;small&gt;&lt;a href="https://elixirstatus.com/p/Sov4c-extypesense---typesense-client-with-support-for-importing-your-ecto-schemas"&gt;查看 ElixirStatus&lt;/a&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><pubDate>Wed, 19 Jun 2024 14:13:11 GMT</pubDate><guid isPermaLink="true">https://elixirstatus.com/p/Sov4c-extypesense---typesense-client-with-support-for-importing-your-ecto-schemas</guid></item><item><title>【Backpex - a highly customizable admin panel for Phoenix LiveView applications】</title><link>https://elixirstatus.com/p/pmWi0-backpex---a-highly-customizable-admin-panel-for-phoenix-liveview-applications</link><description>&lt;table border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="80"&gt;&lt;img height="64" src="https://elixirstatus.com/rss/avatar/d3d3h3h3?uid=pmWi0" width="64" /&gt;&lt;/td&gt;&lt;td&gt;&lt;h1&gt; Backpex - Phoenix LiveView 应用程序的高度可定制管理面板&lt;/h1&gt;&lt;font color="#aaa"&gt;&lt;font color="#aaa"&gt;2024 年 6 月 18&lt;/font&gt;&lt;font color="#aaa"&gt;日&lt;i class="icon-git_circle"&gt;&lt;/i&gt;d3d3h3h3&lt;/font&gt;&lt;font color="#aaa"&gt;
                    
                  &lt;/font&gt;&lt;/font&gt;&lt;p&gt;大家好！ :)&lt;/p&gt;&lt;p&gt;我很高兴与您分享我们的心脏项目 Backpex。在构建了几个 Phoenix 应用程序之后，我们意识到在构建管理面板时我们正在重复自己。我们一遍又一遍地编写相同的 CRUD 视图、搜索和过滤功能。我们想要一个工具，让我们能够快速构建这些视图并专注于构建应用程序的核心功能。&lt;/p&gt;&lt;p&gt;我们想要的工具必须能够在一个项目中充当简单的后端管理面板，同时成为另一个项目中应用程序的核心。我们查看了现有的解决方案，但发现它们都没有提供我们所寻求的灵活性和定制性，特别是在实时更新和 LiveView 功能方面。我们决定开发 Backpex 来解决这个问题，并为 Phoenix LiveView 应用程序提供高度可定制的管理面板。 Backpex 不仅应该是开发人员的简单管理界面，而且还应该是最终用户的美观 UI。&lt;/p&gt;&lt;p&gt;尽管 Backpex 已经提供了很多功能，但仍有很多工作要做。对于今后的工作，我们也有很多想法。这就是为什么我们非常欢迎贡献并感谢任何帮助。我们刚刚发布了&lt;a href="https://github.com/orgs/naymspace/projects/2"&gt;公共路线图&lt;/a&gt;，并创建了一些在 GitHub 上开放供贡献的问题（请参阅“good-first-issue”标签）。&lt;/p&gt;&lt;p&gt;我们真的很想听听您接下来想看到什么以及缺少什么。我们很乐意听到您的反馈，祝您度过愉快的一天！ :)&lt;/p&gt;&lt;p&gt;&lt;a href="https://hex.pm/packages/backpex"&gt;六角封装&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/naymspace/backpex"&gt;GitHub&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://backpex.live/"&gt;现场演示&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt;&lt;small&gt;&lt;a href="https://elixirstatus.com/p/pmWi0-backpex---a-highly-customizable-admin-panel-for-phoenix-liveview-applications"&gt;查看 ElixirStatus&lt;/a&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><pubDate>Tue, 18 Jun 2024 13:59:16 GMT</pubDate><guid isPermaLink="true">https://elixirstatus.com/p/pmWi0-backpex---a-highly-customizable-admin-panel-for-phoenix-liveview-applications</guid></item><item><title>【Thinking Elixir 207: Poison v6 is Waaay Faster and Drama Turns Productive】</title><link>https://elixirstatus.com/p/VBsHc-thinking-elixir-207-poison-v6-is-waaay-faster-and-drama-turns-productive</link><description>&lt;table border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="80"&gt;&lt;img height="64" src="https://elixirstatus.com/rss/avatar/brainlid?uid=VBsHc" width="64" /&gt;&lt;/td&gt;&lt;td&gt;&lt;h1&gt; Thinking Elixir 207：Poison v6 速度更快，戏剧效果更佳&lt;/h1&gt;&lt;font color="#aaa"&gt;&lt;font color="#aaa"&gt;2024 年 6 月 18&lt;/font&gt;&lt;font color="#aaa"&gt;日&lt;i class="icon-git_circle"&gt;&lt;/i&gt;脑盖&lt;/font&gt;&lt;font color="#aaa"&gt;
                    
                  &lt;/font&gt;&lt;/font&gt;&lt;p&gt;&lt;a href="https://podcast.thinkingelixir.com"&gt;《思考灵丹妙药》&lt;/a&gt;第207集。新闻包括 Poison v6.0.0 的发布（使其速度比以往更快）、Lumen/Firefly 项目的终止以及 Elixir Web 应用程序的新可访问性测试库。 José Valim 讨论了使用 Phoenix LiveView 管理客户端和服务器状态，并展示了用 Elixir 编写的 AI 表情符号生成器。 ElixirConfUS 2024 门票现已发售，包含激动人心的培训和演讲选项，以及活动主持人的惊喜公告等等！&lt;/p&gt;&lt;p&gt; &lt;a href="https://podcast.thinkingelixir.com/207"&gt;https://podcast.thinkingelixir.com/207&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt; &lt;small&gt;&lt;a href="https://elixirstatus.com/p/VBsHc-thinking-elixir-207-poison-v6-is-waaay-faster-and-drama-turns-productive"&gt;查看 ElixirStatus&lt;/a&gt;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><pubDate>Tue, 18 Jun 2024 12:37:49 GMT</pubDate><guid isPermaLink="true">https://elixirstatus.com/p/VBsHc-thinking-elixir-207-poison-v6-is-waaay-faster-and-drama-turns-productive</guid></item></channel></rss>