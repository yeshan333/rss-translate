<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>微软开发者博客</title><link>https://devblogs.microsoft.com/</link><description>获取来自 Microsoft 的最新信息、见解、公告和新闻。</description><lastBuildDate>Tue, 28 May 2024 16:04:08 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>【Introducing links to source code for .NET API Docs】引入 .NET API 文档源代码的链接</title><link>https://devblogs.microsoft.com/dotnet/dotnet-docs-link-to-source-code</link><description>.NET API 参考文档现在直接链接到源代码！了解链接是如何生成的，以及未来改进的一些想法。</description><pubDate>Mon, 27 May 2024 15:00:00 GMT</pubDate><guid isPermaLink="true">https://devblogs.microsoft.com/dotnet/dotnet-docs-link-to-source-code</guid></item><item><title>【Is there any difference between String­From­IID and String­From­CLSID?】StringFromIID 和 StringFromCLSID 有什么区别吗？</title><link>https://devblogs.microsoft.com/oldnewthing/20240527-00/?p=109812</link><description>并不真地。</description><pubDate>Mon, 27 May 2024 14:00:00 GMT</pubDate><guid isPermaLink="true">https://devblogs.microsoft.com/oldnewthing/20240527-00/?p=109812</guid></item><item><title>【C#12 引入主构造函数：简化代码重构】C#12 引入主构造函数：简化代码重构</title><link>https://devblogs.microsoft.com/dotnet-ch/c12-%e5%bc%95%e5%85%a5%e4%b8%bb%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0%ef%bc%9a%e7%ae%80%e5%8c%96%e4%bb%a3%e7%a0%81%e9%87%8d%e6%9e%84</link><description>本文翻译于David Pine的这篇文章：Refactor your C# code with primary constructors 作为 .NET 8 一部分的 C# 12 引入了一组引人注目的新功能！ 在这篇文章中，我们将探讨其中一个功能，特别是主构造函数，解释其用法和相关性。 然后，我们将演示一个重构示例，以展示如何将其应用到您的代码中，并讨论其好处和潜在的缺陷。 这将帮助您了解这一更改的影响并有助于您决定是否采用该功能。  主构造函数1️⃣  主构造函数被认为是一项“C#日常”的开发人员功能。 它们允许您在一个简洁的声明中定义类或结构及其构造函数。 这可以帮助您减少需要编写的样板代码量。 如果您一直在关注 C# 版本，您可能熟悉记录类型，其中包括主构造函数的第一个示例。  与记录类型的区别  记录类型作为类或结构的类型修饰符引入，这简化了构建简单类（如数据容器）的语法。 记录可以包括主构造函数。 该构造函数不仅生成一个支持字段，而且还为每个参数公开一个公共属性。 与传统的类或结构类型不同，在传统的类或结构类型中，主构造函数参数可以在整个类定义中访问，而记录被设计为透明的数据容器。 他们本质上支持基于值的相等，这与他们作为数据持有者的预期角色相一致。 因此，它们的主构造函数参数可以作为属性访问是合乎逻辑的。  重构示例✨  .NET 提供了许多模板，如果您曾经创建过Worker Service，您可能见过以下Worker类模板代码：  namespace Example.Worker.Service { public class Worker : BackgroundService { private readonly ILogger&amp;lt;Worker&amp;gt;</description><pubDate>Mon, 27 May 2024 07:15:04 GMT</pubDate><guid isPermaLink="true">https://devblogs.microsoft.com/dotnet-ch/c12-%e5%bc%95%e5%85%a5%e4%b8%bb%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0%ef%bc%9a%e7%ae%80%e5%8c%96%e4%bb%a3%e7%a0%81%e9%87%8d%e6%9e%84</guid></item><item><title>【RNW 0.74 Launches: A Gallery Glow-up and Fabric Foundations!】RNW 0.74 发布：画廊发光和织物粉底！</title><link>https://devblogs.microsoft.com/react-native/2024-05-24-improved-gallery-fabric-0-74</link><description>我们最近发布了 React Native 0.74！除了 React Native 的所有出色功能之外，我们还一直努力增强 Windows 体验、刷新我们的 Gallery 应用程序并为 Fabric 支持奠定基础。</description><pubDate>Fri, 24 May 2024 19:00:00 GMT</pubDate><guid isPermaLink="true">https://devblogs.microsoft.com/react-native/2024-05-24-improved-gallery-fabric-0-74</guid></item><item><title>【Microsoft Graph town hall APIs now available in beta】Microsoft Graph 市政厅 API 现已提供测试版</title><link>https://devblogs.microsoft.com/microsoft365dev/microsoft-graph-town-hall-apis-now-available-in-beta</link><description>随着 Teams 现场活动的退役，取而代之的是 Teams 市政厅，我们宣布推出新的 Microsoft Graph 市政厅 API 的预览版（测试版）。</description><pubDate>Fri, 24 May 2024 15:28:54 GMT</pubDate><guid isPermaLink="true">https://devblogs.microsoft.com/microsoft365dev/microsoft-graph-town-hall-apis-now-available-in-beta</guid></item><item><title>【Setting the contents of a Windows Runtime Vector from C++/WinRT in one call】在一次调用中从 C++/WinRT 设置 Windows 运行时向量的内容</title><link>https://devblogs.microsoft.com/oldnewthing/20240524-00/?p=109804</link><description>用于更新 Windows 运行时向量的一站式商店。</description><pubDate>Fri, 24 May 2024 14:00:00 GMT</pubDate><guid isPermaLink="true">https://devblogs.microsoft.com/oldnewthing/20240524-00/?p=109804</guid></item><item><title>【宣布 Java on Azure 开发工具支持 Java on Azure Container Apps】宣布 Java on Azure 开发工具支持 Java on Azure Container Apps</title><link>https://devblogs.microsoft.com/java-ch/java-on-azure-aca</link><description>在Build 2024 期间宣布，Azure Container Apps 现在可为 Java 开发人员提供丰富的操作功能。(详细内容请参见本博客）。 我们很高兴地与大家分享，Azure Toolkit for IntelliJ 为 Azure Container Apps（Java on ACA）提供了支持，并提供了灵活的部署选项。有了这项支持，Java 开发人员可以使用 GitHub 代码库中的源代码或本地工件构建和部署他们的应用程序，用于新的 ACA 应用程序或现有的 ACA 应用程序。这将增强开发人员在云中运行容器化 Java 应用程序的能力，并加强安全态势，更好地调整容器环境的内存配置。 观看下面的演示，构建并部署您的第一个 Java on ACA 应用程序, 资源 以下是有助于进一步了解 Java on Azure Container Apps 链接列表： Java on Azure Container Apps 概述 Azure Toolkit for IntelliJ 文档</description><pubDate>Fri, 24 May 2024 07:49:31 GMT</pubDate><guid isPermaLink="true">https://devblogs.microsoft.com/java-ch/java-on-azure-aca</guid></item><item><title>【Start Simple, Scale Fast: Azure Storage for Distributed Computing】简单开始，快速扩展：用于分布式计算的 Azure 存储</title><link>https://devblogs.microsoft.com/ise/azure-storage-for-distributed-computing</link><description>Azure 存储帐户是 Azure 上最简单的资源之一，但同时也是整个 Microsoft 云生态系统中最有用和最重用的构建块之一。 Blob、租约和队列是支持强大模式的基本组件。让我们深入探讨一下为什么存储帐户应该包含在 Azure 工具包中。</description><pubDate>Fri, 24 May 2024 07:00:00 GMT</pubDate><guid isPermaLink="true">https://devblogs.microsoft.com/ise/azure-storage-for-distributed-computing</guid></item><item><title>【Announcing Java on Azure Container Apps Support for Java on Azure Developer Tools】宣布 Azure 容器应用程序支持 Java on Azure 开发人员工具</title><link>https://devblogs.microsoft.com/java/java-on-azure-aca</link><description>在 Build 2024 期间，我们宣布 Azure 容器应用程序现在为 Java 开发人员提供了一组丰富的操作功能。 （完整详细信息请参阅此博客）。我们很高兴与大家分享，Azure Toolkit for IntelliJ 已通过灵活的部署选项为 Azure 容器应用上的 Java（Java on ACA）提供支持。</description><pubDate>Fri, 24 May 2024 04:17:16 GMT</pubDate><guid isPermaLink="true">https://devblogs.microsoft.com/java/java-on-azure-aca</guid></item><item><title>【Developing cloud native apps with Aspire】使用 Aspire 开发云原生应用程序</title><link>https://devblogs.microsoft.com/visualstudio/developing-cloud-native-apps-with-aspire</link><description>我们很高兴推出 .NET Aspire，这是一个全面的堆栈，旨在简化 .NET 云原生应用程序的构建和管理方式。 .NET Aspire 为像您这样的开发人员提供了一个改进的、固执己见的框架，用于构建分布式应用程序，确保无缝且一致的开发体验。</description><pubDate>Thu, 23 May 2024 17:53:17 GMT</pubDate><guid isPermaLink="true">https://devblogs.microsoft.com/visualstudio/developing-cloud-native-apps-with-aspire</guid></item></channel></rss>