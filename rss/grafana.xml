<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Grafana Labs 上的 Grafana Labs 博客</title><link>https://grafana.com/blog/</link><description>Grafana Labs 上的 Grafana Labs 博客中的最​​新内容</description><lastBuildDate>Sat, 08 Jun 2024 16:09:59 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>【Streamlining runtime diagnostics with on-demand profiling: Inside Roblox's observability stack】通过按需分析简化运行时诊断：Roblox 的可观察性堆栈内部</title><link>https://grafana.com/blog/2024/06/07/streamlining-runtime-diagnostics-with-on-demand-profiling-inside-robloxs-observability-stack/</link><description>&lt;p&gt;每天，超过 7000 万活跃用户登录 Roblox，通过虚拟体验进行创作、玩耍和互动。无论这些体验具体是什么——领养宠物、完成障碍训练，或者在虚拟披萨店完成订单——Roblox 可观察性团队都致力于让它们变得无缝。&lt;/p&gt;&lt;p&gt; “如果您或您的孩子可以在 Roblox 上与朋友一起出去玩，并且不受任何干扰，那么你们中有多少人会感到非常高兴？”最近在旧金山湾区举行的&lt;a href="https://grafana.com/events/observabilitycon-on-the-road/"&gt;ObservabilityCON on the Road&lt;/a&gt;活动上，该社交和游戏平台的可观测性负责人晓峰韩 (Xiaofeng Han) 问道。&lt;/p&gt;&lt;p&gt;当房间里的与会者举手回应时，韩点了点头。 “对，”他说。 “可靠性非常重要。”&lt;/p&gt;&lt;p&gt;在他们的演讲中，Han 和他的同事、Roblox 首席工程师兼工程经理 Jialin Jiao 探讨了他们的团队在生产调试时面临的挑战，以及他们如何构建按需分析工作流程&lt;em&gt;&lt;a href="https://grafana.com/events/observabilitycon-on-the-road/2024/san-francisco-bay-area/scaling-robloxs-runtime-diagnosis-system-with-grafana-pyroscope/?pg=blog&amp;amp;plcmt=body-txt"&gt;。&lt;/a&gt;&lt;/em&gt; &lt;a href="https://grafana.com/oss/pyroscope/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Pyrscope&lt;/a&gt;帮助他们克服了这些挑战，为 Roblox 的全球用户群提供持续、不间断的体验。&lt;/p&gt;&lt;p&gt;&lt;em&gt;注意：Roblox 在 ObservabilityCON on the Road 2024 上的会议现已可供点播观看。您可以在下面的 YouTube 上查看完整的会议内容。&lt;/em&gt;&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;h2 id="the-challenge-debugging-at-scale"&gt;挑战：大规模调试&lt;/h2&gt;&lt;p&gt;说 Roblox 很受欢迎是轻描淡写的。&lt;/p&gt;&lt;p&gt;除了 7150 万日常用户之外，Roblox 还拥有 240 万开发者，他们总共构建了 440 万种数字体验，使其成为全球最大的社交和元宇宙平台之一。&lt;/p&gt;&lt;p&gt;也许并不奇怪，支撑所有这些交互体验的是相当复杂的 IT 基础设施。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/roblox-OCR2024/roblox-ocr2024-infrastructure-slide.jpg"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示 Roblox 的 IT 基础设施的图表。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示 Roblox 的 IT 基础设施的图表。" src="https://grafana.com/media/blog/roblox-OCR2024/roblox-ocr2024-infrastructure-slide.jpg" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; “Roblox 仍然主要在本地运行，”Han 解释道。 “我们的主要数据中心位于美国，我们的边缘数据中心分布在全球。我们总共有 1,000 多个微服务在数十万台机器上运行。因此，正如您可以想象的那样，我们如何监控调试并保持系统正常运行存在很多挑战。”&lt;/p&gt;&lt;p&gt;特别是，团队处理运行时诊断的方式充满了挑战。以分析为例，Jiao 带领与会者完成了之前（且乏味）的过程。&lt;/p&gt;&lt;p&gt;首先，当发生服务中断时，工程师必须请求临时访问生产环境，这需要管理员批准，然后登录生产实例。接下来，工程师将安装并运行分析工具，下载分析数据，然后在本地可视化和分析该数据。最后，在工程师找到他们需要的信息后，管理员必须撤销他们的生产访问权限。对于任何新的干扰，这个循环都会重复。&lt;/p&gt;&lt;p&gt; “痛点太多了，”焦说。 “这是手动的，效率低下，而且当人们登录生产服务器时实际上存在安全和隐私问题。”&lt;/p&gt;&lt;h2 id="the-solution-on-demand-profiling-with-grafana-pyroscope"&gt;解决方案：使用 Grafana Pyrscope 进行按需分析&lt;/h2&gt;&lt;p&gt;面对这些挑战，Roblox 可观测性团队开始寻找一种方法来扩展和简化其运行时诊断流程。&lt;/p&gt;&lt;p&gt;去年，在对 .NET 和 Go 进行一些概念验证和性能评估后，该团队决定使用 Grafana Pyrscope 构建端到端的按需分析工作流程。&lt;/p&gt;&lt;p&gt; “我们对 Pyrscope 进行了全面的性能评估，测量了性能影响，结果证明我们非常可以接受，”焦告诉与会者。&lt;/p&gt;&lt;p&gt;然后，随着 Grafana Pyrscope 添加到他们的工具链中，Roblox 工程师开始改变他们在生产中调试的方式。&lt;/p&gt;&lt;p&gt; “我们将 Profiler 融入到基于容器的镜像中。我们的服务框架持续监控我们的运行时配置服务，以监听我们何时需要提供哪些实例多长时间，或者何时关闭它们，”Jiao 说。 “一旦他们收到信号，他们实际上会调用 Pyrscope SDK 来动态控制 Profiler。”&lt;/p&gt;&lt;p&gt; Jiao 补充道，Roblox 工程师使用基于 Web 的内部 UI 来更新运行时配置，所有分析数据都会上传到 Grafana Cloud Profiles 中。&lt;/p&gt;&lt;p&gt;展望未来，该团队计划通过采用焦所说的&lt;em&gt;基于事件的分析&lt;/em&gt;来进一步推进该系统。在此模型中，服务关键事件（例如新部署、CPU 或内存问题）会立即自动触发分析。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/roblox-OCR2024/roblox-ocr2024-diagnostic-system.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Roblox 的运行时诊断系统图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Roblox 的运行时诊断系统图。" src="https://grafana.com/media/blog/roblox-OCR2024/roblox-ocr2024-diagnostic-system.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; Jiao 表示，他将 Roblox 当前的按需分析系统以及基于事件的分析视为最终实现&lt;em&gt;连续分析的&lt;/em&gt;“垫脚石”——连续分析是一种适用于生产环境的现代且高度可扩展的分析方法。&lt;/p&gt;&lt;p&gt; “Pyrscope 从一开始就是为了连续分析而构建的，”Jiao 说。 “这就是为什么我们实际上需要一些深入的技术支持，以及 SDK 中的新 API，[以实现按需分析]。幸运的是，我们在 Grafana Labs 团队中有一位出色的合作伙伴；他们的技术支持非常棒。”&lt;/p&gt;&lt;h2 id="the-results-so-far-identifying-and-eliminating-bottlenecks"&gt;结果（到目前为止）：识别并消除瓶颈&lt;/h2&gt;&lt;p&gt;即使长期目标是持续分析，Roblox 也已经从转向 Grafana Pyrscope 中获益匪浅。 Jiao 表示，自从实施按需分析和改进的诊断系统以来，他们收到了工程师的“压倒性的积极反馈”。&lt;/p&gt;&lt;p&gt;特别是，这些工程师意识到他们现在可以更快、更有效地发现和解决瓶颈。举个例子，一组工程师能够识别并替换性能不佳的 JSON 库，从而使 CPU 使用率降低了 36%。同样，按需分析使团队用简单的数组查找替换了正则表达式匹配模式——这是另一个相当简单的更改，导致 CPU 使用率降低了 40%。&lt;/p&gt;&lt;p&gt;在另一个示例中，Roblox 工程师团队在优化和强化新服务时使用按需分析来发现性能问题的根本原因，并将吞吐量提高 10 倍。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/roblox-OCR2024/roblox-ocr2024-success-stories-slide.jpg"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="幻灯片展示了 Roblox 与 Grafana Pyrscope 的成功故事。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="幻灯片展示了 Roblox 与 Grafana Pyrscope 的成功故事。" src="https://grafana.com/media/blog/roblox-OCR2024/roblox-ocr2024-success-stories-slide.jpg" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; Han 在 ObservabilityCON on the Road 演讲结束时指出，传统上，日志、指标和痕迹被认为是可观察性的三大支柱。但通过 Grafana Pyrscope 以及他们与 Grafana Labs 团队的合作，Roblox 已经能够拥抱第四个（也是关键的）支柱：通过分析进行运行时诊断。&lt;/p&gt;&lt;p&gt; “我们共同努力利用我们拥有的所有数据来继续提高 Roblox 系统的可靠性、生产力和效率，并希望为我们的客户提供持续、不间断、无停机的体验，”他说。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始连续分析、指标、日志、跟踪和仪表板的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Fri, 07 Jun 2024 14:46:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/07/streamlining-runtime-diagnostics-with-on-demand-profiling-inside-robloxs-observability-stack/</guid></item><item><title>【Snowflake data visualization: all the latest features to monitor metrics, enhance security, and more】雪花数据可视化：用于监控指标、增强安全性等的所有最新功能</title><link>https://grafana.com/blog/2024/06/06/snowflake-data-visualization-all-the-latest-features-to-monitor-metrics-enhance-security-and-more/</link><description>&lt;p&gt;2020 年，我们&lt;a href="https://grafana.com/blog/2020/10/23/introducing-the-snowflake-enterprise-plugin-for-grafana/"&gt;为 Grafana 推出了 Snowflake Enterprise 数据源插件&lt;/a&gt;，允许用户将数据从 Snowflake 基于云的数据存储和分析服务无缝提取到 Grafana 仪表板中。它可供 Grafana Enterprise 和 Grafana Cloud 用户使用，它是一种强大的方法，不仅可以查询和可视化 Snowlake 数据，而且可以与其他数据源一起执行此操作，因此您可以在几分钟内发现相关性和其他有意义的见解。&lt;/p&gt;&lt;p&gt;去年，我们还宣布了&lt;a href="https://grafana.com/blog/2023/05/24/how-to-monitor-snowflake-with-grafana-cloud/"&gt;针对 Grafana Cloud 的 Snowflake 专用集成&lt;/a&gt;，提供两个预构建的仪表板 - &lt;strong&gt;Snowflake 数据所有权&lt;/strong&gt;（如下图所示）仪表板和&lt;strong&gt;Snowflake Overview&lt;/strong&gt;仪表板 - 帮助用户监控其&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-infrastructure/integrations/integration-reference/integration-snowflake/#metrics"&gt;Snowflake 数据云使用情况和计费指标&lt;/a&gt;。该集成还引入了一&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-infrastructure/integrations/integration-reference/integration-snowflake/#alerts"&gt;组六个与 Snowflake 相关的警报，&lt;/a&gt;自动安装到您的 Grafana Cloud 帐户中。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/snowflake-updates/snowflake-plugin-updates-data-ownership-dashboard.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Snowflake 数据所有权仪表板的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Snowflake 数据所有权仪表板的屏幕截图。" src="https://grafana.com/media/blog/snowflake-updates/snowflake-plugin-updates-data-ownership-dashboard.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;而且进展并没有就此停止。在这篇博文中，我们回顾了一些最近的更新——从新的预构建仪表板到更强大的安全选项——这些更新进一步增强了在 Grafana 中可视化和管理 Snowflake 指标时的用户体验。&lt;/p&gt;&lt;h2 id="new-dashboards-and-visualizations"&gt;新的仪表板和可视化&lt;/h2&gt;&lt;p&gt;在 Snowflake 插件 1.9 版中，我们推出了一个名为&lt;strong&gt;Snowpark Metrics&lt;/strong&gt;的新预构建仪表板。您可以使用此仪表板来监视和分析&lt;a href="https://www.snowflake.com/en/data-cloud/snowpark/" rel="noopener noreferrer" target="_blank"&gt;Snowpark&lt;/a&gt;的指标，Snowpark 是一组库和运行时，可在 Snowflake 中安全地部署和处理 Python 和其他编程语言，以构建数据管道、机器学习模型等。&lt;/p&gt;&lt;p&gt;通过 Snowpark Metrics 仪表板，您可以一目了然地了解事件表中的所有活动功能和过程。您还可以查看和筛选特定数据库上使用的函数，以及监视函数、内存和 CPU 使用情况，以帮助识别潜在的瓶颈。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/snowflake-updates/snowflake-plugin-updates-snowpark-metrics-dashboard.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Snowpark Metrics 仪表板的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Snowpark Metrics 仪表板的屏幕截图。" src="https://grafana.com/media/blog/snowflake-updates/snowflake-plugin-updates-snowpark-metrics-dashboard.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;此外，我们还发布了新的&lt;strong&gt;日志&lt;/strong&gt;仪表板，您可以在其中导航事件表中的日志消息。这对于调试升级警报或使用时间过滤器深入了解系统在任何给定时间发生的情况非常有用。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/snowflake-updates/snowflake-plugin-updates-logs-dashboard.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="新日志仪表板的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="新日志仪表板的屏幕截图。" src="https://grafana.com/media/blog/snowflake-updates/snowflake-plugin-updates-logs-dashboard.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="security-enhancements"&gt;安全增强&lt;/h2&gt;&lt;p&gt;我们还一直致力于为 Snowflake 数据源插件提供更丰富的安全功能。&lt;/p&gt;&lt;p&gt;例如，您现在可以使用&lt;strong&gt;密钥对身份验证&lt;/strong&gt;在基本身份验证之外添加另一个更强大的安全层。要生成公钥和私钥，我们建议遵循&lt;a href="https://docs.snowflake.com/en/user-guide/key-pair-auth.html" rel="noopener noreferrer" target="_blank"&gt;Snowflake 文档&lt;/a&gt;。另外，当使用密钥对身份验证时，请务必更新 Snowflake 中的&lt;code&gt;rsa_public_key&lt;/code&gt;并在数据源配置中提供用户名和未加密的私钥。&lt;/p&gt;&lt;p&gt;此外，您现在可以使用&lt;strong&gt;OAuth 身份验证&lt;/strong&gt;代表登录 Grafana 的用户将令牌传递给 Snowflake。此功能适用于我们&lt;a href="https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/"&gt;支持的身份验证提供商&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;最后，Snowflake 插件现在支持&lt;strong&gt;&lt;a href="https://grafana.com/blog/2023/10/05/unify-and-query-private-network-data-in-grafana-cloud-private-data-source-connect-is-now-ga/"&gt;私有数据源连接 (PDC)&lt;/a&gt;&lt;/strong&gt; ，它使您能够从 Grafana Cloud 查询网络安全的数据源。通过部署 PDC 代理，您可以在 VPC 或本地网络与 Grafana 云堆栈之间建立安全链接，从而无需将各种 IP 地址列入白名单，并帮助您的团队更安全（轻松）地可视化并发出警报您的私人数据。要了解有关 PDC 的更多信息，您可以参考我们的&lt;a href="https://grafana.com/docs/grafana-cloud/connect-externally-hosted/private-data-source-connect/?pg=blog&amp;amp;plcmt=body-txt"&gt;技术文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="custom-session-parameters-and-default-queries"&gt;自定义会话参数和默认查询&lt;/h2&gt;&lt;p&gt;Snowflake 具有用户可以在各个级别设置的&lt;a href="https://docs.snowflake.com/en/sql-reference/parameters" rel="noopener noreferrer" target="_blank"&gt;参数&lt;/a&gt;。这些参数允许您控制帐户、用户会话和对象的行为，并且它们都有默认值。 Snowflake 数据源插件的用户现在可以灵活地覆盖和自定义其会话参数，例如增加客户端内存限制。&lt;/p&gt;&lt;p&gt;现在还可以自定义创建新可视化时使用的默认查询。这在查询数据时提供了一个坚实的起点，特别是当您倾向于从同一个数据库进行查询时。&lt;/p&gt;&lt;h2 id="whats-next-and-how-to-learn-more"&gt;下一步是什么以及如何了解更多信息&lt;/h2&gt;&lt;p&gt;展望未来，我们正在与 Snowflake 团队合作开发演示仪表板，该仪表板将允许您可视化和过滤跟踪 - 所以请继续关注！&lt;/p&gt;&lt;p&gt; Snowflake 插件可供拥有&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;帐户或&lt;a href="https://grafana.com/products/enterprise/grafana/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Enterprise&lt;/a&gt;许可证的用户使用。如需了解更多信息或开始使用，请查看&lt;a href="https://grafana.com/solutions/snowflake/visualize/?pg=blog&amp;amp;plcmt=body-txt"&gt;Snowflake 解决方案页面&lt;/a&gt;和&lt;a href="https://grafana.com/docs/plugins/grafana-snowflake-datasource/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;技术文档&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;em&gt;开始使用我们的企业数据源插件的最简单方法是在&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;中。我们拥有慷慨的永久免费套餐，其中包括 3 个活跃用户对企业数据源的访问权限。如果您还没有， &lt;a href="https://grafana.com/auth/sign-up/create-user?pg=plugins&amp;amp;plcmt=grafana-synthetic-monitoring-app"&gt;请立即免费注册！&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description><pubDate>Thu, 06 Jun 2024 12:12:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/06/snowflake-data-visualization-all-the-latest-features-to-monitor-metrics-enhance-security-and-more/</guid></item><item><title>【6 tips to improve your Grafana plugin before you publish】发布前改进 Grafana 插件的 6 个技巧</title><link>https://grafana.com/blog/2024/06/06/6-tips-to-improve-your-grafana-plugin-before-you-publish/</link><description>&lt;p&gt;无论插件是帮助您利用外部数据源还是向仪表板添加新的可视化类型，插件都是自定义和扩展 Grafana 价值的强大方法。&lt;/p&gt;&lt;p&gt;现在有一个丰富（且不断发展）的 Grafana 插件生态系统可供您选择。虽然其中一些插件是由 Grafana Labs 团队创建和维护的，但其中许多插件是由我们的商业合作伙伴和社区成员贡献的。&lt;/p&gt;&lt;p&gt;首先，我们要感谢所有已经开发或正在开发我们平台插件的合作伙伴和社区成员。您是使 Grafana 成为真正开放且可扩展的可观察性平台的重要组成部分。&lt;/p&gt;&lt;p&gt;其次，我们希望提供一些指导，使您能够比以往更轻松地将插件发布到&lt;a href="https://grafana.com/grafana/plugins/?pg=blog&amp;amp;plcmt=body-txt"&gt;我们的目录&lt;/a&gt;中。如果您在将插件提交给我们进行审核和发布之前对其进行最后的修改，那么您来对地方了。&lt;/p&gt;&lt;p&gt;在这篇博文中，我们提供了六个重要提示，帮助您为我们的审核流程准备插件、发布插件并使其被全球数百万 Grafana 用户发现。&lt;/p&gt;&lt;p&gt;&lt;em&gt;注意：本文假设您已经了解不同类型的 Grafana 插件以及如何构建插件。如果您想了解有关如何创建第一个插件的更多信息，我们建议您阅读我们的&lt;a href="https://grafana.com/developers/plugin-tools/?pg=blog&amp;amp;plcmt=body-txt"&gt;入门&lt;/a&gt;指南和&lt;a href="https://grafana.com/developers/plugin-tools/introduction/?pg=blog&amp;amp;plcmt=body-txt"&gt;插件开发简介&lt;/a&gt;页面。&lt;/em&gt;&lt;/p&gt;&lt;h2 id="tip-1-build-a-comprehensive-readme-file"&gt;提示 1：构建全面的自述文件&lt;/h2&gt;&lt;p&gt;想想安装了您的插件的人需要多长时间才能从零到“啊哈！”您希望确保用户拥有配置和开始尽可能高效地使用您的插件所需的所有信息。&lt;/p&gt;&lt;p&gt;其中大部分是通过编写良好的自述文件来实现的，它基本上就像插件的商店橱窗。我们为插件开发人员提供这个由&lt;code&gt;create-plugin tool&lt;/code&gt;生成的&lt;a href="https://raw.githubusercontent.com/grafana/plugin-tools/main/packages/create-plugin/templates/common/src/README.md" rel="noopener noreferrer" target="_blank"&gt;自述模板&lt;/a&gt;，以便他们确切地知道要包含哪些信息。&lt;/p&gt;&lt;p&gt;除了插件的基本概述、其用例以及运行它的核心要求之外，我们建议您在 GitHub 上的自述文件中包含以下一些内容：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;屏幕截图（甚至视频）&lt;/strong&gt; ：有时，帮助某人开始使用您的插件的最佳方法是向他们&lt;em&gt;展示&lt;/em&gt;，而不是&lt;em&gt;告诉&lt;/em&gt;他们，他们需要知道什么。虽然这不是必需的，但在自述文件中包含屏幕截图甚至 YouTube 视频的链接是一种很好的方式，可以直观地引导用户了解插件的功能，并帮助他们更快地入门。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;动态徽章&lt;/strong&gt;：徽章是一种流行的方式，可以为浏览 README 的任何人一目了然地提供有用信息（这些徽章也可以在 Grafana 插件目录中看到）。例如，徽章可以传达插件的最新版本、插件的下载量，或者插件已通过某些代码和安全检查——这也可以帮助建立与潜在用户的信任。您可以使用&lt;a href="http://shields.io" rel="noopener noreferrer" target="_blank"&gt;Shields.io&lt;/a&gt;上的生成器以及 Grafana.com API 来创建动态徽章，当您将新版本的插件发布到市场时，这些徽章会自动更新。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;有关如何贡献的信息&lt;/strong&gt;：为用户提供清晰的途径来提供反馈、报告错误以及与您就插件进行协作始终是一个好主意。在自述文件中，让用户知道在哪里以及如何进行联系。&lt;/li&gt;&lt;/ul&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link captioned" href="https://grafana.com/media/blog/zabbix-plugin/zabbix-plugin_dashboard.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="A screenshot of the Grafana Zabbix plugin." class="lazyload mb-0" title="*Grafana 的 Zabbix 插件的屏幕截图。*" /&gt; &lt;noscript&gt;&lt;img alt="A screenshot of the Grafana Zabbix plugin." src="https://grafana.com/media/blog/zabbix-plugin/zabbix-plugin_dashboard.png" title="*Grafana 的 Zabbix 插件的屏幕截图。*" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;figcaption class="w-100p caption text-gray-13 "&gt; &lt;em&gt;Grafana 的 Zabbix 插件的屏幕截图。&lt;/em&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="tip-2-add-metadata-to-improve-discoverability"&gt;提示 2：添加元数据以提高可发现性&lt;/h2&gt;&lt;p&gt;&lt;code&gt;plugin.json&lt;/code&gt;文件定义了有关您的插件的重要元数据，包括其显示名称、描述以及其他将影响用户如何找到您的插件的重要组件。&lt;/p&gt;&lt;p&gt;作为发布的一部分， &lt;code&gt;plugin.json&lt;/code&gt;文件中需要考虑的一些重要属性包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;code&gt;name&lt;/code&gt; ：这是在&lt;a href="https://grafana.com/grafana/plugins/?pg=blog&amp;amp;plcmt=body-txt"&gt;目录&lt;/a&gt;中向用户显示的插件的人类可读名称。尝试选择一些合乎逻辑的东西！&lt;/li&gt;&lt;li&gt; &lt;code&gt;description&lt;/code&gt; ：这允许您显示插件的用途以及为什么有人应该使用它的摘要。目标是不超过两句话。&lt;/li&gt;&lt;li&gt; &lt;code&gt;keywords&lt;/code&gt; ：这些允许您优化目录中的搜索词，使您的插件更容易被发现。例如，如果您的插件使用 JSON 数据，请在关键字中包含 JSON，这样搜索该术语的用户就更有可能找到它。不过，我们会检查评论的相关性，所以请不要超载！&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;要了解有关&lt;code&gt;plugin.json&lt;/code&gt;文件的更多信息，请查看我们的&lt;a href="https://grafana.com/developers/plugin-tools/reference/plugin-json"&gt;开发人员文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="tip-3-declare-which-versions-of-grafana-your-plugin-works-with-and-test-against-them"&gt; 提示 3：声明您的插件适用于哪些版本的 Grafana（并对其进行测试）&lt;/h2&gt;&lt;p&gt; &lt;code&gt;plugin.json&lt;/code&gt;文件还允许您指定可安装插件所需的最低 Grafana 版本，作为您的&lt;code&gt;grafanaDependency&lt;/code&gt; 。最近发布的&lt;a href="https://grafana.com/developers/plugin-tools/e2e-test-a-plugin/introduction"&gt;plugin-e2e&lt;/a&gt;库允许您轻松创建针对多个Grafana版本的端到端测试，并将这些测试作为&lt;a href="https://grafana.com/developers/plugin-tools/e2e-test-a-plugin/ci"&gt;CI流程&lt;/a&gt;的一部分运行，以持续验证您的插件是否适用于这些版本。&lt;/p&gt;&lt;h2 id="tip-4-use-provisioning-to-provide-a-test-environment"&gt;技巧 4：使用配置来提供测试环境&lt;/h2&gt;&lt;p&gt;完全透明：我们很难向插件开发人员提供具体的时间表，即我们的审核过程在发布之前需要多长时间。也就是说，您可以采取一些步骤来帮助缩短周期时间，而使用配置来提供测试环境是一项重要的工作。&lt;/p&gt;&lt;p&gt;配置需要在插件的 Docker 开发环境中准备和配置测试环境。这些测试环境对于我们验证插件的行为及其按预期工作至关重要，如果您在提交之前配置插件，您的审核期将始终较短。&lt;/p&gt;&lt;p&gt;但配置还有其他好处。这些包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;鼓励贡献&lt;/strong&gt;：开箱即用的测试环境使社区成员和插件的潜在贡献者更容易尝试新功能或提出拉取请求。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;更轻松地设置端到端测试&lt;/strong&gt;：通过将示例仪表板配置为测试环境的一部分，您可以针对本地开发和 CI 管道中的特定场景运行端到端测试。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;提高清晰度&lt;/strong&gt;：一般来说，提供的插件使精通技术的用户更容易理解插件的工作原理。例如，如果用户是开发人员，他们可能会引用配置文件来准确了解插件的配置方式并查看示例仪表板。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;要了解有关配置插件的更多信息，请访问我们的&lt;a href="https://grafana.com/developers/plugin-tools/publish-a-plugin/provide-test-environment"&gt;开发人员文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="tip-5-validate-your-plugin"&gt;提示 5：验证您的插件&lt;/h2&gt;&lt;p&gt;您可以在本地计算机或 CI 工作流程中运行我们的&lt;a href="https://github.com/grafana/plugin-validator" rel="noopener noreferrer" target="_blank"&gt;插件验证器&lt;/a&gt;工具，以生成可能阻止您的插件发布的任何安全或结构问题的报告。该工具运行一系列&lt;a href="https://github.com/grafana/plugin-validator#analyzers" rel="noopener noreferrer" target="_blank"&gt;分析器&lt;/a&gt;，以确保您的插件遵循某些最佳实践并满足&lt;a href="https://grafana.com/developers/plugin-tools/publish-a-plugin/publishing-and-signing-criteria/?pg=blog&amp;amp;plcmt=body-txt"&gt;我们与发布相关的要求&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;运行该工具的最简单方法是使用 Docker 映像，因为它需要所有必要的依赖项。例如：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;docker run --pull=always grafana/plugin-validator-cli -sourceCodeUri https://github.com/grafana/clock-panel/tree/v2.1.2 https://github.com/grafana/clock-panel/releases/download/v2.1.2/grafana-clock-panel-2.1.2.zip&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;请参阅我们的&lt;a href="https://github.com/grafana/plugin-validator" rel="noopener noreferrer" target="_blank"&gt;GitHub 存储库&lt;/a&gt;以获取完整的使用说明。&lt;/p&gt;&lt;p&gt;&lt;em&gt;注意：如果您使用下一篇技巧中讨论的 GitHub 工作流程，则您已经将验证您的插件作为发布的一部分。&lt;/em&gt;&lt;/p&gt;&lt;h2 id="tip-6-use-github-actions-to-automate-your-releases"&gt;提示 6：使用 GitHub Actions 自动化发布&lt;/h2&gt;&lt;p&gt;为了将插件发布到目录，您需要构建、签名并打包插件以进行发布。插件打包不正确是我们在提交插件发布时遇到的最常见问题之一。&lt;/p&gt;&lt;p&gt;如果您的插件在 GitHub 上可用，请务必将&lt;a href="https://grafana.com/developers/plugin-tools/create-a-plugin/set-up-github-workflows"&gt;用于插件开发的 GitHub Actions 工作流程&lt;/a&gt;添加到您的存储库。此&lt;a href="https://grafana.com/developers/plugin-tools/create-a-plugin/set-up-github-workflows#the-ci-workflow"&gt;CI 工作流程&lt;/a&gt;通过在每次提交时构建和测试插件来帮助您及早发现错误。&lt;/p&gt;&lt;p&gt;当您准备好发布插件时，请使用&lt;a href="https://grafana.com/developers/plugin-tools/create-a-plugin/set-up-github-workflows#the-release-workflow"&gt;发布工作流程&lt;/a&gt;对您的插件进行签名、打包和检查，然后再提交以供审核。该工作流程起草一个 GitHub 版本，其中签名和打包的插件作为版本资产。发布工作流程甚至使用上面提到的插件验证器工具来检查插件。&lt;/p&gt;&lt;h2 id="next-steps"&gt;下一步&lt;/h2&gt;&lt;p&gt;当您选中上述所有框并准备好发布插件时，只需前往您的 Grafana Cloud 帐户并&lt;a href="https://grafana.com/developers/plugin-tools/publish-a-plugin/publish-a-plugin#publish-your-plugin"&gt;提交您的插件以供审核即可&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;如果您想了解改进插件的其他方法，请务必查看&lt;a href="https://grafana.com/developers"&gt;Grafana 开发人员门户&lt;/a&gt;和&lt;a href="https://github.com/grafana/grafana-plugin-examples/" rel="noopener noreferrer" target="_blank"&gt;GitHub 上的插件示例。&lt;/a&gt;如果您对开发或发布过程有任何疑问，请随时&lt;a href="https://community.grafana.com/c/plugin-development/30" rel="noopener noreferrer" target="_blank"&gt;通过我们的社区论坛联系&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;编者注&lt;/strong&gt;&lt;/em&gt;：&lt;em&gt;这篇博文最初由 Grafana Labs 的前开发者倡导者 Marcus Olsson 于 2021 年 1 月撰写。它于 2024 年 6 月进行了更新，以反映发布 Grafana 插件的最新最佳实践。&lt;/em&gt;&lt;/p&gt;</description><pubDate>Thu, 06 Jun 2024 10:33:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/06/6-tips-to-improve-your-grafana-plugin-before-you-publish/</guid></item><item><title>【How we use Grafana Alloy clustering to scrape nearly 20M Prometheus metrics】我们如何使用 Grafana Alloy 集群来抓取近 2000 万个 Prometheus 指标</title><link>https://grafana.com/blog/2024/06/05/how-we-use-grafana-alloy-clustering-to-scrape-nearly-20m-prometheus-metrics/</link><description>&lt;p&gt;如果您有兴趣运行自己的 Grafana Alloy 集群以实现高可用性或水平可扩展性，那么您来对地方了。这是因为我们已经使用自己的无代理导出器系统做到了这一点，该系统允许您从 Amazon CloudWatch 等提供商处抓取数据，而无需在您自己的基础设施上运行任何应用程序。该系统是使用 Alloy 集群构建的，截至撰写本文时，它为&lt;a href="https://grafana.com/docs/grafana-cloud/account-management/regional-availability/"&gt;我们在 Grafana Cloud 中提供的所有区域&lt;/a&gt;提供了高达 1950 万个&lt;a href="https://grafana.com/docs/grafana-cloud/cost-management-and-billing/understand-your-invoice/metrics-invoice/#active-series"&gt;活动系列&lt;/a&gt;（指标）。&lt;/p&gt;&lt;p&gt;我们对它满足我们的扩展需求感到非常满意，因此我们想分享一些我们的经验。在这篇博文中，我们将仔细研究 Alloy 集群的工作原理、它如何与我们的无代理导出器一起使用（在本例中为查询 Amazon CloudWatch），以及它如何简化 Grafana Cloud 中的抓取作业。&lt;/p&gt;&lt;h2 id="what-is-grafana-alloy-clustering"&gt;什么是 Grafana Alloy 集群？&lt;/h2&gt;&lt;p&gt; &lt;a href="https://github.com/grafana/alloy" rel="noopener noreferrer" target="_blank"&gt;Grafana Alloy&lt;/a&gt;是我们的开源 OpenTelemetry Collector 发行版，具有内置 Prometheus 管道并支持指标、日志、跟踪和配置文件。其出色的功能之一是集群功能，您可以使用它在 Alloy 节点集群上配置和分发&lt;a href="https://prometheus.io/docs/concepts/jobs_instances/" rel="noopener noreferrer" target="_blank"&gt;Prometheus 抓取作业&lt;/a&gt;池。然后，该集群可以通过基于&lt;a href="https://en.wikipedia.org/wiki/Gossip_protocol/https://grafana.com/docs/alloy/latest/reference/components/pyroscope.scrape/?pg=blog&amp;amp;plcmt=body-txt" rel="noopener noreferrer" target="_blank"&gt;八卦的协议&lt;/a&gt;协调集群成员身份和作业所有权，类似于作为分布式系统实现的其他 Grafana Cloud 产品&lt;a href="https://grafana.com/blog/2020/03/25/how-were-using-gossip-to-improve-cortex-and-loki-availability/"&gt;所做的事情&lt;/a&gt;。&lt;/p&gt;&lt;p&gt; Grafana Cloud 的无代理导出器是为 Grafana Cloud 基础设施开发并在其上运行的特殊&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-infrastructure/integrations/?pg=blog&amp;amp;plcmt=body-txt"&gt;集成&lt;/a&gt;。这些集成直接在 Grafana Cloud 上配置，并在我们自己托管的 Alloy 集群上运行，因此您无需在基础设施上设置 Alloy 或导出器即可使用它们。目前，为&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-infrastructure/aws/cloudwatch-metrics/?pg=blog&amp;amp;plcmt=body-txt"&gt;AWS Observability CloudWatch 指标&lt;/a&gt;、 &lt;a href="https://grafana.com/docs/grafana-cloud/monitor-infrastructure/integrations/integration-reference/integration-confluent-cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Confluence Cloud&lt;/a&gt;和&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-infrastructure/integrations/integration-reference/integration-metrics-endpoint/?pg=blog&amp;amp;plcmt=body-txt"&gt;Metrics Endpoint&lt;/a&gt;提供无代理导出器。&lt;/p&gt;&lt;h2 id="how-alloy-clustering-works"&gt;合金聚类的工作原理&lt;/h2&gt;&lt;p&gt;在本节中，我们将重点关注启用集群所需的 Alloy 配置，并为集群提供运行组件。&lt;/p&gt;&lt;p&gt;以最基本的形式启用集群有两个部分：&lt;/p&gt;&lt;ol&gt;&lt;li&gt; Alloy 二进制文件需要在其&lt;code&gt;cluster.enabled&lt;/code&gt;标志设置为 true 的情况下运行。这可以在&lt;a href="https://grafana.com/docs/alloy/latest/reference/cli/run/?pg=blog&amp;amp;plcmt=body-txt"&gt;CLI 参数&lt;/a&gt;或&lt;a href="https://grafana.com/docs/alloy/latest/tasks/configure-alloy-clustering/#configure-alloy-clustering-with-helm-chart/?pg=blog&amp;amp;plcmt=body-txt"&gt;Kubernetes Helm 图表&lt;/a&gt;中完成，具体取决于您将运行 Alloy 的基础设施。 CLI 参数文档还描述了如果您想要自定义集群的网络设置，您可能需要使用的其他几个集群标志。这部分将集群设置为基本状态，以便任何集群组件都分布在 Alloy 节点之间。&lt;/li&gt;&lt;li&gt;配置零个或多个受支持的 Alloy&lt;a href="https://grafana.com/docs/alloy/latest/concepts/components/?pg=blog&amp;amp;plcmt=body-txt"&gt;组件&lt;/a&gt;&lt;a href="https://grafana.com/docs/alloy/latest/concepts/clustering/?pg=blog&amp;amp;plcmt=body-txt#target-auto-distribution"&gt;以在其上启用集群&lt;/a&gt;，如下面的链接所述。这部分实际上是在 Alloy 节点之间分配工作。&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://grafana.com/docs/alloy/latest/reference/components/loki.source.kubernetes/#clustering-block"&gt;loki.source.kubernetes&lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href="https://grafana.com/docs/alloy/latest/reference/components/loki.source.podlogs/"&gt;loki.source.podlogs&lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href="https://grafana.com/docs/alloy/latest/reference/components/prometheus.operator.podmonitors/"&gt;prometheus.operator.podmonitors&lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href="https://grafana.com/docs/alloy/latest/reference/components/prometheus.operator.servicemonitors/"&gt;prometheus.operator.servicemonitors&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/docs/alloy/latest/reference/components/prometheus.scrape/"&gt;普罗米修斯.scrape&lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href="https://grafana.com/docs/alloy/latest/reference/components/pyroscope.scrape/?pg=blog&amp;amp;plcmt=body-txt"&gt;热镜.刮擦&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;以下是我们的基本 Alloy 配置的大致样子的一个小示例，采用&lt;a href="https://grafana.com/docs/agent/latest/flow/concepts/config-language/files/"&gt;UTF-8 文本文件格式&lt;/a&gt;：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt;&lt;span class="lang-toolbar__item"&gt;合金&lt;/span&gt;&lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-alloy"&gt;import.http &amp;quot;pipelines&amp;quot; { url = &amp;quot;https://api/pipelines&amp;quot; // Generally want this to be set higher // than poll_timeout poll_frequency = &amp;quot;120s&amp;quot; // Set to the write timeout of the HTTP // server which serves the configs poll_timeout = &amp;quot;90s&amp;quot; arguments { api_url_base = &amp;quot;https://api&amp;quot; } }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;基本配置中的此块告诉 Alloy 从 HTTP 服务器检索并执行动态生成的配置块。 API 的纯文本响应正文示例大致如下：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt;&lt;span class="lang-toolbar__item"&gt;合金&lt;/span&gt;&lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-alloy"&gt;argument &amp;quot;api_url_base&amp;quot; {} discovery.http &amp;quot;cloudwatch&amp;quot; { url = format(&amp;quot;%s/targets/cloudwatch&amp;quot;, argument.api_url_base.value) } prometheus.scrape &amp;quot;cloudwatch&amp;quot; { clustering { enabled = true } targets = discovery.http.cloudwatch.targets forward_to = [prometheus.remote_write.cloudwatch.receiver] // We use the timestamps at which the metric is scraped, // rather than the timestamps reported by the metrics themselves. // This helps with alert queries. honor_timestamps = false } prometheus.remote_write &amp;quot;cloudwatch&amp;quot; { endpoint { url = &amp;quot;https://grafana-cloud-metrics/api/prom/push&amp;quot; } } // This hash is generated by the API and can help with // debugging, eg getting a sense of whether each // Alloy instance is using the same version of configuration. output &amp;quot;pipelines_hash&amp;quot; { value = &amp;quot;c06d59a8dc5629d7457a9aa7cff36f46&amp;quot; }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;每个 Alloy 集群节点必须收敛于完全相同的配置，以便集群能够在彼此之间分发&lt;a href="https://grafana.com/docs/alloy/latest/reference/components/prometheus.scrape/?pg=blog&amp;amp;plcmt=body-txt"&gt;prometheus.scrape&lt;/a&gt;组件。抓取组件将被分配给特定的集群节点，并且它将通过&lt;a href="https://grafana.com/docs/alloy/latest/reference/components/prometheus.scrape/#set-up-scrape-jobs-for-blackbox-exporter-targets/?pg=blog&amp;amp;plcmt=body-txt"&gt;discovery.http&lt;/a&gt;块检索的导出器配置的 JSON 数组定期从无代理导出器收集指标。我们让 API 计算前面其余块的哈希值，以便我们可以将 API 提供的服务与每个 Alloy 实例中通过其&lt;a href="https://grafana.com/docs/alloy/latest/tasks/debug/"&gt;调试 UI&lt;/a&gt;所配置的内容进行比较，以查看是否出现传播问题。&lt;/p&gt;&lt;h2 id="a-closer-look-at-grafana-cloud-agentless-exporters"&gt;仔细研究 Grafana Cloud 无代理导出器&lt;/h2&gt;&lt;p&gt;接下来，我们以&lt;a href="https://grafana.com/solutions/cloud-monitoring-aws/"&gt;AWS Observability 应用程序&lt;/a&gt;为例，深入了解什么是无代理导出器。 &lt;a href="https://grafana.com/blog/2024/05/22/how-to-visualize-amazon-cloudwatch-metrics-in-grafana/"&gt;有多种选项&lt;/a&gt;可将指标数据从 AWS 获取到 Grafana Cloud，AWS Observibility 在 Grafana Labs 运营的 Alloy 集群上运行。如果我们查看使用我们当前的系统和 Alloy 集群创建 CloudWatch 指标抓取作业的高级流程，它大致如下所示：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/alloy-clustering/cloudwatch-alloy-clustering.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="合金聚类工作流程" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="合金聚类工作流程" src="https://grafana.com/media/blog/alloy-clustering/cloudwatch-alloy-clustering.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;这一切都始于 Grafana Cloud API，它可以帮助您管理和保留托管的抓取作业配置。它通过 HTTP 以 Alloy 的配置格式为您的抓取作业配置提供服务。然后，有一个 Grafana Alloy 集群，其中每个集群节点定期从 API 中提取一组抓取作业，并进行通信和/或使用与其他集群节点的通信结果来确定它应该运行哪些抓取作业。每个抓取作业都按固定时间间隔运行，其中使用特定查询时间范围、要提取的指标以及对这些指标执行的聚合函数来调用导出器。&lt;/p&gt;&lt;p&gt;导出器可能负责执行复杂的元数据操作，例如找出哪些指标实际存在于最近的数据中，或者将特定时间序列与特定于供应商的资源标识符相关联。请阅读&lt;a href="https://grafana.com/blog/2024/05/22/how-to-visualize-amazon-cloudwatch-metrics-in-grafana/#data-fidelity"&gt;我们最近的博客中有关 CloudWatch 数据保真度的部分，&lt;/a&gt;了解有关元数据关联的更多信息。&lt;/p&gt;&lt;h2 id="how-alloy-clustering-improves-on-grafana-agents-scraping-service"&gt; Alloy 集群如何改进 Grafana Agent 的抓取服务&lt;/h2&gt;&lt;p&gt;现在的 Grafana Alloy 集群从 Grafana Cloud API 异步拉取抓取作业配置，过去是使用 etcd 集群从 Grafana Cloud API 向&lt;a href="https://grafana.com/docs/agent/latest/static/configuration/scraping-service/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Agent 抓取服务&lt;/a&gt;进行更有状态的推送。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/alloy-clustering/agent-scraping-service.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Agent 抓取服务工作流程" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana Agent 抓取服务工作流程" src="https://grafana.com/media/blog/alloy-clustering/agent-scraping-service.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; Grafana Agent 抓取服务需要将集群成员状态以及抓取配置本身存储在分布式 KV 存储（如 etcd 或 Consul）中。因此，除了其自己独特的持久层之外，Grafana Cloud API 还必须通过&lt;a href="https://grafana.com/docs/agent/latest/static/api/?pg=blog&amp;amp;plcmt=body-txt#config-management-api-beta"&gt;Grafana Agent 的配置管理 API&lt;/a&gt;以代理的 YAML 配置格式保存每个配置。&lt;/p&gt;&lt;p&gt;这种方法有两个主要缺点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;额外的持久层使系统面临与数据一致性有关的复杂故障模式，称为&lt;a href="https://medium.com/@the_nick_morgan/event-driven-design-the-dual-write-problem-07bbef584376" rel="noopener noreferrer" target="_blank"&gt;双写问题&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;运行额外的持久层 etcd&lt;a href="https://etcd.io/docs/latest/op-guide/" rel="noopener noreferrer" target="_blank"&gt;并不是一件容易的事&lt;/a&gt;，任何具有复杂配置和交互的软件系统都将面临&lt;a href="https://grafana.com/blog/2020/04/07/how-a-production-outage-in-grafana-clouds-hosted-prometheus-service-was-caused-by-a-bad-etcd-client-setup/"&gt;导致中断的错误配置和错误交互&lt;/a&gt;。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt; Alloy 的集群功能通过其导入配置组件完全消除了这两个问题，这使得可以从远程源检索动态 Alloy 配置。具体来说，我们主要使用&lt;a href="https://grafana.com/docs/alloy/latest/reference/config-blocks/import.http/?pg=blog&amp;amp;plcmt=body-txt"&gt;import.http&lt;/a&gt;组件，通过该组件我们配置 Alloy 节点来调用 Grafana Cloud API 来生成最新的一组抓取作业配置。&lt;/p&gt;&lt;h2 id="migrating-to-alloy-clustering"&gt;迁移到 Alloy 集群&lt;/h2&gt;&lt;p&gt;为了使用 Alloy Clustering 作为客户的唯一系统抓取指标，我们必须迁移 Grafana Agent 及其抓取服务功能。现在，Grafana Agent 中的抓取服务功能处于测试阶段，该功能已被弃用，因此我们预计你们中的许多人不需要完成这个具体的练习。尽管如此，我们还是想提供一个广泛的概述，以便您能够了解从 Grafana Agent 迁移到 Alloy 的感觉。&lt;/p&gt;&lt;p&gt;在较高层面上，我们必须使用 Grafana Cloud API 从代理抓取服务 etcd 存储中删除抓取作业配置，并将这些配置提供给 Alloy 来拉取。&lt;/p&gt;&lt;p&gt;迁移的准备工作大致如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;我们的 Grafana Cloud API 采用了新路径，能够将&lt;a href="https://grafana.com/docs/alloy/latest/reference/components/prometheus.scrape/?pg=blog&amp;amp;plcmt=body-txt"&gt;prometheus.scrape&lt;/a&gt;和&lt;a href="https://grafana.com/docs/alloy/latest/reference/components/prometheus.remote_write/?pg=blog&amp;amp;plcmt=body-txt"&gt;prometheus.remote_write&lt;/a&gt;组件作为 Alloy&lt;a href="https://grafana.com/docs/alloy/latest/concepts/modules/?pg=blog&amp;amp;plcmt=body-txt"&gt;模块&lt;/a&gt;提供服务，从而允许 Alloy 检索和运行它们。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt; API 和持久的抓取作业数据使用一个标志进行检测，该标志确定是否应通过新路径提供特定作业。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;实施的迁移工具允许通过 Alloy 的新路径提供作业集，然后删除在 Grafana Agent 抓取服务上运行的这些作业的副本。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;部署了新的 Alloy 节点以匹配我们的目标容量。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;这些 Alloy 节点配置了指向相关 Grafana Cloud API 路径的&lt;a href="https://grafana.com/docs/alloy/latest/reference/config-blocks/import.http/?pg=blog&amp;amp;plcmt=body-txt"&gt;import.http&lt;/a&gt;块，并设置了&lt;code&gt;cluster.enabled&lt;/code&gt;运行标志。&lt;/li&gt;&lt;li&gt;通过一些初步测试，我们发现在相同的抓取作业负载下，Alloy 集群节点与代理抓取服务节点的资源需求大致相同。&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;实际的迁移过程大致如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;我们确保在迁移之前，API 将配置为向已部署的 Alloy 节点提供所有新创建的作业&lt;/li&gt;&lt;li&gt;然后，我们运行迁移工具，首先针对小批量的小作业（由它们的总活动系列决定），然后是越来越大批量的剩余小作业。最后，我们小心翼翼地削减最大的工作，直到全部完成。&lt;/li&gt;&lt;li&gt;我们在迁移后立即看到了成功，尽管为了安全起见，我们仍然给每组迁移至少几天的烘烤时间。我们通过删除现已失效的代理节点来拆除旧的基础设施，仅此而已。&lt;/li&gt;&lt;/ol&gt;&lt;h2 id="start-using-alloy-today"&gt;从今天开始使用合金&lt;/h2&gt;&lt;p&gt;使用 Alloy 的集群功能很容易，甚至可以迁移我们所有的生产抓取作业。使用 gossip 协议，Alloy 允许我们选择适合我们服务需求的自己的存储层组件，而不必担心任何额外的持久性要求。我们只需要以 Alloy 的文本文件格式输出配置，这可以使用&lt;a href="https://pkg.go.dev/text/template" rel="noopener noreferrer" target="_blank"&gt;Go 的模板包&lt;/a&gt;直接实现。&lt;/p&gt;&lt;p&gt;我们希望您和我们一样喜欢使用 Alloy！请务必查看这些博客和文档以帮助您入门：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;阅读&lt;a href="https://grafana.com/blog/2024/05/22/how-to-visualize-amazon-cloudwatch-metrics-in-grafana/"&gt;这篇最新博客&lt;/a&gt;，了解有关在 Grafana 中可视化 Amazon CloudWatch 指标的所有选项的更多信息。&lt;/li&gt;&lt;li&gt;有关 Alloy 入门和一般使用的所有最新信息，请参阅&lt;a href="https://grafana.com/docs/alloy/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;我们的文档&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;如果您对合金集群特别感兴趣，您将在&lt;a href="https://grafana.com/docs/alloy/latest/concepts/clustering/?pg=blog&amp;amp;plcmt=body-txt"&gt;此文档页面&lt;/a&gt;上找到所有最新内容。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Wed, 05 Jun 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/05/how-we-use-grafana-alloy-clustering-to-scrape-nearly-20m-prometheus-metrics/</guid></item><item><title>【5 useful transformations you should know to get the most out of Grafana】为了充分利用 Grafana，您应该了解 5 个有用的转换</title><link>https://grafana.com/blog/2024/06/04/5-useful-transformations-you-should-know-to-get-the-most-out-of-grafana/</link><description>&lt;p&gt;从 Grafana 5.0 开始，我使用 Grafana OSS 已有七年了。天啊，从那时起事情是如何演变的。我第一次使用 Grafana 是通过一堆 Java Spring Boot 微服务和 Prometheus 来监控 Kafka 数据管道以提取指标。我很惊讶 Grafana 和 Prometheus 一起可以做这么多事情，因此我总是将 Grafana 保留在我想要投入精力的简短清单中，无论是作为贡献者还是直接为公司工作。&lt;/p&gt;&lt;p&gt;快进大约四年后，我发现自己支持开发团队，并注意到 Grafana Labs 在 Grafana 产品部门也有类似的机会。我跳上了船，剩下的就是历史了。今天，我是 Grafana Labs 的工程总监，最近我一直在使用 Grafana 来了解我的团队的项目进展情况。在这个过程中，我发现使用 Grafana 来分析表格数据实际上是相当棒的，并且使用了&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/transform-data/?pg=blog&amp;amp;plcmt=body-txt"&gt;转换&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;您可以在 Grafana 中使用数十种转换来操作查询返回的数据，然后再将其应用于可视化。这是一个非常强大的功能，特别是当您需要数据的多个视图时。在这篇博文中，我将分享我的前五个转换，希望它们也能帮助您更好地理解您的数据。&lt;/p&gt;&lt;h2 id="1-group-by"&gt; 1. 分组依据&lt;/h2&gt;&lt;p&gt;拥有数据库背景，我真的很喜欢&lt;strong&gt;按功能分组&lt;/strong&gt;。这是一个非常有价值的工具，可以根据计数创建条形图。在下面的示例中，我首先筛选出我需要的表格列 - 状态和标题（用于计数） - 然后对状态进行分组，标题是 ID 字段，这样我们就可以计算数字的记录。超级简单，它可以制作一个漂亮的条形图。 &lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/transform-data/#group-by"&gt;在这里&lt;/a&gt;了解更多信息。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/top-five-transformations/group-by.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana UI 中的分组依据" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana UI 中的分组依据" src="https://grafana.com/media/blog/top-five-transformations/group-by.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="2-organize-fields-by-name"&gt; 2. 按名称组织字段&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;按名称转换组织字段&lt;/strong&gt;是一个强大的工具，允许您在 Grafana 中应用任何可视化之前操作查询返回的数据。其主要目的是帮助您有效地构建和呈现数据。以下是这一转变的关键方面：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;列重命名&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;您可以轻松地重命名数据集中的列。当原始列名称晦涩难懂或用户不友好时，此功能特别有用。&lt;/li&gt;&lt;li&gt;例如，如果您的查询返回名为“col1”的列，您可以将其重命名为更具描述性的名称，例如“销售收入”。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;列隐藏&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;有时，某些列与可视化中的显示无关。此转换允许您隐藏特定列。&lt;/li&gt;&lt;li&gt;通过隐藏不必要的列，您可以整理可视化并专注于基本信息。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;列重新排序&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;重新组织列对于以所需的顺序显示数据至关重要。通过转换，您可以根据需要重新排列列。&lt;/li&gt;&lt;li&gt;例如，如果您的表包含“日期”、“产品”和“销售”列，您可以对它们重新排序以逻辑地呈现数据（例如，日期 → 产品 → 销售）。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;自定义标题&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;通过该转换，您还可以为列设置自定义标题。当您想要提供更多上下文或提高可读性时，此功能非常有价值。&lt;/li&gt;&lt;li&gt;您可以指定有意义的标签，例如“产品名称”或“总销售量”，而不是使用“A 列”等通用标题。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;简单而强大&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;尽管它具有多功能性，但这种转换仍然易于使用。您可以在 Grafana 面板中快速配置它。&lt;/li&gt;&lt;li&gt;通过结合重命名、隐藏和重新排序，您可以创建一个干净、信息丰富的表格，以正确的顺序显示正确的信息。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt; &lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/transform-data/?pg=blog&amp;amp;plcmt=body-txt#organize-fields-by-name"&gt;在此处&lt;/a&gt;了解有关此转变的更多信息。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/top-five-transformations/organize-by-field-name.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="在 Grafana UI 中按名称组织字段" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="在 Grafana UI 中按名称组织字段" src="https://grafana.com/media/blog/top-five-transformations/organize-by-field-name.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="3-filter-data-by-value"&gt; 3. 按值过滤数据&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;按值过滤数据&lt;/strong&gt;是为面板过滤到正确信息级别的另一种好方法。我真的很喜欢在这里进行 AND 运算，或者使用“匹配所有”或“匹配任意”选项进行 OR 运算。对我来说，这对于将一堆条件链接在一起非常有帮助。在此示例中，我将筛选出处于“进行中”或“正在部署”状态的问题。&lt;/p&gt;&lt;p&gt;最近，我们添加了一种“按子字符串值过滤”的方法作为匹配类型。与转换的变量支持（功能切换）相结合，可以使仪表板中的过滤变得简单。 &lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/transform-data/?pg=blog&amp;amp;plcmt=body-txt#filter-data-by-values"&gt;在此处&lt;/a&gt;阅读有关按值转换过滤数据的更多信息。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/top-five-transformations/filter-by-value.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="在 Grafana UI 中按值过滤数据" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="在 Grafana UI 中按值过滤数据" src="https://grafana.com/media/blog/top-five-transformations/filter-by-value.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/top-five-transformations/filter-by-value-2.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="按 Grafana UI 中的值过滤" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="按 Grafana UI 中的值过滤" src="https://grafana.com/media/blog/top-five-transformations/filter-by-value-2.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="4-sort-by"&gt; 4. 排序依据&lt;/h2&gt;&lt;p&gt;有时，我们的数据出现的顺序与我们想要可视化的顺序不同，或者根本没有顺序。&lt;strong&gt;通过转换排序&lt;/strong&gt;对于单列排序非常有帮助。这在分组之后特别有用，因此您可以按计数（降序）排序，因此条形图在顶部具有最高的值。请&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/transform-data/?pg=blog&amp;amp;plcmt=body-txt#sort-by"&gt;在此处&lt;/a&gt;阅读有关此转变的更多信息。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/media/blog/top-five-transformations/sort-by.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana UI 中的排序依据" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana UI 中的排序依据" src="https://grafana.com/media/blog/top-five-transformations/sort-by.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/top-five-transformations/sort-by-2.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana UI 中的排序依据" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana UI 中的排序依据" src="https://grafana.com/media/blog/top-five-transformations/sort-by-2.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="5-partition-by-values"&gt; 5. 按值划分&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;按值划分&lt;/strong&gt;是一个令人惊奇的、神奇的转变。此转换的主要用例是获取单个 SQL 结果（这是一个长/高框架），并将其拆分为多个系列。在此之前，您必须对每个系列进行查询，并且您必须提前知道这些系列是什么！&lt;/p&gt;&lt;p&gt;此转换采用单个表，并根据一个或多个字段将其切割为 N 个表。这对于将单个数据集分解为多个数据集非常方便。在下面的示例中，我按优先级列出了客户升级列表，以便我可以按优先级了解周期时间的 p50 和 p99。便利。对于 XY 数据集、条形图等非常有用。 &lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/transform-data/?pg=blog&amp;amp;plcmt=body-txt#partition-by-values"&gt;在此处&lt;/a&gt;阅读有关按值分区的更多信息。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/top-five-transformations/partition-by-value.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="在 Grafana UI 中按值分区" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="在 Grafana UI 中按值分区" src="https://grafana.com/media/blog/top-five-transformations/partition-by-value.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="bonus-percentiles-in-group-by-and-legend"&gt;奖励：分组依据和图例中的百分位数&lt;/h2&gt;&lt;p&gt;不久前，我想要一种方法来理解字段的第 99 个百分位数，但对于图例，您只能进行基本数学运算（最大值、最小值、计数等）。所以我添加了任意百分位（1-99）的方式。该功能现已在 Grafana Cloud 中提供，并将通过 Grafana 11.1 推广到本地部署。您可以在图例的“值”选项以及用于计算分组依据的选项中看到这一点。享受！&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/top-five-transformations/percentile.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana UI 中分组依据的百分位数" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana UI 中分组依据的百分位数" src="https://grafana.com/media/blog/top-five-transformations/percentile.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="get-started-with-transformations-today"&gt;今天就开始转型&lt;/h2&gt;&lt;p&gt;我只是简单地介绍了转换的用途； Grafana 中有 30 多种不同的转换函数。虽然上面列出的是我个人最喜欢的，但还有更多可能更适合您的用例。请访问&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/transform-data/?pg=blog&amp;amp;plcmt=body-txt"&gt;我们的文档&lt;/a&gt;以了解更多信息，如果您有任何疑问，请随时通过我们的社区论坛联系。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Tue, 04 Jun 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/04/5-useful-transformations-you-should-know-to-get-the-most-out-of-grafana/</guid></item><item><title>【Grafana Tempo 2.5 release: vParquet4, streaming endpoints, and more metrics】Grafana Tempo 2.5 版本：vParquet4、流端点和更多指标</title><link>https://grafana.com/blog/2024/06/03/grafana-tempo-2.5-release-vparquet4-streaming-endpoints-and-more-metrics/</link><description>&lt;p&gt;&lt;a href="https://github.com/grafana/tempo/releases/tag/v2.5.0" rel="noopener noreferrer" target="_blank"&gt;Grafana Tempo 2.5&lt;/a&gt;带来了性能改进，vParquet4 为新的 TraceQL 功能和其他指标功能奠定了基础！&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;p&gt;观看上面的视频，了解 TraceQL 指标的亮点，或继续阅读以快速了解 Tempo 的最新更新。如果您正在寻找更深入的内容，请立即查看&lt;a href="https://grafana.com/docs/tempo/latest/release-notes/v2-5/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Tempo 2.5 发行说明&lt;/a&gt;或&lt;a href="https://github.com/grafana/tempo/blob/main/CHANGELOG.md#v250" rel="noopener noreferrer" target="_blank"&gt;变更日志&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="more-traceql-metrics"&gt;更多 TraceQL 指标&lt;/h2&gt;&lt;p&gt;&lt;a href="https://grafana.com/docs/tempo/latest/operations/traceql-metrics/?pg=blog&amp;amp;plcmt=body-txt"&gt;TraceQL 指标&lt;/a&gt;是 Grafana Tempo 中的一项实验性功能，可根据跟踪动态创建指标。我们正在努力实现全面可用性，因此请继续关注。&lt;/p&gt;&lt;p&gt;在&lt;a href="https://grafana.com/blog/2024/02/29/grafana-tempo-2.4-release-traceql-metrics-tiered-caching-and-tco-improvements/"&gt;Tempo 2.4&lt;/a&gt;中，我们引入了基本的&lt;code&gt;rate()&lt;/code&gt;方法。现在，在 2.5 中，我们添加了&lt;code&gt;quantile_over_time()&lt;/code&gt;和&lt;code&gt;histogram_over_time()&lt;/code&gt; ，允许用户聚合数值，例如最重要的跨度持续时间。请注意，您可以在同一查询中指定多个分位数。&lt;/p&gt;&lt;p&gt; &lt;code&gt;{ name = &amp;quot;GET /:endpoint&amp;quot; } | quantile_over_time(duration, .99, .9, .5)&lt;/code&gt;&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link captioned" href="https://grafana.com/media/blog/tempo-2.5/tempo-2.5-duration-quantiles-for-GET-endpoint-span.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Duration quantiles over time." class="lazyload mb-0" title="*GET /:端点跨度的持续时间分位数。*" /&gt; &lt;noscript&gt;&lt;img alt="Duration quantiles over time." src="https://grafana.com/media/blog/tempo-2.5/tempo-2.5-duration-quantiles-for-GET-endpoint-span.png" title="*GET /:端点跨度的持续时间分位数。*" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;figcaption class="w-100p caption text-gray-13 "&gt; &lt;em&gt;GET /:endpoint 跨度的持续时间分位数。&lt;/em&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;您可以按任何范围或资源属性进行分组。&lt;/p&gt;&lt;p&gt; &lt;code&gt;{ name = &amp;quot;GET /:endpoint&amp;quot; } | quantile_over_time(duration, .99) by (span.http.target)&lt;/code&gt;&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link captioned" href="https://grafana.com/media/blog/tempo-2.5/tempo-2.5-duration-p99.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grouping by a span or resource attribute." class="lazyload mb-0" title="*span.http.target 的持续时间 p99。*" /&gt; &lt;noscript&gt;&lt;img alt="Grouping by a span or resource attribute." src="https://grafana.com/media/blog/tempo-2.5/tempo-2.5-duration-p99.png" title="*span.http.target 的持续时间 p99。*" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;figcaption class="w-100p caption text-gray-13 "&gt; &lt;em&gt;span.http.target 的持续时间 p99。&lt;/em&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;此外，分位数不仅限于跨度持续时间；跨度上的任何数字属性都是公平的游戏。为了演示这种级别的灵活性，请考虑&lt;code&gt;span.http.status_code&lt;/code&gt;上这个完全无意义的分位数：&lt;/p&gt;&lt;p&gt; &lt;code&gt;{ name = &amp;quot;GET /:endpoint&amp;quot; } | quantile_over_time(span.http.status_code, .99, .9, .5)&lt;/code&gt;&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link captioned" href="https://grafana.com/media/blog/tempo-2.5/tempo-2.5-span-http-status-code.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="A quantile of the span.http.status code." class="lazyload mb-0" title="*span.http.status_code 分位数（你永远不会真正这样做）。*" /&gt; &lt;noscript&gt;&lt;img alt="A quantile of the span.http.status code." src="https://grafana.com/media/blog/tempo-2.5/tempo-2.5-span-http-status-code.png" title="*span.http.status_code 分位数（你永远不会真正这样做）。*" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;figcaption class="w-100p caption text-gray-13 "&gt; &lt;em&gt;span.http.status_code 分位数（你永远不会真正这样做）。&lt;/em&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;这些功能都是前沿的，与往常一样，我们建议使用最新版本的 Grafana 和 Tempo 以获得最佳体验。&lt;/p&gt;&lt;h2 id="more-streaming-endpoints"&gt;更多流媒体端点&lt;/h2&gt;&lt;p&gt;在 2.5 中，我们对 Tempo 中的查询前端组件进行了重大重构。此重构包括许多性能改进，但我们主要是为了全面添加&lt;a href="https://github.com/grafana/tempo/blob/main/pkg/tempopb/tempo.proto#L34-L41" rel="noopener noreferrer" target="_blank"&gt;流式 gRPC 端点&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;目前，Grafana 仅支持 TraceQL 流式搜索端点，但我们希望尽快添加对其他端点的支持。我对 Grafana 支持流媒体指标端点感到特别兴奋，这样当 Tempo 检索数据时，我们就可以在屏幕上看到漂亮的指标线。&lt;/p&gt;&lt;p&gt;尽管 Grafana 尚不支持所有这些端点，但可以使用适当构建的 gRPC 客户端来调用它们，并且我们的&lt;a href="https://grafana.com/docs/tempo/latest/operations/tempo_cli/"&gt;Tempo CLI 工具&lt;/a&gt;也支持它们。例如，您可以像这样查询流指标：&lt;/p&gt;&lt;p&gt; &lt;code&gt;./tempo-cli query api metrics localhost:3200 &amp;#39;{ status = error } | rate() by (name)&amp;#39; –use-grpc&lt;/code&gt;&lt;/p&gt;&lt;h2 id="vparquet4-paves-the-way-for-new-features"&gt; vParquet4 为新功能铺平了道路&lt;/h2&gt;&lt;p&gt;vParquet4 是我们最新的 Parquet 版本。它在 Tempo 2.5 中可用，但直到下一个版本才会默认。 vParquet4 添加了新列以允许查询事件、链接、数组等。预计这些功能很快就会添加到 TraceQL 中！&lt;/p&gt;&lt;p&gt;要试验 vParquet4 并为新功能做好准备，您可以立即&lt;a href="https://grafana.com/docs/tempo/latest/configuration/parquet/#choose-a-different-block-format"&gt;配置 Tempo&lt;/a&gt;以使用它。我们要感谢红帽公司的&lt;a href="https://github.com/andreasgerstmayr" rel="noopener noreferrer" target="_blank"&gt;Andreas Gerstmayr&lt;/a&gt;添加列和代码，以便将&lt;a href="https://github.com/grafana/tempo/blob/main/pkg/tempopb/tempo.proto#L121-L127" rel="noopener noreferrer" target="_blank"&gt;每个服务的跨度和错误计数&lt;/a&gt;返回到我们的搜索结果中。我们预计很快会增加对 Grafana 的支持。&lt;/p&gt;&lt;h2 id="important-breaking-changes"&gt;重要的突破性变化&lt;/h2&gt;&lt;p&gt;Tempo 2.5 中有两个重大变化值得一提。&lt;/p&gt;&lt;p&gt;首先，&lt;a href="https://hub.docker.com/r/grafana/tempo/tags" rel="noopener noreferrer" target="_blank"&gt;官方 Docker 镜像&lt;/a&gt;中的 Tempo 进程曾经以&lt;code&gt;root&lt;/code&gt;身份运行。在此版本中，我们已将其更新为以&lt;code&gt;UID 10001&lt;/code&gt;运行（一个受欢迎的安全更新）。这意味着在磁盘上维护文件的摄取器和指标生成器等组件在没有干预的情况下不会干净地出现。新用户&lt;code&gt;10001&lt;/code&gt;将无权访问&lt;code&gt;root&lt;/code&gt;创建的旧文件。请参阅&lt;a href="https://grafana.com/docs/tempo/latest/release-notes/v2-5/"&gt;发行说明&lt;/a&gt;以获取有关升级的帮助。&lt;/p&gt;&lt;p&gt;接下来，原始 vParquet 格式&lt;a href="https://github.com/grafana/tempo/pull/3663" rel="noopener noreferrer" target="_blank"&gt;已从 Tempo 2.5 中删除&lt;/a&gt;。这意味着无法从 Tempo 2.1 直接升级到 Tempo 2.5。运营商需要升级到中间版本，并等待旧的 vParquet 块不再保留，然后再升级到 2.5。&lt;/p&gt;&lt;p&gt;有关重大变更的完整列表，请查看&lt;a href="https://grafana.com/docs/tempo/latest/release-notes/v2-5/"&gt;Grafana Tempo 2.5 发行说明&lt;/a&gt;或&lt;a href="https://github.com/grafana/tempo/blob/main/CHANGELOG.md#v250" rel="noopener noreferrer" target="_blank"&gt;变更日志&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="whats-next-in-grafana-tempo"&gt; Grafana Tempo 的下一步是什么？&lt;/h2&gt;&lt;p&gt; Tempo 目前有两项主要举措。第一个是GA TraceQL指标，第二个是继续扩展TraceQL语言。&lt;/p&gt;&lt;p&gt;既然我们在代码库中正式拥有了 vParquet4，那么在即将发布的版本中，预计会在&lt;a href="https://github.com/grafana/tempo/blob/main/docs/design-proposals/2023-11%20TraceQL%20Extensions.md" rel="noopener noreferrer" target="_blank"&gt;TraceQL 语言扩展&lt;/a&gt;中详细介绍稳定的功能。&lt;/p&gt;&lt;p&gt;经过大量努力，我们确定对指标的 RF3 跟踪进行重复数据删除不会达到我们想要的性能目标。因此，我们正在讨论 Tempo 的架构转变，以允许将 RF1 数据写入对象存储，同时保持当前的可用性和持久性水平。如果您想参与此对话，请参加&lt;a href="https://docs.google.com/document/d/1yGsI6ywU-PxZBjmq3p3vAXr9g5yBXSDk4NU8LGo8qeY/edit" rel="noopener noreferrer" target="_blank"&gt;每月一次的 Tempo 社区电话会议&lt;/a&gt;。我们正在讨论很多想法。&lt;/p&gt;&lt;p&gt;这将是 Tempo 运营方面的重大转变，我们预计将带来更低的 TCO、更快的 TraceQL 和大规模 TraceQL 指标。期待这里发生巨大的变化！&lt;/p&gt;&lt;p&gt;如果您有兴趣了解更多有关 Grafana Tempo 的新闻或搜索进度，请加入我们的&lt;a href="https://slack.grafana.com/" rel="noopener noreferrer" target="_blank"&gt;Grafana Labs 社区 Slack&lt;/a&gt;频道 #tempo，在&lt;a href="https://community.grafana.com/c/grafana-tempo/40" rel="noopener noreferrer" target="_blank"&gt;我们的社区论坛&lt;/a&gt;中发布问题，在&lt;a href="https://twitter.com/actually_chores" rel="noopener noreferrer" target="_blank"&gt;X（以前称为 Twitter&lt;/a&gt; ）上联系，或加入我们的&lt;a href="https://docs.google.com/document/d/1yGsI6ywU-PxZBjmq3p3vAXr9g5yBXSDk4NU8LGo8qeY/edit" rel="noopener noreferrer" target="_blank"&gt;每月 Tempo社区呼吁&lt;/a&gt;。到时候那里见！&lt;/p&gt;&lt;p&gt;如果您想更接近奇迹发生的地方，为什么不看看 Grafana Labs 的&lt;a href="https://grafana.com/about/careers/"&gt;空缺职位&lt;/a&gt;呢？&lt;/p&gt;&lt;p&gt;&lt;em&gt;开始使用&lt;a href="https://grafana.com/oss/tempo/?pg=blog"&gt;Grafana Tempo 的&lt;/a&gt;最简单方法是使用&lt;a href="https://grafana.com/products/cloud/?pg=blog"&gt;Grafana Cloud&lt;/a&gt; ，我们的永久免费套餐现在包括 50GB 跟踪以及 50GB 日志和 10K 系列指标。您可以&lt;a href="https://grafana.com/signup/cloud/connect-account?pg=blog"&gt;免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Mon, 03 Jun 2024 11:45:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/03/grafana-tempo-2.5-release-vparquet4-streaming-endpoints-and-more-metrics/</guid></item><item><title>【Monitoring your morning commute with Grafana: the story of a Golden Grot Awards winner】使用 Grafana 监控您早上的通勤情况：金格罗特奖得主的故事</title><link>https://grafana.com/blog/2024/05/31/monitoring-your-morning-commute-with-grafana-the-story-of-a-golden-grot-awards-winner/</link><description>&lt;p&gt;“如果你住在亚特兰大，交通就会很糟糕；这很糟糕。如果有一天天气不好，那就更糟了。”&lt;/p&gt;&lt;p&gt;你不必住在亚特兰大附近的任何地方，就能体会到鲁本·费尔南德斯在这里分享的情感。我们大多数人都经历过在都市区或周边地区通勤所带来的挫折，因此鲁本领先于当地道路瓶颈的新颖方法使他成为今年&lt;a href="https://grafana.com/about/events/grafanacon/2024/golden-grot-awards/"&gt;金格罗特奖（&lt;/a&gt;我们的年度奖项）的获奖者之一也就不足为奇了。表彰个人和专业仪表板中的最佳作品。&lt;/p&gt;&lt;p&gt; Ruben 在个人仪表板类别中获胜， &lt;a href="https://cuponesruben.grafana.net/public-dashboards/bc2d84c6d80e4acf9e826a32c4620351?orgId=1&amp;amp;refresh=5s" rel="noopener noreferrer" target="_blank"&gt;他构建了 Grafana 仪表板&lt;/a&gt;来帮助他导航早上去办公室的行程，包括何时离开以及采取哪种交通方式。他使用 API 和 GTFS 实时提要从&lt;a href="https://www.weather.gov/" rel="noopener noreferrer" target="_blank"&gt;Weather.gov&lt;/a&gt;和&lt;a href="https://www.itsmarta.com/" rel="noopener noreferrer" target="_blank"&gt;亚特兰大大都会交通管理局&lt;/a&gt;获取数据，以及从 Google 地图和 Bing 地图获取行驶时间和交通信息。他还使用 Python 的 Prometheus 检测库来组合指标并将其发送到&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt; 。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;h2 id="gridlock-bad-weather-and-a-return-to-the-office"&gt; 交通堵塞、恶劣天气和返回办公室&lt;/h2&gt;&lt;p&gt;Ruben 18 个月前开始使用 Grafana，作为 SRE 工作的一部分。他对去年的&lt;a href="https://grafana.com/blog/2023/06/15/meet-our-golden-grot-awards-grand-prize-winners/"&gt;首届金格罗特奖&lt;/a&gt;很感兴趣，并开始思考自己可以建造什么供自己个人使用，也可以提交今年的奖项。他寻找可能支持他的项目的公共数据源，就在那时他收到了一些灵​​感。&lt;/p&gt;&lt;p&gt;鲁本被告知他需要在大流行后返回办公室，他开始查看公交车时刻表和开车时间，这让他考虑跟踪天气并将所有这些信息捆绑在一个地方。&lt;/p&gt;&lt;p&gt; “交通时间可能从 25 分钟缩短到 1 小时；它可能会在这个范围内发生变化。于是我就想，每天早上我要检查什么？天气怎么样？交通状况如何？我的通勤时间要多长？”鲁本说。 “我应该坐火车吗？因为开车要花一个小时？我不喜欢那样。我更喜欢坐公共汽车，然后在火车上我可以读书。因此，将所有信息集中在一处，我可以更轻松地了解必须做什么。”&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/golden-grot/2024/dashboards/screenshot-goldengrot-ruben-fernandez.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="鲁本的仪表板" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="鲁本的仪表板" src="https://grafana.com/media/golden-grot/2024/dashboards/screenshot-goldengrot-ruben-fernandez.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;鲁本继续寻找改进他的仪表板的方法。他希望纳入移动通知，甚至考虑纳入外带咖啡订单，看看这将如何影响他的到达时间。与此同时，他说很高兴看到他的家人和同事对他的胜利感到多么兴奋。&lt;/p&gt;&lt;p&gt; “工作了 30 年，我从来没有遇到过这样的事情，”鲁本说。 “没有人真正认可我的工作，所以他们非常高兴——我的家人、我的朋友、每个人。”&lt;/p&gt;&lt;p&gt;他还感谢社区的支持，帮助从决赛入围者名单中选出获胜者。&lt;/p&gt;&lt;p&gt; “这让我感到自豪，”他说。 “当人们给你颁奖时，他们是在告诉你，你做了一些好事，所以是的，我喜欢这一点。”&lt;/p&gt;&lt;h2 id="what-makes-a-great-dashboard"&gt;是什么造就了一个出色的仪表板？&lt;/h2&gt;&lt;p&gt; Ruben 的仪表板以其实用性和独创性令评委们惊叹不已。&lt;/p&gt;&lt;p&gt; “想象一个人在上班前查看 Grafana 仪表板是非常未来主义和有趣的，”一位评委说。&lt;/p&gt;&lt;p&gt;另一位法官表示：“Ruben 将 Grafana 用于一个非常有用的用例，世界各地的许多人都在努力解决这个问题：高效的日常通勤。” “Ruben 没有手动查找有关交通拥堵、公共汽车和火车运输时刻表、天气等信息，而是创建了一个令人惊叹的仪表板，该仪表板汇集了所有这些信息，并提供了很好的概述和支持，使通勤变得更加轻松和更多数据驱动的决策。对于每天通勤上班的人来说，我建议创建一个类似的仪表板来简化日常决策过程。”&lt;/p&gt;&lt;p&gt;鲁本认为他的仪表板之所以脱颖而出，是因为其非典型用例和实时视频源的结合。他承认，很难找到时间来学习构建仪表板和查找数据源，尤其是作为工作和家庭时间之后的业余项目。但对于那些希望构建自己的仪表板供个人使用的人来说，他表示关键是不要被吓倒。&lt;/p&gt;&lt;p&gt; “不要放弃，”鲁本说。 “很多次你都会说，‘好吧，算了吧。我不想这么做。但有一天，像我一样，你有了[灵感]，有些事情发生了变化，你跟上，然后你开始添加东西，你变得兴奋，然后你又上升了。所以不要因为有一些怀疑就扔掉它；继续前进。”&lt;/p&gt;</description><pubDate>Fri, 31 May 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/31/monitoring-your-morning-commute-with-grafana-the-story-of-a-golden-grot-awards-winner/</guid></item><item><title>【How to export any Grafana visualization to a CSV file, Microsoft Excel, or Google Sheets】如何将任何 Grafana 可视化导出到 CSV 文件、Microsoft Excel 或 Google Sheets</title><link>https://grafana.com/blog/2024/05/30/how-to-export-any-grafana-visualization-to-a-csv-file-microsoft-excel-or-google-sheets/</link><description>&lt;p&gt;Grafana 仪表板是将大量技术信息合并到一张方便的图片中的好方法。有时，将数据从特定的 Grafana 可视化导出为另一种格式也很有用，这样您就可以进一步分析它并与其他人共享。&lt;/p&gt;&lt;p&gt;在这篇博文中，我们将介绍如何为您使用的任何 Grafana 可视化导出 CSV 数据。这样可以轻松地将数据导入流行的电子表格应用程序，例如 Microsoft Excel 或 Google Sheets。本文中描述的步骤在三个方面是通用的：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;它们适用于任何 Grafana 可视化，因为在幕后，所有可视化都只是将一系列数据帧绘制到屏幕上。&lt;/li&gt;&lt;li&gt;它们适用于任何数据源（关系或非关系），因为查询结果会转换为相同的数据帧。&lt;/li&gt;&lt;li&gt;它们将在 Grafana 仪表板上或任何&lt;a href="https://grafana.com/docs/grafana/latest/explore/"&gt;Grafana Explore&lt;/a&gt;查询中工作。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我们将使用&lt;a href="https://play.grafana.org/d/000000012/grafana-play-home?orgId=1" rel="noopener noreferrer" target="_blank"&gt;Grafana Play&lt;/a&gt;上的&lt;a href="https://play.grafana.org/d/000000003/1-graphite3a-sample-website-dashboard?orgId=1" rel="noopener noreferrer" target="_blank"&gt;示例网站监控仪表板&lt;/a&gt;。您可以使用该示例仪表板执行本文中显示的所有操作。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/export-visualizations/export_visualizations_sample_dashboard.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana 仪表板示例的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana 仪表板示例的屏幕截图。" src="https://grafana.com/media/blog/export-visualizations/export_visualizations_sample_dashboard.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="pick-the-data-you-want-to-export"&gt;选择您要导出的数据&lt;/h2&gt;&lt;p&gt;让我们从服务器请求仪表板中的数据开始，该数据显示在下面的时间序列面板中。请注意，在图例中，我们显示了四个不同 Web 服务器的堆叠线：01、02、03 和 04。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/export-visualizations/export_visualizations_time_series_panel.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="时间序列面板的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="时间序列面板的屏幕截图。" src="https://grafana.com/media/blog/export-visualizations/export_visualizations_time_series_panel.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;在可视化顶部的三点菜单中，选择&lt;strong&gt;“检查”&lt;/strong&gt; &amp;gt; &lt;strong&gt;“数据”&lt;/strong&gt; 。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/export-visualizations/export_visualizations_inspect_data.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示导航至“数据”选项的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示导航至“数据”选项的屏幕截图。" src="https://grafana.com/media/blog/export-visualizations/export_visualizations_inspect_data.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;在右侧，您会看到一个托盘滑出。这是可视化中显示的数据的表格格式版本，带有蓝色的&lt;strong&gt;“下载 CSV”&lt;/strong&gt;按钮。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/export-visualizations/export_visualizations_inspect_server_requests.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="服务器请求指标的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="服务器请求指标的屏幕截图。" src="https://grafana.com/media/blog/export-visualizations/export_visualizations_inspect_server_requests.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;如果这就是您所需要的，那么您就完成了！&lt;/strong&gt;&lt;/em&gt;但此功能还有更多功能；继续阅读以了解它的工作原理、如何将其与 Grafana Explore 一起使用，以及您还可以用它做什么。&lt;/p&gt;&lt;h2 id="select-and-download-a-data-frame"&gt;选择并下载数据框&lt;/h2&gt;&lt;p&gt;从 Grafana 可视化中获取 CSV 和表格数据并不像看起来那么明显；&lt;a href="https://grafana.com/docs/grafana/latest/fundamentals/dashboards-overview/#plugins"&gt;从数据源进入插件的&lt;/a&gt;数据可能采用多种不同的格式（例如 JSON、行和列或 CSV），但是当它通过其余的大门走向可视化时，它始终位于&lt;a href="https://grafana.com/developers/plugin-tools/introduction/data-frames"&gt;数据帧&lt;/a&gt;中。当您导出数据时，您正在导出由某些查询生成的 Grafana&lt;em&gt;数据框&lt;/em&gt;- 您不是直接从基础数据源导出数据。&lt;/p&gt;&lt;p&gt;在此背景下，让我们展开&lt;strong&gt;“检查”&lt;/strong&gt;菜单中的&lt;strong&gt;“数据选项”&lt;/strong&gt;部分，看看除了简单导出到 CSV 之外我们还能做什么。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/export-visualizations/export_visualizations_web_server_01.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示数据选项的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示数据选项的屏幕截图。" src="https://grafana.com/media/blog/export-visualizations/export_visualizations_web_server_01.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;如果您在上一步中仔细观察，您可能会注意到我们导出的数据仅适用于第一个 Web 服务器 - web_server_01 - 而不是所有四个框架。在上面的对话框中，我们可以看到 Grafana 将整个可视化分为四个框架，我们可以单独导出每个框架。&lt;/p&gt;&lt;p&gt;但是，如果您有一个包含多行的时间序列（正如我们在此处的示例中所做的那样），您通常需要电子表格中的所有数据，而不仅仅是其中一行。为此，我们可以选择&lt;strong&gt;按时间连接的系列选项&lt;/strong&gt;，该选项导出您在可视化中看到的所有数据。&lt;/p&gt;&lt;p&gt;我们示例中的四个系列是四个独立的数据集，每个数据集包含单个 Web 服务器的时间和数据点。当我们按时间连接它们时，我们将所有数据重新组合到我们之前在时间序列图表中看到的同一时间线上。&lt;/p&gt;&lt;p&gt;如下所示，还有适用于 CSV 处理应用程序和 Excel 的格式化数据和添加标题的选项。我将选择&lt;strong&gt;“下载 Excel”&lt;/strong&gt;以将该标题行添加到我的数据中，然后单击&lt;strong&gt;“下载 CSV”&lt;/strong&gt; 。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/export-visualizations/export_visualizations_series_joined_by_time.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示按时间连接的系列选项的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示按时间连接的系列选项的屏幕截图。" src="https://grafana.com/media/blog/export-visualizations/export_visualizations_series_joined_by_time.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;下载的文件名为&lt;code&gt;server requests-data-as-joinbyfield-2024-05-06 13_45_39.csv&lt;/code&gt; ，这很方便，因为它准确地告诉我们导出的内容和时间。这意味着，如果您对许多可视化执行此操作，您可以将数据分开并记住是什么。&lt;/p&gt;&lt;p&gt;最后一步是将生成的 CSV 导入 Google Sheets、Microsoft Excel 或您使用的任何其他应用程序。由于标头已经存在，因此数据到达时应如下所示：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/export-visualizations/export_visualizations_spreadsheet.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="包含服务器请求数据的电子表格的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="包含服务器请求数据的电子表格的屏幕截图。" src="https://grafana.com/media/blog/export-visualizations/export_visualizations_spreadsheet.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="export-data-from-grafana-explore"&gt;从 Grafana Explore 导出数据&lt;/h2&gt;&lt;p&gt;如果您还没有仪表板，您可能只想使用 Grafana Explore 来运行查询并导出数据。这也是可行的。&lt;/p&gt;&lt;p&gt;让我们看一下&lt;a href="https://play.grafana.org/explore?schemaVersion=1&amp;amp;panes=%7B%22agk%22:%7B%22datasource%22:%22grafanacloud-prom%22,%22queries%22:%5B%7B%22refId%22:%22A%22,%22expr%22:%22aws_ec2_cpuutilization_average%22,%22range%22:true,%22instant%22:true,%22datasource%22:%7B%22type%22:%22prometheus%22,%22uid%22:%22grafanacloud-prom%22%7D,%22editorMode%22:%22builder%22,%22legendFormat%22:%22__auto%22,%22useBackend%22:false,%22disableTextWrap%22:false,%22fullMetaSearch%22:false,%22includeNullMetadata%22:true%7D%5D,%22range%22:%7B%22from%22:%22now-1h%22,%22to%22:%22now%22%7D%7D%7D&amp;amp;orgId=1" rel="noopener noreferrer" target="_blank"&gt;Play 上 Prometheus 指标探索的链接&lt;/a&gt;。在 Explore 视图中，我们正在对&lt;code&gt;aws_ec2_cpuutilization_average&lt;/code&gt;执行一个非常简单的 PromQL 查询。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/export-visualizations/export_visualizations_prometheus_metrics.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="浏览视图中 PromQL 查询的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="浏览视图中 PromQL 查询的屏幕截图。" src="https://grafana.com/media/blog/export-visualizations/export_visualizations_prometheus_metrics.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;在这里，我们将点击&lt;strong&gt;查询检查器&lt;/strong&gt;按钮来查看发送到数据库的查询的详细信息。&lt;/p&gt;&lt;p&gt;在下面打开的托盘中，右侧标记为&lt;strong&gt;“数据”&lt;/strong&gt;的选项卡将显示我们从面板可视化导出数据时看到的所有相同选项。上面所说的一切在这里都适用：数据框的选择、标题行以及如何导出。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/export-visualizations/export_visualizations_aws_ec2.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="“数据”选项卡的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="“数据”选项卡的屏幕截图。" src="https://grafana.com/media/blog/export-visualizations/export_visualizations_aws_ec2.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="wrapping-up"&gt;包起来&lt;/h2&gt;&lt;p&gt;Grafana 在内部将您的数据作为一系列数据帧进行处理，无论数据来自何处或最初如何存储和查询。这意味着导出数据相当简单；我们只是将这些数据框转换为 CSV 文件，您可以将其与任何电子表格应用程序或任何其他软件一起使用。&lt;/p&gt;&lt;p&gt;有关 Grafana 仪表板的所有部分如何协同工作的更多信息，&lt;a href="https://grafana.com/docs/grafana/latest/fundamentals/dashboards-overview/"&gt;请查看我们的仪表板概述&lt;/a&gt;。如果您对此主题还有任何其他问题，请随时在&lt;a href="https://community.grafana.com/" rel="noopener noreferrer" target="_blank"&gt;Grafana 社区网站&lt;/a&gt;上提问！&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用仪表板、指标、日志、跟踪等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Thu, 30 May 2024 16:11:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/30/how-to-export-any-grafana-visualization-to-a-csv-file-microsoft-excel-or-google-sheets/</guid></item><item><title>【Grafana Loki query acceleration: How we sped up queries without adding resources】Grafana Loki 查询加速：我们如何在不添加资源的情况下加速查询</title><link>https://grafana.com/blog/2024/05/29/grafana-loki-query-acceleration-how-we-sped-up-queries-without-adding-resources/</link><description>&lt;p&gt;正如我们在&lt;a href="https://grafana.com/blog/2024/04/09/grafana-loki-3.0-release-all-the-new-features/"&gt;推出 Grafana Loki 最新主要版本&lt;/a&gt;时所讨论的那样，我们在过去五年中通过平衡功能开发和大规模支持用户来发展日志聚合系统。后者的一个重要部分是使查询速度更快——这也是 Loki 3.0 的主要关注点。&lt;/p&gt;&lt;p&gt;我们已经看到峰值查询吞吐量从 Loki 1.0 时代的 10 GB/s 增长到 3.0 之前的 1 TB/s 以上。然而，为了进一步发展，并确保我们恪守成本效益高且易于开发人员使用的原则，我们一直在寻找变得更聪明的机会。&lt;/p&gt;&lt;p&gt;例如，我们最近注意到&lt;a href="https://grafana.com/docs/loki/latest/query/log_queries/?pg=blog&amp;amp;plcmt=body-txt#line-filter-expression"&gt;过滤器查询&lt;/a&gt;的一个有趣的事情：它们接触了很多他们不需要的数据。在 7 天的时间里，我们的 Grafana Labs 产品集群处理了 280 PB 的日志。从总数中，大约 140 PB 的搜索日志与任何过滤表达式都不匹配。也就是说，50%的搜索数据没有返回结果！更糟糕的是，每 100 万条日志中，65% 的处理数据 (182 PB) 最多只返回一条日志行。&lt;/p&gt;&lt;p&gt;当然，我们可以通过投入更多计算资源来解决吞吐量问题，但这与我们让 Loki 具有成本效益和可扩展性的愿景不符。相反，我们将此视为挑战&lt;em&gt;和&lt;/em&gt;机遇。我们如何改善这些返回速度更快的过滤查询的体验，同时仍然保持 Loki 的易用性和成本效益原则？&lt;/p&gt;&lt;p&gt;输入查询加速，这是 Loki 3.0 中包含的一项实验性功能。&lt;/p&gt;&lt;h2 id="how-we-approached-query-acceleration-in-loki"&gt;我们如何在 Loki 中实现查询加速&lt;/h2&gt;&lt;p&gt;在深入研究之前，我们应该快速介绍一下我们将在本博文中使用的两个概念： &lt;a href="https://en.wikipedia.org/wiki/N-gram" rel="noopener noreferrer" target="_blank"&gt;n-gram&lt;/a&gt;和&lt;a href="https://en.wikipedia.org/wiki/Bloom_filter" rel="noopener noreferrer" target="_blank"&gt;布隆过滤器&lt;/a&gt;。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;我们使用&lt;strong&gt;n-gram&lt;/strong&gt;作为子串的排列。例如，给定字符串“abcdef”，不同的三元组（n-gram，其中 n=3）是“abc”、“bcd”、“cde”和“def”。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;布隆过滤器&lt;/strong&gt;是允许概率匹配的数据结构。它们允许一些误报，但&lt;em&gt;不允许&lt;/em&gt;误报。它们在数据库领域有着悠久的使用历史。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如上所述，我们观察到大多数数据在查询时都是不相关的——它从来没有机会对特定查询有价值。因此，我们意识到识别和消除不相关数据本质上与仅搜索相关数据相同。此外，因为我们选择关注“数据不存在的地方”，所以我们寻找一种空间有效的数据结构，它为我们提供了对过滤器查询的相关数据可能在哪里的“足够好”的估计，这将那么让我们忽略其余的数据。&lt;/p&gt;&lt;p&gt;另一个关键成分是 n-gram。它们使我们能够保持“结构无意识”，这使得 Loki 如此易于使用（无模式）。它创建了大量数据，但我们受益于&lt;em&gt;许多日志行具有共同信息&lt;/em&gt;的事实。例如，下面所有以绿色突出显示的文本都显示了不同日志中的重复文本，即所谓的公共信息。&lt;/p&gt;&lt;p&gt; &lt;span style="color: green;"&gt;msg=”将商品添加到购物车” userID=”&lt;/span&gt; a4hbfer74g &lt;span style="color: green;"&gt;” itemID=”&lt;/span&gt; jr8fdnasd65u4”&lt;/p&gt;&lt;p&gt; &lt;span style="color: green;"&gt;msg=”将商品添加到购物车” userID=”&lt;/span&gt; a4hbfer74g &lt;span style="color: green;"&gt;” itemID=”&lt;/span&gt; 78kjasdj4hs21”&lt;/p&gt;&lt;p&gt; &lt;span style="color: green;"&gt;msg =“将商品添加到购物车”userID =“&lt;/span&gt; h74jndvys6 &lt;span style="color: green;"&gt;”itemID =“&lt;/span&gt; yclk37uzs95j8”&lt;/p&gt;&lt;p&gt;幸运的是，布隆过滤器的本质意味着重复是免费的，因此日志行的熵帮助我们解决了空间（成本）问题。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/loki-query-acceleration/bloom-filters-code.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="颜色编码的日志线，绿色表示经常，黄色表示有时，红色表示很少" class="lazyload " /&gt; &lt;noscript&gt;&lt;img alt="颜色编码的日志线，绿色表示经常，黄色表示有时，红色表示很少" src="https://grafana.com/media/blog/loki-query-acceleration/bloom-filters-code.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;把所有这些加起来，我们最终得到了以下方法，我们将在下一节中深入探讨：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/loki-query-acceleration/ngrams-as-bloom-filter-keys.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="N-gram 作为布隆过滤器键映射" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="N-gram 作为布隆过滤器键映射" src="https://grafana.com/media/blog/loki-query-acceleration/ngrams-as-bloom-filter-keys.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;这意味着所有过滤器查询都可以从 Bloom 中受益，顺便说一句，我们目前看到的 Bloom 大小约为日志本身大小的 2%。&lt;/p&gt;&lt;p&gt;除了我们已经讨论过的所有内容之外，查询加速还附带了全新的查询分片策略，我们利用布隆过滤器来产生更少、更公平的查询分片。&lt;/p&gt;&lt;p&gt;传统上，通过分析 TSDB 索引统计数据，Loki 会确定最接近的 2 的幂，以将数据划分为理论上大小大致相等的分片。不幸的是，当某些系列的数据比其他系列多得多时，情况通常并非如此。因此，某些分片最终会比其他分片处理更多的数据。&lt;/p&gt;&lt;p&gt;现在，我们使用布隆过滤器来减少查询前端规划阶段要立即处理的块数量，并均匀分配每个分片查询需要处理的块数量。&lt;/p&gt;&lt;h2 id="how-the-bloom-filter-components-work"&gt;布隆过滤器组件如何工作&lt;/h2&gt;&lt;p&gt;让我们深入了解一下布隆过滤器是如何创建的以及如何使用它们来匹配过滤表达式。我们引入了两个新组件：Bloom 压缩器和 Bloom 网关。&lt;/p&gt;&lt;p&gt;布隆压缩器根据对象存储中的块构建布隆过滤器。我们为每个系列构建一个 Bloom，并将它们聚合到块文件中。 Bloom 区块中的 Series 遵循与 Loki 的&lt;a href="https://grafana.com/docs/loki/latest/operations/storage/tsdb/?pg=blog&amp;amp;plcmt=body-txt"&gt;TSDB&lt;/a&gt;和分片计算相同的排序方案。这在查询时提供了数据局部性优势，因为同一分片中的系列可能位于同一块中。除了块之外，压缩器还维护一个元数据文件列表，其中包含对 Bloom 块的引用以及构建它们的 TSDB 索引文件。&lt;/p&gt;&lt;p&gt;布隆压缩器是水平可扩展的，它们使用环来分片租户并声明该系列键空间子集的所有权。对于给定的系列，拥有该系列的压缩器将迭代其块内的所有日志行并构建 Bloom。对于每个日志行，我们计算其 n-gram 并将每个 n-gram 的哈希值和每个 n-gram 的哈希值加上块标识符附加到 Bloom。前者允许网关跳过整个系列，而后者则用于跳过单个块。&lt;/p&gt;&lt;p&gt;例如，给定块&lt;span style="color: green;"&gt;“aaf67d”&lt;/span&gt;中的日志行&lt;span style="color: green;"&gt;“abcdef”&lt;/span&gt; ，我们计算其n-gram： &lt;span style="color: green;"&gt;“abc”，“bcd”，“cde”，“def”&lt;/span&gt; 。并附加到系列 Bloom &lt;span style="color: green;"&gt;hash(“abc”)&lt;/span&gt; 、 &lt;span style="color: green;"&gt;hash(“abc” + “aaf67d”)&lt;/span&gt; ... &lt;span style="color: green;"&gt;hash(“def”)&lt;/span&gt; 、 &lt;span style="color: green;"&gt;hash(“def” + ““aaf67d”)&lt;/span&gt; 。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/loki-query-acceleration/bloom-compactor.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Bloom 压缩器架构" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Bloom 压缩器架构" src="https://grafana.com/media/blog/loki-query-acceleration/bloom-compactor.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;另一方面，Bloom 网关处理来自索引网关的块过滤请求。该服务获取块列表和过滤表达式，并将它们与布隆过滤器进行匹配，删除那些与给定过滤器表达式不匹配的块。&lt;/p&gt;&lt;p&gt;与 Bloom 压缩器一样，新网关也可水平扩展，并将环用于与压缩器相同的目的：对租户和系列键空间进行分片。索引网关使用环根据这些块的系列指纹来确定它们应该发送块过滤请求的 Bloom 网关。&lt;/p&gt;&lt;p&gt;通过将 n-gram 添加到压缩器中的 Bloom 过滤器而不是整个日志行，Bloom 网关可以执行部分​​匹配。对于上面的示例，过滤器表达式&lt;span style="color: green;"&gt;|= “abcd”&lt;/span&gt;将生成两个 n 元语法： &lt;span style="color: green;"&gt;“abc”&lt;/span&gt;和&lt;span style="color: green;"&gt;“bcd”&lt;/span&gt; 。两者都将与布鲁姆比赛。&lt;/p&gt;&lt;p&gt;现在，对于该系列中的每个块，我们可以通过将块 ID 附加到 n-gram 来再次测试 Bloom。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/loki-query-acceleration/bloom-gateway.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Bloom网关架构" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Bloom网关架构" src="https://grafana.com/media/blog/loki-query-acceleration/bloom-gateway.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;总的来说，下图展示了我们如何构建 Bloom，以及如何使用它们来跳过与过滤表达式中的 n 元语法不匹配的序列和块：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/loki-query-acceleration/architecture.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="组合架构" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="组合架构" src="https://grafana.com/media/blog/loki-query-acceleration/architecture.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; N 元语法的大小是可配置的。 n-gram 越长，我们需要附加到布隆过滤器的标记就越少。然而，较长的过滤表达式需要能够根据布隆过滤器检查它们。对于上面的示例，n 元语法长度为 3，我们需要过滤至少包含 3 个字符的表达式。&lt;/p&gt;&lt;h2 id="creating-a-good-user-experience"&gt;创造良好的用户体验&lt;/h2&gt;&lt;p&gt;当然，我们的主要目标是让查询更快地返回数据！对于特别小的“针”，例如查找 UUID 或其他很少出现的字符串，这种方法往往效果更好。&lt;/p&gt;&lt;p&gt;布隆过滤器对于精确搜索特别有用 - 例如，如果您正在查找提及特定客户 ID 或唯一错误代码的所有日志。我们发现对于使用 Loki 的开发人员和支持工程师来说这是一种非常常见的模式。由于 Bloom 过滤器允许 Loki 仅处理可能包含这些术语的日志，并且这些术语可能出现在很少的日志行中，因此对搜索时间的影响很大。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link captioned" href="https://grafana.com/media/blog/loki-query-acceleration/support-ticket.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Support ticket" class="lazyload mb-0" title="*常见用例的示例*" /&gt;&lt;noscript&gt;&lt;img alt="Support ticket" src="https://grafana.com/media/blog/loki-query-acceleration/support-ticket.png" title="*常见用例的示例*" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;figcaption class="w-100p caption text-gray-13 "&gt;&lt;em&gt;常见用例的示例&lt;/em&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;所有迹象都表明布隆过滤器确实有效。早期的内部测试表明，使用 Bloom 过滤器，Loki 可以在运行查询时跳过很大一部分日志数据。我们的开发环境测试表明，我们现在可以过滤掉之前处理查询所需的 70% 到 90% 的块。&lt;/p&gt;&lt;p&gt;下面是我们在使用布隆过滤器运行“大海捞针”搜索之一时看到的结果示例。该查询包含多个过滤条件，代表了我们看到客户在由 Loki 提供支持的&lt;a href="https://grafana.com/products/cloud/logs/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud Logs&lt;/a&gt;上运行的典型用例。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link captioned" href="https://grafana.com/media/blog/loki-query-acceleration/filter-ration.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Filter ratio" class="lazyload mb-0" title="*使用blooms绕过的块和系列的百分比*" /&gt; &lt;noscript&gt;&lt;img alt="Filter ratio" src="https://grafana.com/media/blog/loki-query-acceleration/filter-ration.png" title="*使用blooms绕过的块和系列的百分比*" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;figcaption class="w-100p caption text-gray-13 "&gt;&lt;em&gt;使用绽放绕过的块和系列的百分比&lt;/em&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="a-note-of-caution-on-use-cases"&gt;关于用例的注意事项&lt;/h3&gt;&lt;p&gt;在我们当前的实现中，并非每个查询都会受益于布隆过滤器。让我们看一下布隆过滤器会被调用和不会被调用的条件：&lt;/p&gt;&lt;p&gt;使用blooms的查询应满足以下条件：&lt;/p&gt;&lt;ul class="bullet-img-check"&gt;&lt;li&gt;查询应至少包含一个过滤表达式。而&lt;span style="color: green;"&gt;{env=“prod”} |= “order=17863472” | logfmt&lt;/span&gt;将使用布隆过滤器， &lt;span style="color: green;"&gt;{env=“prod”} | logmt&lt;/span&gt;不会。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;但是，以下情况将阻止查询利用绽放：&lt;/p&gt;&lt;ul class="bullet-img-check-red-3"&gt;&lt;li&gt;布隆过滤器不用于不等于过滤器：常规过滤器和正则表达式过滤器。 &lt;span style="color: green;"&gt;!= “debug”&lt;/span&gt;和&lt;span style="color: green;"&gt;!~ “(staging|dev)&lt;/span&gt;都不会使用布隆过滤器。&lt;/li&gt;&lt;li&gt;在行格式化表达式之后过滤表达式不会使用布隆过滤器。例如&lt;span style="color: green;"&gt;|= `level=“error”` |对数函数 | line_format “ERROR {{.err}}” |= `traceID=“3ksn8d4jj3”`&lt;/span&gt;其中&lt;span style="color: green;"&gt;|= `level=“error”`&lt;/span&gt;将从 Bloom 过滤器中受益，但&lt;span style="color: green;"&gt;|= `traceID=“3ksn8d4jj3”`&lt;/span&gt;则不会。&lt;/li&gt;&lt;li&gt;尚未在 Bloom 网关上下载 Bloom 块的查询。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我们还能够以一种符合 Loki 易用性原则之一的方式来实现这一点：&lt;strong&gt;大规模无模式&lt;/strong&gt;。因此，除了数据返回速度更快之外，查询体验看起来完全相同。您仍然可以以相同的方式提取数据。当我们在&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;中推出这一功能时，无需进行任何配置即可在客户端使用 Blooms。&lt;/p&gt;&lt;h2 id="looking-ahead"&gt;展望未来&lt;/h2&gt;&lt;p&gt;这是一个非常有前途的实验性功能，但这只是一个开始。我们已经让它发挥作用了：现在是时候让它变得更简单、更快了！要了解有关查询加速的更多信息，以及如何在 Loki 集群中启用它，请查看&lt;a href="https://grafana.com/docs/loki/latest/?pg=oss-loki&amp;amp;plcmt=quick-links"&gt;Loki 3.0 文档&lt;/a&gt;。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Wed, 29 May 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/29/grafana-loki-query-acceleration-how-we-sped-up-queries-without-adding-resources/</guid></item><item><title>【Grafana OnCall: Use the new bi-directional ServiceNow integration for seamless alert flows】Grafana OnCall：使用新的双向 ServiceNow 集成实现无缝警报流</title><link>https://grafana.com/blog/2024/05/28/grafana-oncall-use-the-new-bi-directional-servicenow-integration-for-seamless-alert-flows/</link><description>&lt;p&gt;当您管理可能影响您的服务和客户的事件时，每一刻都很重要。这就是为什么我们很高兴在&lt;a href="https://grafana.com/products/cloud/oncall/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana OnCall&lt;/a&gt;和 ServiceNow 之间引入新的双向集成，ServiceNow 是许多大型组织用来帮助管理事件的流行平台。&lt;/p&gt;&lt;p&gt;借助&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;中现已提供的这一新功能，警报可以从 Grafana OnCall 流向 ServiceNow，反之亦然，有助于保持事件状态同步，以便每个人都在同一页面上。这一强大的集成是可配置的，无论您是调整 ServiceNow 凭据还是微调警报行为，您都可以在一个地方进行必要的更改。&lt;/p&gt;&lt;p&gt;让我们详细了解一下这个新功能，以及如何使用它来实现更有凝聚力的事件响应。&lt;/p&gt;&lt;h2 id="route-servicenow-incidents-to-grafana-oncall"&gt;将 ServiceNow 事件路由到 Grafana OnCall&lt;/h2&gt;&lt;p&gt;通过新的集成，在 ServiceNow 中创建的事件可以在 Grafana OnCall 中自动生成相应的警报组。例如，假设您想在 ServiceNow 中创建一个事件，如下所示：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/grafana-oncall-servicenow/servicenow-ui.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="ServiceNow UI 事件菜单" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="ServiceNow UI 事件菜单" src="https://grafana.com/media/blog/grafana-oncall-servicenow/servicenow-ui.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;一旦您在 ServiceNow 中触发该事件，Grafana OnCall 将自动创建相应的警报组：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/grafana-oncall-servicenow/corresponding-alert-group.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana OnCall 中对应的警报组" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana OnCall 中对应的警报组" src="https://grafana.com/media/blog/grafana-oncall-servicenow/corresponding-alert-group.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;这些警报组通过标准 Grafana OnCall 机制（例如路线、升级链和待命时间表）智能路由，因此可以立即向正确的个人和团队发出警报。以下是 ServiceNow 中基于事件分配组的路由配置示例：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/grafana-oncall-servicenow/add-route.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="添加路线菜单" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="添加路线菜单" src="https://grafana.com/media/blog/grafana-oncall-servicenow/add-route.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;如图所示，分配给 ServiceNow 中“客户支持”组的事件会触发相应的升级链。同样，标记为“基础设施”和“软件”的事件将被路由到各自的升级链。&lt;/p&gt;&lt;p&gt;此集成可以根据您的需求进行定制，因此您可以根据各种事件属性（例如服务、类别、优先级和其他字段）路由警报。&lt;/p&gt;&lt;h2 id="sync-incident-status"&gt;同步事件状态&lt;/h2&gt;&lt;p&gt;ServiceNow 很灵活，这种集成也很灵活。例如，您可以拥有 ServiceNow 实例特有的自定义事件状态。如果使用得当，这可能非常强大，但如果相同的功能无法在您的待命服务中匹配，它也可能受到限制。这就是为什么我们确保您可以通过此集成将 ServiceNow 中的任何状态映射回 Grafana OnCall：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/grafana-oncall-servicenow/status-mapping.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="状态映射" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="状态映射" src="https://grafana.com/media/blog/grafana-oncall-servicenow/status-mapping.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;在 Grafana OnCall 中配置此同步非常简单，确保您的团队始终掌握有关事件状态的最新信息。&lt;/p&gt;&lt;h2 id="create-incidents-in-servicenow"&gt;在 ServiceNow 中创建事件&lt;/h2&gt;&lt;p&gt;想象一下，您已经在可观测性框架中使用了 Alertmanager、 &lt;a href="https://grafana.com/products/cloud/alerting/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Alerting&lt;/a&gt; 、Amazon SNS、自定义 Webhooks 等工具或&lt;a href="https://grafana.com/docs/oncall/latest/integrations/?pg=blog&amp;amp;plcmt=body-txt#list-of-available-integrations"&gt;Grafana OnCall 支持的任何其他集成&lt;/a&gt;。通过这种新的集成，您可以根据此类工具的警报在 ServiceNow 中创建事件，利用整个监控生态系统的统一配置。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/grafana-oncall-servicenow/connect-integration.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="内容整合列表" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="内容整合列表" src="https://grafana.com/media/blog/grafana-oncall-servicenow/connect-integration.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;此功能可确保您的事件管理集中且一致，无论警报来源如何。&lt;/p&gt;&lt;h2 id="customize-the-integration"&gt;定制集成&lt;/h2&gt;&lt;p&gt;默认情况下，常见的 Grafana OnCall 事件也将反映在 ServiceNow 中。这包括警报组何时创建、确认或解决等。但我们知道每个团队都是不同的，这就是为什么我们确保您可以调整此集成以适应您的工作方式。&lt;/p&gt;&lt;p&gt;想要向事件添加更多信息或根据发生的情况调整警报的处理方式？您可以通过编辑其传出 Webhooks 轻松修改集成的行为。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/grafana-oncall-servicenow/outgoing-webhooks.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="传出 Webhook 菜单" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="传出 Webhook 菜单" src="https://grafana.com/media/blog/grafana-oncall-servicenow/outgoing-webhooks.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;通过利用 Grafana OnCall 的&lt;a href="https://grafana.com/docs/oncall/latest/configure/outgoing-webhooks/?pg=blog&amp;amp;plcmt=body-txt"&gt;传出 webhooks&lt;/a&gt; ，您可以获得大量空间来使用强大的模板引擎进行自定义。例如，假设当 Grafana OnCall 警报组静音时，您不想在 ServiceNow 中执行任何操作，因为这不是正常事件响应的一部分。只需删除“Silented”webhook 即可。&lt;/p&gt;&lt;h2 id="learn-more-about-grafana-oncall"&gt;了解有关 Grafana OnCall 的更多信息&lt;/h2&gt;&lt;p&gt;请访问&lt;a href="https://grafana.com/docs/oncall/latest/integrations/servicenow/?pg=blog&amp;amp;plcmt=body-txt"&gt;我们的文档&lt;/a&gt;了解更多详细信息，并开始将 ServiceNow 集成到您的 Grafana OnCall 设置中。查看最近的一些 Grafana OnCall 博客文章，了解我们为支持&lt;a href="https://grafana.com/blog/2023/09/18/a-better-grafana-oncall-delivering-on-features-for-users-at-scale/"&gt;大规模运营的组织&lt;/a&gt;、与 Grafana Cloud 的其他部分&lt;a href="https://grafana.com/blog/2024/03/29/a-better-grafana-oncall-seamless-workflows-with-the-rest-of-grafana-cloud/"&gt;更紧密地集成&lt;/a&gt;以及解决我们一些&lt;a href="https://grafana.com/blog/2023/08/31/a-better-grafana-oncall-web-based-scheduling-mobile-app-email-support/"&gt;最大的功能请求而&lt;/a&gt;做出的最新改进。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Tue, 28 May 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/28/grafana-oncall-use-the-new-bi-directional-servicenow-integration-for-seamless-alert-flows/</guid></item></channel></rss>