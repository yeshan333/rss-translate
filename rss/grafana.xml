<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Grafana Labs 上的 Grafana Labs 博客</title><link>https://grafana.com/blog/</link><description>Grafana Labs 上的 Grafana Labs 博客中的最​​新内容</description><lastBuildDate>Tue, 30 Apr 2024 16:05:19 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>组织您的 Grafana k6 性能测试套件：入门最佳实践</title><link>https://grafana.com/blog/2024/04/30/organizing-your-grafana-k6-performance-testing-suite-best-practices-to-get-started/</link><description>&lt;p&gt;2017 年，我们开源了 Grafana k6，并向所有人提供了第一个测试版。这不是我们的第一次牛仔竞技 - k6 标志着我们团队十多年来开发的第三个负载测试工具。我们已经认识到现有解决方案的差距，以及阻碍开发人员社区采用的障碍。&lt;/p&gt;&lt;p&gt;该计划既简单又雄心勃勃：让我们构建一个开发人员真正喜欢使用的工具&lt;em&gt;，并&lt;/em&gt;帮助工程团队构建更可靠的软件。 k6 是我们团队的第一个 JavaScript 脚本化工具。&lt;/p&gt;&lt;p&gt;自早期以来，我们已经取得了长足的进步，但我们仍然听到新用户提出同样的常见问题： &lt;em&gt;“我应该如何使用 k6 构建我的性能测试项目？”&lt;/em&gt;&lt;/p&gt;&lt;p&gt;在这篇博文中，我们提供了一些&lt;a href="https://grafana.com/oss/k6/"&gt;Grafana k6&lt;/a&gt;入门指南，然后分享了&lt;strong&gt;组织性能测试套件的最佳实践列表。&lt;/strong&gt;无论您使用开源 Grafana k6 还是&lt;a href="https://grafana.com/products/cloud/k6/"&gt;Grafana Cloud k6&lt;/a&gt; （我们完全托管的性能测试平台），这些实践都将帮助您更快地进行规划和提升。&lt;/p&gt;&lt;h2 id="getting-started-with-k6"&gt; k6 入门&lt;/h2&gt;&lt;p&gt;对于许多团队来说，开始使用 k6（或者一般来说是性能测试）是一个新的旅程。我们的一般建议很简单，旨在揭开这一过程的神秘面纱：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;像对待任何其他类型的测试套件一样对待它。&lt;/li&gt;&lt;li&gt;从简单开始，然后迭代。基本的连续测试比根本不测试要好。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;让我们进一步深入探讨每一点。&lt;/p&gt;&lt;h3 id="treat-it-as-you-would-any-other-kind-of-testing-suite"&gt;像对待任何其他类型的测试套件一样对待它&lt;/h3&gt;&lt;p&gt;工程团队通常在遇到严重的可靠性问题后开始进行性能测试。但为了更加主动并在潜在的可靠性问题发生之前解决它们，您应该像进行任何其他类型的频繁测试一样接受性能测试。&lt;/p&gt;&lt;p&gt;也许，对于其他类型的测试，您可以根据失败风险、关键业务流程或问题频率来确定优先级。在使用 k6 进行性能测试时，您可以采用相同的策略和原则。 （不过，有一些具体的事情需要记住——更多内容见下文。）&lt;/p&gt;&lt;h3 id="start-simple-and-iterate"&gt;从简单开始并迭代&lt;/h3&gt;&lt;p&gt;这一切都从一些测试开始，随着团队获得更多的经验和信心，性能测试套件自然会扩展。与其他类型的测试一样，性能测试成功的关键在于采用持续测试方法。 （我将放弃在本博客中深入探讨“原因”，但要深入了解该主题，请查看我的同事 Marie Cruz 撰写的&lt;a href="https://dzone.com/articles/a-continuous-testing-approach-to-performance" rel="noopener noreferrer" target="_blank"&gt;这篇文章&lt;/a&gt;，该文章与&lt;a href="https://grafana.com/docs/k6/latest/testing-guides/automated-performance-testing/"&gt;k6 自动化指南&lt;/a&gt;完美搭配。）&lt;/p&gt;&lt;h2 id="it-is-just-another-testing-suite--but-often-has-a-broader-scope"&gt;它&lt;em&gt;只是&lt;/em&gt;另一个测试套件 - 但通常具有更广泛的范围&lt;/h2&gt;&lt;p&gt;同样，我们希望您像对待任何其他类型的测试一样对待性能测试。也就是说，承认性能测试的具体特征并揭穿很难的神话是至关重要的。&lt;/p&gt;&lt;p&gt;我时常听到性能工程师专家说“性能测试很难”，但我的看法却截然不同。困难通常来自于孤立的操作，而不是来自性能测试实践本身。&lt;/p&gt;&lt;p&gt;更具体地说，当领导测试工作的人员不完全熟悉操作系统或其实现细节时，通常会出现挑战。在这种情况下，编写测试、了解系统性能并调查潜在问题确实会很困难。如果您发现自己处于这种情况，请与开发人员密切合作， &lt;a href="https://k6.io/modern-load-testing-for-engineering-teams/#work-with-developers-to-shift-testing-left" rel="noopener noreferrer" target="_blank"&gt;“将测试左移”&lt;/a&gt;并采用全团队测试方法。&lt;br /&gt;&lt;br /&gt;作为一名开发人员，如果有一定的测试经验，性能测试的做法是比较简单的。简而言之，它就像自动化功能测试，但增加了负载维度。数据参数化虽然可能很棘手，但肯定是易于管理的。&lt;/p&gt;&lt;p&gt;将其视为一个循环：测试、开发、再次测试。冲洗并重复，直到您可以验证系统在模拟负载下按预期运行（基于您的关键可靠性指标）。&lt;br /&gt;&lt;br /&gt;有几个方面需要记住，使性能测试与其他测试类型不同，这些方面影响我们测试套件的设计：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;不同的测试环境。&lt;/strong&gt;我们的系统或应用程序通常部署在多个环境中：开发、QA、预生产、生产等。出于不同目的在不同环境中运行相同的测试是很常见的，通常具有不同的工作负载（这引出了我的下一点...... ）&lt;/li&gt;&lt;li&gt;&lt;strong&gt;使用不同的工作负载进行测试。&lt;/strong&gt;被测系统在中等流量、高负载流量和峰值流量下的表现通常有所不同。因此，通常运行不同的&lt;a href="https://grafana.com/docs/k6/latest/testing-guides/test-types/"&gt;负载测试类型&lt;/a&gt;来验证预期流量模式下的性能。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;可靠性是团队努力的结果。&lt;/strong&gt;应用程序的可靠性取决于底层子系统的可靠性。无论可靠性和质量保证的组织方法或测试方法如何，负责这些不同系统和服务的所有团队都参与测试至关重要。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这些方面带来了挑战，需要灵活的测试方法。&lt;/p&gt;&lt;h2 id="four-best-practices-for-performance-testing-suites"&gt;性能测试套件的四个最佳实践&lt;/h2&gt;&lt;p&gt;多年来，k6 团队在性能测试套件中观察到了一些常见模式。在这里，我们将概述这些常见和一般的最佳实践，其中还包括&lt;a href="https://k6.io/champions-program/" rel="noopener noreferrer" target="_blank"&gt;Grafana k6 冠军&lt;/a&gt;Grzegorz Piechnik、Krzysztof Widera、Paul Maxwell-Walters 和 Sahani Perera 的建议。我们感谢他们与社区分享他们的专业知识！&lt;/p&gt;&lt;p&gt;&lt;em&gt;注意：以下部分提供了模式概述，示例仅供参考。每个项目都可以以自己独特的方式实现这些模式。&lt;/em&gt;&lt;/p&gt;&lt;h3 id="1-modularize-test-configurations"&gt; 1. 模块化测试配置&lt;/h3&gt;&lt;p&gt;模块化测试对于跨不同环境和工作负载重用测试至关重要。这种模块化方法提供了更大的灵活性，增强了测试维护，并促进了团队成员之间的协作。&lt;/p&gt;&lt;p&gt;首先，使用&lt;a href="https://grafana.com/docs/k6/latest/using-k6/environment-variables/"&gt;环境变量&lt;/a&gt;指定不同的基本端点：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;k6 run -e BASE_URL=https://pizza.grafana.fun script.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;然后，您的测试脚本可以通过&lt;code&gt;__ENV&lt;/code&gt;变量读取该值，确保测试代码保持不变：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;const BASE_URL = __ENV.BASE_URL || &amp;#39;http://localhost:3333&amp;#39;; let res = http.get(`${BASE_URL}/api/pizza`);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;或者，您可以使用密钥对对象来存储每个环境的设置。当每个环境有多个设置时，这是更好的选择：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;const EnvConfig = { dev: { BASE_URL: &amp;#39;http://localhost:3333&amp;#39;, MY_FLAG: true } qa: { BASE_URL: &amp;#39;https://pizza.qa.grafana.fun&amp;#39;, MY_FLAG: true }, pre: { BASE_URL: &amp;#39;https://pizza.ste.grafana.fun&amp;#39;, MY_FLAG: false }, prod: { BASE_URL: &amp;#39;https://pizza.grafana.fun&amp;#39;, MY_FLAG: false } }; const Config = EnvConfig[__ENV.ENVIRONMENT] || EnvConfig[&amp;#39;dev&amp;#39;]; const BASE_URL = Config.BASE_URL;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;注意：请记住不要在配置文件中存储敏感数据。对于基于云的测试，请考虑使用&lt;a href="https://grafana.com/docs/grafana-cloud/k6/author-run/cloud-scripting-extras/cloud-environment-variables/"&gt;云环境变量&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;我们之前的测试现在可以针对托管应用程序的四个环境运行。例如：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;k6 run -e ENVIRONMENT=prod script.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;我们还可以将相同的方法应用于不同的工作负载（流量）。为了简单起见，使用相同的方法设置 k6 工作负载，无论是&lt;a href="https://grafana.com/docs/k6/latest/get-started/running-k6/#ramp-vus-up-and-down-in-stages"&gt;阶段&lt;/a&gt;还是&lt;a href="https://grafana.com/docs/k6/latest/using-k6/scenarios/"&gt;场景&lt;/a&gt;。这是使用阶段的示例：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;const WorkloadConfig = { average: [ { duration: &amp;#39;1m&amp;#39;, target: 100 }, { duration: &amp;#39;4m&amp;#39;, target: 100 }, { duration: &amp;#39;1m&amp;#39;, target: 0 }, ], stress: [ { duration: &amp;#39;1m&amp;#39;, target: 700 }, { duration: &amp;#39;4m&amp;#39;, target: 700 }, { duration: &amp;#39;1m&amp;#39;, target: 0 }, ], smoke: [{ duration: &amp;#39;10s&amp;#39;, target: 1 }], }; const stages = WorkloadConfig[__ENV.WORKLOAD] || WorkloadConfig[&amp;#39;smoke&amp;#39;]; export const options = { stages: stages, };&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;我们的测试现在配置为运行三种不同的工作负载。因此，我们设计了一项针对 3 种工作负载和 4 种环境的测试——单次测试有 12 种组合。&lt;/p&gt;&lt;p&gt;我们的目标是为各种场景创建其他测试，例如不同的 API 或用户流程。当然，重用工作负载和环境设置的想法似乎很理想，对吧？我们会这么做的。但是，请务必记住，并非每个测试和环境都适合所有工作负载。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;并非所有用户流都会收到相同的流量。&lt;/strong&gt;有些操作比其他操作处理更多的流量。对于流量较低或较高的场景，通常适合将工作负载区分为几个子级别，例如&lt;code&gt;averageLow&lt;/code&gt;和&lt;code&gt;averageHigh&lt;/code&gt; 。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;并非所有测试都在所有环境中执行。&lt;/strong&gt;每个环境配置不同的基础设施设置并支持不同的容量。开发或 QA 环境不会设置与生产或预生产相同的资源和可扩展性策略。在没有高可用性设置的环境中运行压力测试没有什么意义。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;专注于性能回归。&lt;/strong&gt;预发布环境很少完全复制生产环境的基础架构。不要期望两个环境在相同流量下表现相同。我们不应该痴迷于在所有环境中使用相同的工作负载。目标是建立&lt;a href="https://grafana.com/docs/grafana-cloud/k6/analyze-results/test-comparison/#use-a-test-as-a-baseline"&gt;性能基线&lt;/a&gt;的工作负载，然后进行频繁的测试来识别性能变化（回归）。&lt;/p&gt;&lt;p&gt;考虑到这些方面，我们的工作负载设置可能会演变为以下内容：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;// config/workload.js export const WorkloadConfig = { smoke: [...], stag: { averageLow: [...], averageMed: [...], averageHigh: [...], stress: [...], }, pre: { averageLow: [...], averageMed: [...], averageHigh: [...], stress: [...], peak: [...], }, prod: {...} };&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;前面的代码片段是用于演示目的的基本示例。不同的团队可能有不同的方法来组织配置文件。有些团队可能只使用一个配置文件来设置环境和工作负载，而其他团队可能更喜欢按数据类型拆分配置文件，如下所示：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;├── config/ │ ├── workloads.js │ └── settings.js ├── test1.js └── test2.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;另一种替代方法是按环境分隔配置文件，并使用 Bundler 仅加载必要的设置。下面显示了一个示例，更多详细信息将在即将发布的有关 JavaScript 工具、模块和 TypeScript 的相关博客文章中讨论：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;├── config/ │ ├── dev.js │ ├── pre.js │ └── prod.js ├── test1.js └── test2.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;您可以随意组织这些配置文件，使其最适合您的特定环境和测试流程。您可能会经历几次迭代，创建更多测试，直到您的配置设置变得更加稳定。&lt;/p&gt;&lt;p&gt;尽管每个测试环境和场景都是独特的，但某些测试组通常共享范围和实现细节。因此，这些和许多其他&lt;a href="https://grafana.com/docs/k6/latest/using-k6/k6-options/reference"&gt;k6 选项&lt;/a&gt;可以模块化，以进一步优化您的 k6 测试套件。&lt;/p&gt;&lt;p&gt;&lt;a href="https://grafana.com/docs/k6/latest/using-k6/thresholds/"&gt;阈值&lt;/a&gt;是一个常见且重要的考虑因素。您很可能已经在所有测试或特定测试组中定义了一些通用阈值。为了结束本节，以下是&lt;strong&gt;模块化阈值的示例：&lt;/strong&gt;&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;export const ThresholdsConfig = { common: { http_req_duration: [&amp;#39;p(99)&amp;lt;1000&amp;#39;], http_req_failed: [&amp;#39;rate&amp;lt;0.01&amp;#39;] }, pre: { instant: { http_req_duration: [&amp;#39;p(99)&amp;lt;300&amp;#39;], }, }, prod:{} };&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;然后，测试可以导入并配置其阈值，如下所示：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;import { ThresholdsConfig } from &amp;#39;./config/thresholds.js&amp;#39;; let thresholds = Object.assign({}, ThresholdsConfig.common, ThresholdsConfig.pre.instant); export const options = { thresholds: thresholds, };&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="2-implement-reusable-test-scenarios"&gt; 2. 实施可重用的测试场景&lt;/h3&gt;&lt;p&gt;我们的应用程序运行的每个环境通常都有不同的用途。因此，在多个环境中运行相同的“测试场景”（即相同的虚拟用户 (VU) 和测试逻辑）是很常见的，每个环境都有不同的目标。&lt;/p&gt;&lt;p&gt;例如，冒烟测试（最小负载）可能会在 QA 环境中运行以进行功能测试或检查测试错误。然后，可以针对预发布环境执行相同的测试场景以验证 SLO 指标，同时在生产中安排夜间测试以评估性能变化。简而言之，&lt;strong&gt;同一个场景为了不同的目标在多个环境中进行测试。&lt;/strong&gt;&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/grafana-k6-getting-started/grafana-k6-getting-started-guide-test-scenario-diagram.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="描述可重用测试场景的图表。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="描述可重用测试场景的图表。" src="https://grafana.com/media/grafana-k6-getting-started/grafana-k6-getting-started-guide-test-scenario-diagram.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;在此类情况下，或者当您想要与现有测试结合运行场景时，有必要实现可重用的测试场景（VU 逻辑）。以下是构建测试和模块化场景的示例：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;├── scenarios/ │ ├── e2e/ | │ ├── checkout.js │ | └── read-news.js │ └── apis/ │ └── account.js ├── tests/ │ ├── smoke-read-news-test.js │ ├── pre/ | │ ├── stress-read-news-test.js │ | └── avg-read-news-test.js │ └── prod/ │ └── nightly-read-news-test.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;重用场景时，避免将场景逻辑与其他测试概念耦合。请考虑以下准则：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;实施可以扩展其默认行为的模块化场景。&lt;/li&gt;&lt;li&gt;使&lt;a href="https://grafana.com/docs/k6/latest/using-k6/metrics/create-custom-metrics/"&gt;自定义指标&lt;/a&gt;的使用成为可选。&lt;/li&gt;&lt;li&gt;避免&lt;a href="https://grafana.com/docs/k6/latest/using-k6/tags-and-groups/#groups"&gt;团体&lt;/a&gt;使用。&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/docs/k6/latest/using-k6/tags-and-groups/#user-defined-tags"&gt;标记&lt;/a&gt;请求和检查（以及适当时的自定义指标）。&lt;/li&gt;&lt;li&gt;为了获得更大的灵活性，请使用&lt;a href="https://grafana.com/docs/k6/latest/using-k6/scenarios/"&gt;场景&lt;/a&gt;来设置工作负载。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;不要想太多。首先实施场景，以便在多个测试中重用它们。当您计划新测试时，一个常见的问题是是否扩展现有测试或创建新测试。&lt;br /&gt;&lt;br /&gt;在大多数情况下，我们建议避免多用途测试，并建议为每个场景进行新的测试，每个环境都有一个主要目的，如前所述。这可以防止混合职责，并有助于跟踪同一测试的历史结果，以识别长时间内的性能变化。&lt;/p&gt;&lt;p&gt;如果您有模块化的测试配置和测试场景，那么创建新的基本测试可能就像导入一些模块并调整一些设置一样简单：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;// tests/pre/avg-read-news-test.js import { WorkloadConfig, EnvConfig } from &amp;#39;./config/workload.js&amp;#39;; import ReadNewsScenario from &amp;#39;./scenarios/read-news.js&amp;#39;; const Config = EnvConfig.pre; const stages = WorkloadConfig.pre.averageMed; export const options = { stages: stages, } export default function () { ReadNewsScenario(Config.BASE_URL); }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;此示例展示了如何轻松地通过重用现有模块来创建新测试。&lt;/p&gt;&lt;h3 id="3-create-object-oriented-models-for-data-access"&gt; 3. 创建面向对象的数据访问模型&lt;/h3&gt;&lt;p&gt;实现 API 客户端是与各种类型的 API（例如 RESTful 或 GraphQL）交互的常见模式。 API 客户端封装对后端的请求，抽象出 API 和 k6 的实现细节。&lt;/p&gt;&lt;p&gt;随着请求复杂性的增加或测试套件的增长，API 客户端成为我们的中心点，使与后端的交互变得更加容易。如果 API 发生变化，则只需更新客户端，而不是所有测试。&lt;br /&gt;&lt;br /&gt;这种模式还可以更快地编写新测试并且更容易理解测试代码。这对于团队协作特别有用，当团队成员不熟悉 API 规范或 k6 API 时尤其重要。&lt;/p&gt;&lt;p&gt;以下客户端包含访问所有 API 资源的方法：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;export class APIClient { constructor(token, baseUrl, addCheck) {...} create(type, data, options) {... return {data, res};} find(type, id, options) {... return {data, res};} update(type, id, data, options) {... return {data, res};} remove(type, id, options) {... return {res};} }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;上面的例子作为基本参考。根据 API，您可以选择一个通用客户端或多个客户端，每个客户端适用于从 BaseClass 扩展的特定 API 范围。&lt;/p&gt;&lt;p&gt;该模式的方法应该封装检索和操作数据的逻辑，为其他测试人员提供直观的 API。这些方法应始终返回响应，使每个测试能够根据其特定场景管理响应及其数据。&lt;br /&gt;&lt;br /&gt;作为一般建议，不要将额外的责任归入客户端，并避免非一般情况下的自定义行为。有些人喜欢没有额外责任的客户，而另一些人则更喜欢包含通用逻辑，例如：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;使用&lt;a href="https://grafana.com/docs/k6/latest/using-k6/checks/"&gt;检查&lt;/a&gt;验证预期的响应状态&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/blog/2024/04/30/organizing-your-grafana-k6-performance-testing-suite-best-practices-to-get-started/#4-create-an-error-handling-wrapper"&gt;处理错误响应的报告&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;封装与数据交互的细节的面向对象模型是一种常见的软件模式，并且对于性能测试来说是有益的。此模式不限于 HTTP 请求，因为它可以是与测试代码中的数据或协议进行任何类型交互的有用抽象。例如，下面是一个&lt;a href="https://grafana.com/docs/k6/latest/using-k6-browser/recommended-practices/page-object-model-pattern/"&gt;使用 k6 浏览器与 HTML 页面元素交互的页面对象示例&lt;/a&gt;。&lt;/p&gt;&lt;h3 id="4-create-an-error-handling-wrapper"&gt; 4. 创建错误处理包装器&lt;/h3&gt;&lt;p&gt;如果您已经开始使用 k6，您可能已经注意到 k6 OSS 默认报告有限的错误信息。它只输出 HTTP 请求失败率&lt;a href="https://grafana.com/docs/k6/latest/using-k6/metrics/reference/#http"&gt;&lt;code&gt;http_req_failed&lt;/code&gt;&lt;/a&gt; ：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;http_req_failed................: 36.36% ✓ 40 ✗ 70&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;因此，用户通常会进行&lt;a href="https://grafana.com/docs/k6/latest/using-k6/checks/"&gt;检查&lt;/a&gt;来验证响应状态并了解每个特定请求发生的情况。&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;check(res, { &amp;#39;GET item is 200&amp;#39;: (r) =&amp;gt; r.status === 200, });&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;✗ GET item is 200 ↳ 63% — ✓ 70 / ✗ 40&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;但是，请记住，如果您&lt;a href="https://grafana.com/docs/k6/latest/results-output/"&gt;流式传输 k6 结果&lt;/a&gt;（指标数据点），这些数据点将包括响应状态等信息。在这种情况下，用户可以找到响应法规，而无需实施这些检查：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link captioned" href="https://grafana.com/media/grafana-k6-getting-started/grafana-k6-getting-started-guide-requests-by-URL.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="A screenshot showing response statuses. " class="lazyload mb-0" title="*使用 Grafana 仪表板可视化 k6 请求结果。*" /&gt; &lt;noscript&gt;&lt;img alt="A screenshot showing response statuses. " src="https://grafana.com/media/grafana-k6-getting-started/grafana-k6-getting-started-guide-requests-by-URL.png" title="*使用 Grafana 仪表板可视化 k6 请求结果。*" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;figcaption class="w-100p caption mb-1 text-gray-13 "&gt;&lt;em&gt;使用 Grafana 仪表板可视化 k6 请求结果。&lt;/em&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;默认情况下，检查不会使测试失败。因此，k6 check API 通常用于“信息性”断言；用户倾向于利用检查来提供测试执行的自定义报告。&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;✗ GET item is 200 ↳ 63% — ✓ 70 / ✗ 40 ✓ Add item is 201 ↳ 100% — ✓ 110 / ✗ 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;然而，这些检查缺乏额外的错误信息，并且可能需要更详细的信息才能在故障排除时更有帮助。&lt;br /&gt;&lt;br /&gt;为了在测试期间收集更多错误信息，&lt;strong&gt;我们的第一个建议是重点通过&lt;a href="https://grafana.com/docs/grafana-cloud/introduction/what-is-observability/"&gt;可观察性&lt;/a&gt;或使用检测应用程序的监控解决方案来查找这些错误&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;传统上，性能测试主要集中在测试工具本身内收集结果，通常独立运行。这导致系统操作方面缺乏可见性。&lt;/p&gt;&lt;p&gt;首先了解系统的运行方式及其遥测数据。然后，将您的测试结果与可观测性数据联系起来。您应该能够找到可观察性解决方案中的所有错误，这将指导您将错误与其根本原因联系起来。这就是最终的测试目标。要了解有关如何将测试数据与可观测性数据连接的更多信息，请参阅：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://grafana.com/docs/k6/latest/results-output/grafana-dashboards/"&gt;适用于 k6 OSS 的 Grafana 仪表板&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/docs/k6/latest/javascript-api/k6-experimental/tracing/"&gt;k6/实验/跟踪模块&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/docs/grafana-cloud/k6/analyze-results/correlate-results-in-grafana/"&gt;Grafana Cloud k6：关联 Grafana 中的结果&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;尽管如此，在测试报告中包含错误数据还是很有用的。在 k6 中，有两个常见选项用于存储附加错误信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;记录错误数据并将&lt;a href="https://k6.io/blog/using-loki-to-store-and-query-k6-logs/" rel="noopener noreferrer" target="_blank"&gt;k6 日志输出到 Grafana Loki&lt;/a&gt;或文件，或使用 Grafana Cloud k6。&lt;/li&gt;&lt;li&gt;创建&lt;a href="https://grafana.com/docs/k6/latest/using-k6/metrics/create-custom-metrics/"&gt;自定义计数器指标&lt;/a&gt;来跟踪错误数据。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;首先考虑要存储哪些数据，具体取决于您正在处理一般错误还是特定错误，并基于现有的可用可观测性/遥测数据。&lt;/p&gt;&lt;p&gt;另外，请记住，高负载测试可能会失败数千或数百万次，可能需要您存储大量数据。例如，您可以选择存储端点 URL、错误消息、TraceID 或任何相关的请求或响应详细信息。&lt;br /&gt;&lt;br /&gt;作为参考，下面是一个&lt;code&gt;ErrorHandler&lt;/code&gt;示例，它接受回调来指示处理程序如何记录错误详细信息：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;class ErrorHandler { constructor(logErrorDetails) { this.logErrorDetails = logErrorDetails; } logError(isError, res, tags = {}) { if (!isError) return; const traceparentHeader = res.request.headers[&amp;#39;Traceparent&amp;#39;]; const errorData = Object.assign( { url: res.url, status: res.status, error_code: res.error_code, traceparent: traceparentHeader &amp;amp;&amp;amp; traceparentHeader.toString(), }, tags ); this.logErrorDetails(errorData); } }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;接下来，实例化&lt;code&gt;ErrorHandler&lt;/code&gt;并传递自定义回调以确定如何记录错误详细信息：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;const errorHandler = new ErrorHandler((error) =&amp;gt; {console.error(error);}); // or const errors = new CounterMetric(&amp;#39;errors&amp;#39;); const errorHandler = new ErrorHandler((error) =&amp;gt; {errors.add(1, error);});&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;然后，从场景或 API 客户端调用它，如下所示：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;checkStatus = check(res, { &amp;#39;status is 200&amp;#39;: (res) =&amp;gt; res.status === 200 }); errorHandler.logError(!checkStatus, res);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h2 id="next-steps-and-sharing-with-the-community"&gt;后续步骤并与社区分享&lt;/h2&gt;&lt;p&gt;我们希望这些建议可以帮助您实施更好、更灵活的性能测试套件。如果您正在寻找进一步的指导，请务必查看我们的&lt;a href="https://k6.io/docs/testing-guides/automated-performance-testing/" rel="noopener noreferrer" target="_blank"&gt;自动化性能测试指南&lt;/a&gt;。它提供了建立可重复的性能测试过程的指南。&lt;/p&gt;&lt;p&gt;再次特别感谢 Grafana k6 Champions，他们通过与我们分享他们的专业知识和经验来帮助制定这篇文章！&lt;br /&gt;&lt;br /&gt;如果您有自己的建议或最佳实践想要分享，请将它们添加到我们的&lt;a href="https://github.com/grafana/awesome-k6?tab=readme-ov-file#examplestemplates" rel="noopener noreferrer" target="_blank"&gt;精彩 k6 示例&lt;/a&gt;列表中，并&lt;a href="https://k6io.slack.com/" rel="noopener noreferrer" target="_blank"&gt;在 Slack&lt;/a&gt;和我们的 &lt;a href="https://community.grafana.com/c/grafana-k6/70" rel="noopener noreferrer" target="_blank"&gt;社区论坛&lt;/a&gt;上分享。您的见解不仅对其他用户有用，而且还为 k6 团队考虑未来的改进提供了重要信息。&lt;/p&gt;&lt;p&gt;而且，正如我们常说的：从简单开始，然后迭代。测试愉快！&lt;/p&gt;</description><pubDate>Tue, 30 Apr 2024 11:13:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/04/30/organizing-your-grafana-k6-performance-testing-suite-best-practices-to-get-started/</guid></item><item><title>PTO 安心：将 Grafana OnCall 与 Google 日历外出活动同步</title><link>https://grafana.com/blog/2024/04/29/pto-peace-of-mind-sync-grafana-oncall-with-google-calendar-out-of-office-events/</link><description>&lt;p&gt;有时，小事可以产生很大的影响。&lt;/p&gt;&lt;p&gt;我们在&lt;a href="https://grafana.com/products/cloud/irm/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 事件和响应管理&lt;/a&gt;(IRM) 中添加了一项新功能，可让您将 Google 日历外出活动与&lt;a href="https://grafana.com/products/cloud/oncall/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana OnCall&lt;/a&gt;同步。这样做，您的团队将确保其值班轮班得到保障，而您的工程师则可以确信，当他们在海滩度假、坐在医生办公室或在医院时，他们的手机上不会收到意外警报。当他们在工作日历上划出一些私人时间时，可以做任何他们想做的事情。&lt;/p&gt;&lt;p&gt;我们最近在内部推出了这一功能（所有 Grafana Labs 工程师轮流值班），我们收到了大量积极的反馈。因此，虽然这不是我们对 Grafana OnCall 所做的最大的工作流程改变（而且我们&lt;a href="https://grafana.com/blog/2023/08/31/a-better-grafana-oncall-web-based-scheduling-mobile-app-email-support/"&gt;最近&lt;/a&gt;&lt;a href="https://grafana.com/blog/2024/03/29/a-better-grafana-oncall-seamless-workflows-with-the-rest-of-grafana-cloud/"&gt;做了&lt;/a&gt;&lt;a href="https://grafana.com/blog/2023/09/18/a-better-grafana-oncall-delivering-on-features-for-users-at-scale/"&gt;很多&lt;/a&gt;改变），但它应该让您和您的团队更加安心，无论您是管理小组日程还是花时间离开。让我们看看它是如何工作的。&lt;/p&gt;&lt;h2 id="simplify-your-on-call-scheduling"&gt;简化您的待命安排&lt;/h2&gt;&lt;p&gt;去年，我们向 Grafana OnCall &lt;a href="https://grafana.com/blog/2023/09/28/introducing-grafana-oncall-shift-swaps-a-simpler-way-to-exchange-on-call-shifts-with-teammates/"&gt;添加了轮班交换功能&lt;/a&gt;。这为待命工程师提供了一种便捷的方式，让他们可以在团队成员不可用时找到他们交换排班。 &lt;a href="https://grafana.com/docs/oncall/latest/manage/on-call-schedules/shift-swaps/?pg=blog&amp;amp;plcmt=body-txt#google-calendar-integration"&gt;Google 日历集成&lt;/a&gt;更进一步，当您知道自己即将无法工作时，该过程会自动执行。&lt;/p&gt;&lt;p&gt;该集成将您的 Grafana OnCall 用户与您的 Google 日历用户连接起来，并为 Grafana OnCall 提供对您的 Google 日历活动（特别是外出活动）的读取访问权限。然后，Grafana OnCall 将定期检查您的日历中是否有外出活动，如果活动与待命轮班重叠，它将自动生成轮班交换请求。&lt;/p&gt;&lt;h3 id="how-to-connect-with-google-calendar"&gt;如何与 Google 日历连接&lt;/h3&gt;&lt;p&gt;要设置集成，请转到 Grafana OnCall“用户”页面上的&lt;strong&gt;查看我的个人资料&lt;/strong&gt;，然后按照&lt;strong&gt;Google 日历选项&lt;/strong&gt;卡下列出的步骤进行操作。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-google-calendar-sync/oncall-user-info-arrow.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana OnCall 用户信息表单，其中箭头指向 Google 日历选项卡" class="lazyload " /&gt; &lt;noscript&gt;&lt;img alt="Grafana OnCall 用户信息表单，其中箭头指向 Google 日历选项卡" src="https://grafana.com/media/blog/oncall-google-calendar-sync/oncall-user-info-arrow.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-google-calendar-sync/sync-meta.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana OnCall 中的 Google 日历选项卡要求连接服务" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana OnCall 中的 Google 日历选项卡要求连接服务" src="https://grafana.com/media/blog/oncall-google-calendar-sync/sync-meta.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;链接后，您将拥有其他配置选项。默认情况下，Grafana OnCall 将查看用户所属的所有待命计划，并在这些计划与外出活动重叠时创建轮班交换。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-google-calendar-sync/shift-swap-calendar.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="轮班交换请求" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="轮班交换请求" src="https://grafana.com/media/blog/oncall-google-calendar-sync/shift-swap-calendar.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;或者，您可以选择哪些待命时间表符合轮班交换的条件。如果您是多个待命日历的一部分，并且您不希望被自动从一个或多个日历中删除，那么这一点就会发挥作用。在这种情况下，您仍然可以选择手动请求换班。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-google-calendar-sync/specific-calendar-sync.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="在 Google 日历选项卡中指定日程同步选项" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="在 Google 日历选项卡中指定日程同步选项" src="https://grafana.com/media/blog/oncall-google-calendar-sync/specific-calendar-sync.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;您还可以通过将&lt;code&gt;#grafana-oncall-ignore&lt;/code&gt;添加到 Google 日历中的活动标题，让 Grafana OnCall 忽略特定事件。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;此集成在 Grafana Cloud 中自动可用。如果您使用 Grafana OnCall OSS，请按照&lt;a href="https://grafana.com/docs/oncall/latest/manage/on-call-schedules/shift-swaps/?pg=blog&amp;amp;plcmt=body-txt#configuring-for-open-source"&gt;此处概述的步骤&lt;/a&gt;配置连接。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="a-better-user-experience-with-grafana-oncall"&gt; Grafana OnCall 提供更好的用户体验&lt;/h2&gt;&lt;p&gt;值班轮班可能会带来压力，因此当事情出现问题时，您最不需要的就是增加压力的工具。正如我们之前提到的，我们在 Grafana Labs 都是轮班值班，所以这是一个我们非常关心的话题。&lt;/p&gt;&lt;p&gt;我们一直在努力使 Grafana OnCall 成为一个&lt;a href="https://grafana.com/blog/2023/08/31/a-better-grafana-oncall-web-based-scheduling-mobile-app-email-support/"&gt;用户友好的工具&lt;/a&gt;，添加了基于 Web 的调度、本机移动应用程序和电子邮件支持等功能。我们对未来几个月计划的其他创新感到兴奋，敬请期待！&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Mon, 29 Apr 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/04/29/pto-peace-of-mind-sync-grafana-oncall-with-google-calendar-out-of-office-events/</guid></item><item><title>GrafanaCON 2024：点播会议现已开放！</title><link>https://grafana.com/blog/2024/04/25/grafanacon-2024-on-demand-sessions-are-now-available/</link><description>&lt;p&gt;4 月 9 日至 10 日，我们在阿姆斯特丹举办了年度 GrafanaCON 活动。 &lt;a href="https://grafana.com/about/events/grafanacon/2024/?pg=blog&amp;amp;plcmt=body-txt"&gt;GrafanaCON 2024&lt;/a&gt;专注于 Grafana 及其扩展的开源生态系统，议程紧凑，包括为期两天的技术讲座和用户成功案例，重点介绍了我们的社区成员使用 Grafana 的所有令人难以置信的方式。&lt;/p&gt;&lt;p&gt;今天，我们很高兴地告诉大家，GrafanaCON 2024 会议可以按需提供！因此，如果您无法亲自参加我们的售罄活动，您现在可以在家中了解所有最新公告、OSS 更新和鼓舞人心的社区用例。&lt;/p&gt;&lt;p&gt;在这里，我们重点介绍一些您今天就可以开始观看的 GrafanaCON 2024 点播会议。要查看活动点播会议的完整阵容，您可以访问&lt;a href="https://grafana.com/about/events/grafanacon/2024/?pg=blog&amp;amp;plcmt=body-txt"&gt;GrafanaCON 2024 网站&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="from-the-grafana-labs-team"&gt;来自 Grafana 实验室团队&lt;/h2&gt;&lt;p&gt;在 GrafanaCON 2024 上，Grafana Labs 团队成员分享了我们 OSS 项目的最新进展，以及推进可观测性策略的最佳实践和见解。一些点播会议包括： &lt;/p&gt;&lt;h3 id="grafanacon-2024-opening-keynotehttpsgrafanacomabouteventsgrafanacon2024keynote-grafana-11pgblogplcmtbody-txt"&gt; &lt;a href="https://grafana.com/about/events/grafanacon/2024/keynote-grafana-11/?pg=blog&amp;amp;plcmt=body-txt"&gt;GrafanaCON 2024 开幕主题演讲&lt;/a&gt;&lt;/h3&gt;&lt;figure class="figure-wrapper w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/about/events/grafanacon/2024/keynote-grafana-11/"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="GrafanaCON 2024 开幕主题演讲的会议卡。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="GrafanaCON 2024 开幕主题演讲的会议卡。" src="https://grafana.com/media/grafanacon/2024/ondemand/OpeningKeynote_vidthumb_2.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; Grafana Labs 首席执行官兼联合创始人 Raj Dutt 宣布了 Golden Grot 社区仪表板奖的获奖者，我们的工程团队成员围绕我们的开源可观测性项目发布了一些令人兴奋的公告。最后，Grafana 的创建者 Torkel Ödegaard 公布了 Grafana 11 的新增功能。 &lt;/p&gt;&lt;h3 id="introducing-grafana-alloy-a-distribution-of-the-otel-collectorhttpsgrafanacomabouteventsgrafanacon2024introducing-otel-collector-distribution-grafana-alloypgblogplcmtbody-txt"&gt; &lt;a href="https://grafana.com/about/events/grafanacon/2024/introducing-otel-collector-distribution-grafana-alloy/?pg=blog&amp;amp;plcmt=body-txt"&gt;隆重推出 Grafana Alloy，它是 OTel Collector 的一个发行版&lt;/a&gt;&lt;/h3&gt;&lt;figure class="figure-wrapper w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/about/events/grafanacon/2024/introducing-otel-collector-distribution-grafana-alloy/"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="GrafanaCON 2024 的 Grafana 合金会议的会议卡。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="GrafanaCON 2024 的 Grafana 合金会议的会议卡。" src="https://grafana.com/media/grafanacon/2024/ondemand/GrafanaCON24-Introducing-Alloy.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;向格拉法纳合金问好！ Grafana Labs 的 OpenTelemetry Collector 发行版汇集了 OTel 和 Prometheus 的精华，提供真正优化的混合体验，特别是与 Grafana Cloud 配合使用时。 Grafana Alloy 使用组件构建可观测性管道，以进行遥测收集、处理和交付。在本次会议中，高级软件工程师 Matt Durham 和 Paschalis Tsilias 深入探讨 Alloy 及其配置语言的核心概念，探索其新的调试功能，并展示如何迁移到 Grafana Alloy。他们还讨论了 Grafana Alloy 在 OpenTelemetry 领域的地位、其作为收集器的角色，以及如何使用它与现有基础设施并行收集 OTel 信号。您将了解如何使用支持的 OTel 组件构建 OTel 原生和混合管道。 &lt;/p&gt;&lt;h3 id="grafana-11-deep-divehttpsgrafanacomabouteventsgrafanacon2024grafana-11-deep-divepgblogplcmtbody-txt"&gt; &lt;a href="https://grafana.com/about/events/grafanacon/2024/grafana-11-deep-dive/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 11 深潜&lt;/a&gt;&lt;/h3&gt;&lt;figure class="figure-wrapper w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/about/events/grafanacon/2024/grafana-11-deep-dive/"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="GrafanaCON 2024 的 Grafana 11 深入研究会议的会议卡。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="GrafanaCON 2024 的 Grafana 11 深入研究会议的会议卡。" src="https://grafana.com/media/grafanacon/2024/ondemand/GrafanaCON24-Grafana-11-deep-dive.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;在本次会议中，您将深入了解 Grafana 11 为何成为您连接数据、以美观且实用的方式可视化数据、与其他人共享数据以及响应事件的更好方式。除了概述 Grafana 11 的新增功能外，本次演讲还演示了一些我们最喜欢的功能。&lt;/p&gt;&lt;p&gt;对于 Grafana 的操作人员，产品总监 Mitch Seaman 和工程总监 Mihaela Maior 介绍了 Grafana 11 如何帮助您：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;加入新团队，&lt;/li&gt;&lt;li&gt;大规模管理您的仪表板和警报，以及&lt;/li&gt;&lt;li&gt;管理升级、安全性和更大的环境。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;开源开发人员还将学习开发和发布应用程序、数据源和面板的新方法，以扩展 Grafana 的多种用途。 &lt;/p&gt;&lt;h3 id="5-years-in-loki-turns-30httpsgrafanacomabouteventsgrafanacon2024loki-30-release-otel-support-bloom-filterpgblogplcmtbody-txt"&gt; &lt;a href="https://grafana.com/about/events/grafanacon/2024/loki-3.0-release-otel-support-bloom-filter/?pg=blog&amp;amp;plcmt=body-txt"&gt;5 年后，Loki 3.0 版&lt;/a&gt;&lt;/h3&gt;&lt;figure class="figure-wrapper w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/about/events/grafanacon/2024/loki-3.0-release-otel-support-bloom-filter/"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="GrafanaCON 2024 的 Grafana 11 深入研究会议的会议卡。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="GrafanaCON 2024 的 Grafana 11 深入研究会议的会议卡。" src="https://grafana.com/media/grafanacon/2024/ondemand/GrafanaCON24-Loki-turns-3.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; Grafana Loki 于 2018 年底在西雅图的 KubeCon + CloudNativeCon 上发布，五年后，这个流行的日志项目发布了 3.0 版本。在本次会议中，Loki 维护者 Owen Diehl 讨论了主要版本的亮点 - 原生 OTel 支持、bloom-filter 查询加速等 - 以及未来的发展：使 Loki 成为适合所有人的通用工具，具有更高的规模，降低面向用户的复杂性，并降低成本。 &lt;/p&gt;&lt;h3 id="a-users-guide-to-the-open-source-grafana-app-platformhttpsgrafanacomabouteventsgrafanacon2024grafana-app-platform-introductionpgblogplcmtbody-txt"&gt; &lt;a href="https://grafana.com/about/events/grafanacon/2024/grafana-app-platform-introduction/?pg=blog&amp;amp;plcmt=body-txt"&gt;开源 Grafana 应用平台的用户指南&lt;/a&gt;&lt;/h3&gt;&lt;figure class="figure-wrapper w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/about/events/grafanacon/2024/grafana-app-platform-introduction/"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="GrafanaCON 2024 的应用程序平台会议的会议卡。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="GrafanaCON 2024 的应用程序平台会议的会议卡。" src="https://grafana.com/media/grafanacon/2024/ondemand/GrafanaCON24-App-platform.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;根据构建和运行 SLO 应用程序的经验教训，Grafana Labs 推出了开源 Grafana 应用程序平台，帮助开发人员创建与 Grafana 紧密集成的类似复杂应用程序。在本次演讲中，杰出工程师 Ryan McKinley 和高级软件工程师 Stephanie Hingtgen 演示了应用程序平台的主要功能，包括对象和 API 的架构和版本控制、对象存储、监视对象、对象准入控制以及代码功能。&lt;/p&gt;&lt;h2 id="from-the-community"&gt;来自社区&lt;/h2&gt;&lt;p&gt;用户的声音是任何 GrafanaCON 活动的基石。今年，社区成员登台分享他们如何使用 Grafana 及其扩展的开源生态系统来实现一些令人着迷、富有创意和（毫不夸张）出色的用例。我们的一些点播 GrafanaCON 2024 用户故事包括： &lt;/p&gt;&lt;h3 id="how-cern-monitors-the-worlds-largest-computing-grid-with-grafana-and-mimirhttpsgrafanacomabouteventsgrafanacon2024cern-monitors-largest-computing-grid-with-grafana-and-mimirpgblogplcmtbody-txt"&gt; &lt;a href="https://grafana.com/about/events/grafanacon/2024/cern-monitors-largest-computing-grid-with-grafana-and-mimir/?pg=blog&amp;amp;plcmt=body-txt"&gt;CERN 如何使用 Grafana 和 Mimir 监控世界上最大的计算网格&lt;/a&gt;&lt;/h3&gt;&lt;figure class="figure-wrapper w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/about/events/grafanacon/2024/cern-monitors-largest-computing-grid-with-grafana-and-mimir/"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="GrafanaCON 2024 的 CERN 会议的会议卡。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="GrafanaCON 2024 的 CERN 会议的会议卡。" src="https://grafana.com/media/grafanacon/2024/ondemand/GrafanaCON24-CERN.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;欧洲核研究组织 (CERN) 可能因大型强子对撞机 (LHC) 的所在地而闻名，该机构每天产生约 PB 的数据，但没有多少人了解这台令人印象深刻的机器周围的计算基础设施。欧洲核子研究组织拥有自己的数据中心，用于收集实验数据并将其提供给世界各地的物理学家。 CERN 数据中心也是全球最大计算网格 WLCG 的核心层，连接来自 42 个国家的 170 多个站点，累计拥有约 140 万个计算机核心。在本次演讲中，CERN 计算工程师 Nikolay Tsvetkov 概述了 CERN 监控服务，以及它如何利用 Grafana 和 Mimir 最有效地向 IT 服务经理和 WLCG 专家提供基本监控信息。 &lt;/p&gt;&lt;h3 id="grafana-in-space-monitoring-japans-slim-moon-lander-in-real-timehttpsgrafanacomabouteventsgrafanacon2024grafana-used-to-monitor-japan-slim-moon-landerpgblogplcmtbody-txt"&gt; &lt;a href="https://grafana.com/about/events/grafanacon/2024/grafana-used-to-monitor-japan-slim-moon-lander/?pg=blog&amp;amp;plcmt=body-txt"&gt;太空中的 Grafana：实时监控日本的 SLIM 月球着陆器&lt;/a&gt;&lt;/h3&gt;&lt;figure class="figure-wrapper w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/about/events/grafanacon/2024/grafana-used-to-monitor-japan-slim-moon-lander"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="GrafanaCON 2024 的 JAXA 会议的会议卡。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="GrafanaCON 2024 的 JAXA 会议的会议卡。" src="https://grafana.com/media/grafanacon/2024/ondemand/GrafanaCON24-Grafana-in-space.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; 1 月 19 日，日本成为第五个登陆月球的国家——格拉法纳就在那里！在本次会议中，JAXA 副高级研究员 Satoshi Nakahira 概述了 ISAS 空间科学任务和 SLIM 月球着陆器，并讨论了团队如何使用 Grafana 来实现航天局科学卫星和探测器的实时状态监测系统，包括SLIM 月球着陆器操作的实施和实际数据。 &lt;/p&gt;&lt;h3 id="how-planted-ramps-up-food-production-faster-with-grafanas-single-pane-of-glasshttpsgrafanacomabouteventsgrafanacon2024planted-food-tech-utilizes-grafana-as-single-pane-of-glasspgblogplcmtbody-txt"&gt; &lt;a href="https://grafana.com/about/events/grafanacon/2024/planted-food-tech-utilizes-grafana-as-single-pane-of-glass/?pg=blog&amp;amp;plcmt=body-txt"&gt;Planted 如何利用 Grafana 的单一管理平台更快地提高粮食产量&lt;/a&gt;&lt;/h3&gt;&lt;figure class="figure-wrapper w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/about/events/grafanacon/2024/planted-food-tech-utilizes-grafana-as-single-pane-of-glass"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="GrafanaCON 2024 的 Planted 会议的会议卡。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="GrafanaCON 2024 的 Planted 会议的会议卡。" src="https://grafana.com/media/grafanacon/2024/ondemand/GrafanaCON24-Planted.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;植物肉是一个快速增长的行业，受到消费者寻求在不牺牲动物肉的情况下减少动物肉消费的需求不断增长的推动。在这个竞争激烈的市场中，产品改进、创新和产量提升的速度至关重要。在本次会议中，Planted 数据科学主管 Mathias Pawlowsky 讨论了这家总部位于苏黎世的食品科技公司如何利用 Grafana 作为所有生产数据的单一管理平台，以及轻松访问数据如何实现更好、更快的决策、更快的提升，并最终向世界提供更多植物蛋白食品。您将了解 Grafana 的核心功能如何帮助生产团队监控机器并分析流程数据以进行根本原因分析，以及 Grafana 通过插件的可扩展性如何允许他们通过数据操作面板收集人工输入、分析图像，甚至通过 API 调用控制机器使用 Infinity 插件。 &lt;/p&gt;&lt;h3 id="from-silence-to-signals-data-management-and-monitoring-at-the-national-library-of-the-netherlandshttpsgrafanacomabouteventsgrafanacon2024data-management-and-monitoring-at-national-library-of-the-netherlandspgblogplcmtbody-txt"&gt; &lt;a href="https://grafana.com/about/events/grafanacon/2024/data-management-and-monitoring-at-national-library-of-the-netherlands/?pg=blog&amp;amp;plcmt=body-txt"&gt;从沉默到信号：荷兰国家图书馆的数据管理和监控&lt;/a&gt;&lt;/h3&gt;&lt;figure class="figure-wrapper w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/about/events/grafanacon/2024/data-management-and-monitoring-at-national-library-of-the-netherlands/"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="荷兰国家图书馆举办的 GrafanaCON 2024 演讲的会议卡。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="荷兰国家图书馆举办的 GrafanaCON 2024 演讲的会议卡。" src="https://grafana.com/media/grafanacon/2024/ondemand/GrafanaCON24-Library-of-Netherlands.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;为了履行为数字时代保存和提供荷兰文献的使命，荷兰国家图书馆进行了重大转变，从静态数据环境转变为交互式、信号丰富的监控平台。在本次演讲中，平台工程师 Gerard van Engelen 解释了实施 Grafana 可视化、Mimir 的指标和 Loki 的日志如何帮助荷兰国家图书馆获得对其数字环境（从性能问题到安全问题）的宝贵见解。荷兰国家图书馆的历程为其他旨在实现数据管理和监控系统现代化的文化和历史机构提供了令人信服的案例研究。&lt;/p&gt;&lt;p&gt;&lt;em&gt;您可以在&lt;a href="https://grafana.com/about/events/grafanacon/2024/"&gt;GrafanaCON 2024 网站&lt;/a&gt;上查看所有这些点播会议及更多内容。如果您想探索其他即将举行的活动（无论是现场活动还是虚拟活动），请查看 Grafana Labs&lt;a href="https://grafana.com/about/events/?pg=blog&amp;amp;plcmt=body-txt"&gt;活动页面&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;</description><pubDate>Thu, 25 Apr 2024 15:32:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/04/25/grafanacon-2024-on-demand-sessions-are-now-available/</guid></item><item><title>如何使用 Grafana Operator：在 Kubernetes 中管理 Grafana 云堆栈</title><link>https://grafana.com/blog/2024/04/24/how-to-use-the-grafana-operator-managing-a-grafana-cloud-stack-in-kubernetes/</link><description>&lt;p&gt;使用 Kubernetes 部署应用程序时，您会习惯通过向 Kubernetes API 描述所有资源来进行管理。无论是部署、秘密、配置还是整个机器，一切都以代码的形式存在于某处。将云服务引入这样的环境通常意味着引入额外的配置方法，考虑到现代应用程序依赖的云服务数量不断增加，这可能会变得很麻烦。&lt;/p&gt;&lt;p&gt;然而，通过将&lt;a href="https://grafana.com/docs/grafana-cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;与&lt;a href="https://grafana.com/docs/grafana-cloud/developer-resources/infrastructure-as-code/grafana-operator/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Operator&lt;/a&gt;相结合，您可以两全其美：无需自行托管遥测，可以安心无忧，并且能够将所有配置保存在一个地方。&lt;/p&gt;&lt;p&gt; Grafana Operator 是一个 Kubernetes Operator，可帮助您在 Kubernetes 内管理 Grafana 实例及其资源。在这篇博文中，我们将向您展示如何将 Grafana Operator 与 Grafana Cloud 堆栈连接，以及如何将文件夹、仪表板和警报配置为 Kubernetes 对象。&lt;/p&gt;&lt;h2 id="getting-started-with-the-grafana-operator"&gt; Grafana Operator 入门&lt;/h2&gt;&lt;p&gt;要开始将 Grafana Operator 与 Grafana Cloud 或本地 Grafana 实例结合使用，请执行以下步骤：&lt;/p&gt;&lt;h3 id="quick-installation"&gt;快速安装&lt;/h3&gt;&lt;p&gt;在集群中安装 Grafana Operator 的最快方法是使用 Helm。在终端中运行以下命令：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;helm upgrade -i grafana-operator oci://ghcr.io/grafana/helm-charts/grafana-operator --version v5.7.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;此命令使用 Helm 从指定存储库获取最新的 Grafana Operator 图表并将其安装在集群中。您还可以使用上述命令中的&lt;code&gt;–version&lt;/code&gt;属性指定特定版本。如果您想要更改某些特定配置，请查看&lt;a href="https://github.com/grafana-operator/grafana-operator/tree/master/deploy/helm/grafana-operator" rel="noopener noreferrer" target="_blank"&gt;Helm 图表&lt;/a&gt;的&lt;code&gt;values.yaml&lt;/code&gt;以获取自定义选项。&lt;/p&gt;&lt;p&gt;有关其他安装方法，请查看我们的&lt;a href="https://grafana-operator.github.io/grafana-operator/docs/installation/" rel="noopener noreferrer" target="_blank"&gt;Grafana Operator 安装文档&lt;/a&gt;。&lt;/p&gt;&lt;h3 id="connecting-to-grafana-cloud"&gt;连接到 Grafana 云&lt;/h3&gt;&lt;p&gt;Grafana Operator 支持使用外部实例的 Grafana Cloud 实例。这些 Grafana 实例不是由操作员部署的 - 这意味着它们不在您的 Kubernetes 环境中运行 - 但仍应由操作员进行配置。要创建外部实例，您将需要：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;您的 Grafana Cloud 实例的 URL&lt;/li&gt;&lt;li&gt;用于身份验证的服务帐户令牌&lt;/li&gt;&lt;/ul&gt;&lt;h4 id="creating-a-service-account"&gt;创建服务帐户&lt;/h4&gt;&lt;p&gt;要创建服务帐户，请导航到位于 Grafana 实例的&lt;strong&gt;“管理”&lt;/strong&gt;部分的&lt;strong&gt;“服务帐户”&lt;/strong&gt;页面。&lt;/p&gt;&lt;p&gt;单击右上角的&lt;strong&gt;“添加服务帐户”&lt;/strong&gt;按钮，并为您的服务帐户指定一个描述性名称，例如“集群 XYZ 中的 Grafana Operator”。&lt;/p&gt;&lt;p&gt;您分配给服务帐户的角色将限制操作员可以执行的操作。如果您不确定选择什么，编辑器是一个很好的起点，但如果您想配置数据源，则需要添加额外的权限。&lt;/p&gt;&lt;p&gt;创建服务帐户后，为此帐户创建令牌。将此令牌保存在您选择的命名空间中的 Kubernetes Secret 中。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;apiVersion: v1 kind: Secret metadata: name: grafana-cloud namespace: default type: Opaque stringData: SERVICE_ACCOUNT_TOKEN: glsa_.....&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h4 id="creating-the-external-instance"&gt;创建外部实例&lt;/h4&gt;&lt;p&gt;现在我们有了包含身份验证信息的密钥，下一步是创建一个外部实例。它的 YAML 看起来像这样：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;apiVersion: grafana.integreatly.org/v1beta1 kind: Grafana metadata: name: my-grafana-cloud-stack labels: instance: &amp;quot;my-grafana-cloud-stack&amp;quot; spec: external: url: https://&amp;lt;your-stack-name&amp;gt;.grafana.net apiKey: name: grafana-cloud key: SERVICE_ACCOUNT_TOKEN&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;在此资源上设置有意义的标签非常重要，因为标签用于将资源与实例匹配。&lt;/p&gt;&lt;p&gt;将其应用到集群后，您可以通过运行&lt;code&gt;kubectl get grafanas&lt;/code&gt;来验证一切是否正常：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;NAME STAGE STAGE STATUS AGE my-grafana-cloud-stack complete success 4d22h&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h2 id="creating-resources"&gt;创造资源&lt;/h2&gt;&lt;p&gt;现在操作员了解您的实例，您可以开始添加资源，包括文件夹、仪表板和警报规则。&lt;/p&gt;&lt;h3 id="folders"&gt;文件夹&lt;/h3&gt;&lt;p&gt;文件夹是最容易配置的资源。在最简单的形式中，它们只需要设置一个名称。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;apiVersion: grafana.integreatly.org/v1beta1 kind: GrafanaFolder metadata: name: test-folder spec: instanceSelector: matchLabels: instance: &amp;quot;my-grafana-cloud-stack&amp;quot; # If title is not defined, the value will be taken from metadata.name title: custom title&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;这将在您的云堆栈中创建一个名为“自定义标题”的顶级文件夹。如果您想同时配置多个实例，您可以创建更多实例并相应地设置&lt;code&gt;instanceSelector&lt;/code&gt; 。&lt;/p&gt;&lt;h3 id="dashboards"&gt;仪表板&lt;/h3&gt;&lt;p&gt;&lt;code&gt;GrafanaDashboard&lt;/code&gt;资源看起来与文件夹资源类似。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;apiVersion: grafana.integreatly.org/v1beta1 kind: GrafanaDashboard metadata: name: grafanadashboard-sample spec: instanceSelector: matchLabels: instance: &amp;quot;my-grafana-cloud-stack&amp;quot; json: &amp;gt; { &amp;quot;id&amp;quot;: null, &amp;quot;title&amp;quot;: &amp;quot;Simple Dashboard&amp;quot;, &amp;quot;tags&amp;quot;: [], &amp;quot;style&amp;quot;: &amp;quot;dark&amp;quot;, &amp;quot;timezone&amp;quot;: &amp;quot;browser&amp;quot;, &amp;quot;editable&amp;quot;: true, &amp;quot;hideControls&amp;quot;: false, &amp;quot;graphTooltip&amp;quot;: 1, &amp;quot;panels&amp;quot;: [], &amp;quot;time&amp;quot;: { &amp;quot;from&amp;quot;: &amp;quot;now-6h&amp;quot;, &amp;quot;to&amp;quot;: &amp;quot;now&amp;quot; }, &amp;quot;timepicker&amp;quot;: { &amp;quot;time_options&amp;quot;: [], &amp;quot;refresh_intervals&amp;quot;: [] }, &amp;quot;templating&amp;quot;: { &amp;quot;list&amp;quot;: [] }, &amp;quot;annotations&amp;quot;: { &amp;quot;list&amp;quot;: [] }, &amp;quot;refresh&amp;quot;: &amp;quot;5s&amp;quot;, &amp;quot;schemaVersion&amp;quot;: 17, &amp;quot;version&amp;quot;: 0, &amp;quot;links&amp;quot;: [] }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;在标准场景中，操作员将使用自定义资源名称来部署和管理 Grafana 中的文件夹。 &lt;code&gt;spec.folder&lt;/code&gt;字段可用于设置自定义文件夹名称。&lt;/p&gt;&lt;h3 id="alert-rules"&gt;警报规则&lt;/h3&gt;&lt;p&gt;Grafana 中的&lt;a href="https://grafana.com/docs/grafana/latest/alerting/fundamentals/alert-rules/?pg=blog&amp;amp;plcmt=body-txt"&gt;警报规则&lt;/a&gt;很大程度上受到&lt;a href="https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/" rel="noopener noreferrer" target="_blank"&gt;Prometheus 规则&lt;/a&gt;的启发。它们被分组在&lt;em&gt;警报规则组&lt;/em&gt;中，这些规则组具有名称和评估间隔。警报规则组存储在文件夹中，与仪表板的存储方式相同。由于警报规则可能变得相当复杂，建议的方法是在 UI 中构建警报规则，然后使用&lt;a href="https://grafana.com/docs/grafana/latest/alerting/set-up/provision-alerting-resources/export-alerting-resources/#modify-and-export-alert-rules-without-saving-changes"&gt;修改导出&lt;/a&gt;功能。&lt;/p&gt;&lt;p&gt;如果您想测试此功能，但您的实例中还没有任何数据，您可以使用&lt;a href="https://grafana.com/docs/grafana-cloud/get-started/#install-demo-data-sources-and-dashboards"&gt;我们的演示数据源&lt;/a&gt;之一。&lt;/p&gt;&lt;p&gt;从生成的 YAML 中复制&lt;code&gt;rules&lt;/code&gt;部分，并使用它来填写&lt;code&gt;GrafanaAlertRuleGroup&lt;/code&gt; ，如下所示：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;apiVersion: grafana.integreatly.org/v1beta1 kind: GrafanaAlertRuleGroup metadata: name: temperature-alerts spec: folderRef: &amp;#39;test-folder&amp;#39; instanceSelector: matchLabels: instance: &amp;quot;my-grafana-cloud-stack&amp;quot; interval: &amp;quot;5m&amp;quot; rules: - uid: cde8n0peq8rnkd title: &amp;quot;Something is happening&amp;quot; #...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;您将在 Grafana 实例的警报部分找到您创建的警报规则。&lt;/p&gt;&lt;h2 id="next-steps"&gt;下一步&lt;/h2&gt;&lt;p&gt;通过使用 Grafana Operator 在 Kubernetes 中进行资源管理，您可以更轻松地将 Grafana Cloud 合并到 Kubernetes 驱动的环境中。此方法还确保统一且有效的配置管理，遵循基础架构即代码原则，从而简化您的工作流程并提高效率。&lt;/p&gt;&lt;p&gt;要了解有关 Grafana Operator 的更多信息，您可以参考我们的&lt;a href="https://grafana.com/docs/grafana-cloud/developer-resources/infrastructure-as-code/grafana-operator/?pg=blog&amp;amp;plcmt=body-txt"&gt;技术文档&lt;/a&gt;或查看我们的&lt;a href="https://github.com/grafana/grafana-operator" rel="noopener noreferrer" target="_blank"&gt;GitHub 存储库&lt;/a&gt;。您还可以通过&lt;a href="https://slack.grafana.com/" rel="noopener noreferrer" target="_blank"&gt;Grafana Community Slack&lt;/a&gt;的 #grafana-operator 频道联系维护人员，或者参加&lt;a href="https://meet.google.com/spw-jtbk-mwj" rel="noopener noreferrer" target="_blank"&gt;每周二下午 12:30 UTC 的社区电话会议&lt;/a&gt;。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪和仪表板的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Wed, 24 Apr 2024 10:22:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/04/24/how-to-use-the-grafana-operator-managing-a-grafana-cloud-stack-in-kubernetes/</guid></item><item><title>失败者树数据结构：如何优化合并并使程序运行得更快</title><link>https://grafana.com/blog/2024/04/23/the-loser-tree-data-structure-how-to-optimize-merges-and-make-your-programs-run-faster/</link><description>&lt;p&gt;“好吧，”Grafana Labs 的杰出工程师 Bryan Boreham 在 9 月份登上 GopherCon 2023 的舞台时说道。 “谁喜欢算法？”&lt;/p&gt;&lt;p&gt;一屋子的软件工程师举手回应——布莱恩在一年一度的 Go 开源编程语言活动上开始了他的演讲。&lt;/p&gt;&lt;p&gt; GopherCon 2023 于 9 月在加利福尼亚州圣地亚哥举行，Bryan 与开源社区的其他专家一起作为演讲者。在名为“与失败者树进行快速合并”的演讲中，布莱恩探讨了失败者树数据结构（是的，这就是它的&lt;em&gt;真&lt;/em&gt;名），作为优化排序和合并操作的一种方法，以便您的应用程序运行得更快。&lt;/p&gt;&lt;p&gt;在这里，我们回顾一下 Bryan 的演讲，包括他如何使用 Go 泛型实现失败者树数据结构来优化 Prometheus 中的查询，以及他如何在 Grafana 实验室使用失败者树来提高&lt;a href="https://grafana.com/docs/loki/latest/"&gt;Grafana Loki&lt;/a&gt;和&lt;a href="https://grafana.com/docs/pyroscope/latest/"&gt;Grafana Pyrscope&lt;/a&gt;等开源项目的性能。您还可以在下面的 YouTube 上查看 Bryan 的完整 GopherCon 2023 会议。 &lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;h2 id="k-way-merges-loser-trees-and-a-love-of-optimization"&gt; K 路合并、失败者树以及对优化的热爱&lt;/h2&gt;&lt;p&gt;Bryan 除了是 Grafana Labs 云数据库团队的杰出工程师之外，还是开源 Prometheus 项目的维护者。在这两个角色中，他都对优化充满热情。&lt;/p&gt;&lt;p&gt; “我喜欢让计算机系统运行得更快，”布莱恩告诉 GopherCon 与会者。 “对我来说，这基本上就像一个视频游戏。我会在那里坐几个小时，试图通过让程序运行得更快来提高我的分数。”&lt;/p&gt;&lt;p&gt;布莱恩解释说，这就是他与失败树的旅程开始的地方。&lt;/p&gt;&lt;p&gt;他分享了一个火焰图（如下），用于可视化 Prometheus 的 CPU 处理时间，特别提醒与会者注意紫色条。这些条形图表明执行时间很慢，并且存在潜在的瓶颈，与名为&lt;code&gt;container/heap&lt;/code&gt;的特定包相关。 Bryan 发现延迟是 Go 标准库中&lt;code&gt;container/heap&lt;/code&gt;的内部循环造成的；它间接调用接口，这会带来性能开销。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/loser-tree-gophercon2023/loser-tree-flamegraph.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="失败者树演示中的火焰图屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="失败者树演示中的火焰图屏幕截图。" src="https://grafana.com/media/blog/loser-tree-gophercon2023/loser-tree-flamegraph.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;然后，Bryan 提供了有关 Prometheus 内部发生的&lt;code&gt;container/heap&lt;/code&gt;包的更多背景信息：它被用于&lt;em&gt;k-way merge&lt;/em&gt; 。在编程中，k 路合并采用多个排序列表并将它们合并为一个排序列表。这是一种常见的操作，尤其是在数据库中，但需要高效以避免大规模性能下降。&lt;/p&gt;&lt;p&gt;因此，布莱恩说，他开始寻找解决方案。在他的研究中，他发现可以通过更快地识别序列中的最小元素来加速 k 路合并。实现此目的的一种方法是使用一种&lt;a href="https://www.tutorialspoint.com/tournament-trees-winner-trees-and-loser-trees-in-data-structure" rel="noopener noreferrer" target="_blank"&gt;锦标赛树算法&lt;/a&gt;，该算法仅存储每场比赛的&lt;em&gt;失败者&lt;/em&gt;- 一种被称为（您猜对了）失败者树的算法或数据结构。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/loser-tree-gophercon2023/loser-tree-populated-diagram.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示失败者树数据结构的图表。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示失败者树数据结构的图表。" src="https://grafana.com/media/blog/loser-tree-gophercon2023/loser-tree-populated-diagram.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; “我无法抗拒，”布莱恩笑道。 “我的意思是，我想象自己在那一刻站在舞台上，因为谁能抗拒谈论一种叫做失败者树的东西呢？”&lt;/p&gt;&lt;h2 id="implementing-a-loser-tree-and-measuring-the-results"&gt;实施失败者树并衡量结果&lt;/h2&gt;&lt;p&gt;接下来，Bryan 深入研究了失败者树数据结构如何工作的技术细节，以及他如何使用&lt;a href="https://go.dev/blog/intro-generics" rel="noopener noreferrer" target="_blank"&gt;Go 泛型&lt;/a&gt;在 Prometheus 中实现失败者树数据结构，以解决前面概述的&lt;code&gt;container/heap&lt;/code&gt;问题。&lt;/p&gt;&lt;p&gt;他分享了以下 Go 中失败者树的基本数据结构示例，引导与会者了解不同的参数，包括值类型和序列类型：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/loser-tree-gophercon2023/loser-tree-basic-data-structure.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示 Go 中失败者树的基本数据结构的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示 Go 中失败者树的基本数据结构的屏幕截图。" src="https://grafana.com/media/blog/loser-tree-gophercon2023/loser-tree-basic-data-structure.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;至于实施失败者树结构的结果？事实证明，它可以显着加速 k-way 合并，从而加快 Prometheus 的执行时间。 Bryan 使用&lt;a href="https://pkg.go.dev/golang.org/x/perf/cmd/benchstat" rel="noopener noreferrer" target="_blank"&gt;benchstat&lt;/a&gt;证实了这一点，这是一个用于计算和比较基准统计数据的 Go 工具。&lt;/p&gt;&lt;p&gt; “这是一个综合基准，合并了 10 个元素，然后是 10,000 个，然后是 100,000 个，结果显示速度快了 5 到 12 倍，”Bryan 说。&lt;/p&gt;&lt;p&gt;虽然失败者树有一些缺点——例如它可能需要更多的系统内存——布莱恩说他对结果很满意。事实上，他已经应用了失败者树结构来优化其他系统中的合并，包括开源日志聚合系统 Grafana Loki。&lt;/p&gt;&lt;p&gt; Loki 使用的日志是纯排序序列；日志的每一行都是一个字符串，它们按时间戳排序。 Loki 存储来自所有进程（可能有数千个）的日志，当您查询日志时，您希望看到所有结果合并到按时间戳排序的单个序列中。底线？它本质上是另一种 k 路合并，这意味着失败者树作为一种优化技术效果很好。&lt;/p&gt;&lt;p&gt;此外，Grafana Pyrscope 中还实现了 Loser 树结构，以&lt;a href="https://github.com/grafana/phlare/pull/656" rel="noopener noreferrer" target="_blank"&gt;提高配置文件的重复数据删除能力&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;布莱恩说，总而言之，他对失败者树和 Go 泛型的实验是成功的。 “我对 Go 泛型进行了一段旅程，”他在演讲结束时告诉与会者。 “这是我编写的第一个复杂代码，试图使用泛型，并从中发挥其威力。”&lt;/p&gt;&lt;p&gt;&lt;em&gt;想要了解更多关于失败者树和 Go 泛型的信息吗？&lt;a href="https://www.youtube.com/watch?v=AmLtlXEo4UU" rel="noopener noreferrer" target="_blank"&gt;在 YouTube 上观看 Bryan 在 GopherCon 2023 上的完整演讲&lt;/a&gt;，并在&lt;a href="https://github.com/bboreham/go-loser" rel="noopener noreferrer" target="_blank"&gt;GitHub 上找到会议中的所有代码。&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description><pubDate>Tue, 23 Apr 2024 10:21:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/04/23/the-loser-tree-data-structure-how-to-optimize-merges-and-make-your-programs-run-faster/</guid></item><item><title>走向绿色：如何使用 Kepler、Prometheus 和 Grafana 监控云碳足迹</title><link>https://grafana.com/blog/2024/04/22/going-green-how-to-monitor-your-cloud-carbon-footprint-using-kepler-prometheus-and-grafana/</link><description>&lt;p&gt;在这一点上，云计算的技术和运营优势几乎是无可争议的。但云行业作为一个整体，在一个关键领域仍然有很长的路要走：可持续性。&lt;/p&gt;&lt;p&gt;事实上，尽管听起来令人震惊，但据估计，云数据中心的碳足迹比&lt;em&gt;整个航空业的&lt;/em&gt;碳足迹还要大。 Ida Fürjesová 和 Niki Manoledaki 都是 Grafana Labs 的软件工程师，他们热衷于帮助改变这一现状。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/green-metrics-promcon2023-session/green-metrics-promcon2023-cloud-pollution-slide.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示云碳排放量与其他行业相比的条形图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示云碳排放量与其他行业相比的条形图。" src="https://grafana.com/media/blog/green-metrics-promcon2023-session/green-metrics-promcon2023-cloud-pollution-slide.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;因此，在 9 月的 PromCon 2023 上，Ida 和 Niki（同时也是&lt;a href="https://tag-env-sustainability.cncf.io/" rel="noopener noreferrer" target="_blank"&gt;CNCF 环境可持续性技术咨询小组 (TAG ENV)&lt;/a&gt;的贡献者和&lt;a href="https://tag-env-sustainability.cncf.io/blog/2024-green-reviews-working-group-measuring-sustainability/#:~:text=The%20main%20goal%20of%20the,can%20be%20lowered%20over%20time." rel="noopener noreferrer" target="_blank"&gt;绿色审查工作组&lt;/a&gt;的联合主席）提出了一种自下而上的监测方法与云应用程序和基础设施相关的能源消耗和碳排放。&lt;/p&gt;&lt;p&gt; “我们的重点是在云原生生态系统中倡导绿色 IT，”Niki 告诉与会者。&lt;/p&gt;&lt;p&gt;他们的会议的想法—— &lt;a href="https://promcon.io/2023-berlin/talks/using-green-metrics-to-monitor-your-carbon-footprint/" rel="noopener noreferrer" target="_blank"&gt;“使用绿色指标来监控你的碳足迹”&lt;/a&gt; ——源于&lt;a href="https://grafana.com/blog/2024/03/01/grafana-labs-hackathon-projects-where-are-they-now/"&gt;Grafana Labs 黑客马拉松项目&lt;/a&gt;，该项目专注于云计算中的绿色指标和可持续性。&lt;/p&gt;&lt;p&gt;今天，为了纪念地球日，我们将回顾 Niki 和 Ida 的 PromCon 演讲，分享他们的一些经验教训和最佳实践，以便您可以开始监控自己的云碳足迹。您还可以在 YouTube 上查看下面的完整 PromCon 会议。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;h2 id="why-and-how-to-monitor-your-energy-consumption"&gt;为什么以及如何监控您的能源消耗&lt;/h2&gt;&lt;p&gt;GreenOps——在云相关决策和运营中优先考虑可持续性的实践——当然具有重大的环境效益。但是，艾达解释说，绿色运营的优势实际上远远超出了可持续发展概念本身。&lt;/p&gt;&lt;p&gt; “有时，当我们减少资源使用时，我们也会降低成本，”她向 PromCon 与会者解释道。 “例如，如果我们摆脱僵尸集群和僵尸集群，我们就可以节省一些成本”。&lt;/p&gt;&lt;p&gt;采用 GreenOps 并努力实现更可持续的计算模型的组织还可以从优化的应用程序性能和市场竞争优势中受益。&lt;/p&gt;&lt;p&gt; “对于营销和投资者来说，看到您在一家绿色公司工作并且客户对使用您的产品感觉更好，这非常好，”艾达解释道。&lt;/p&gt;&lt;p&gt;但究竟如何减少基础设施和软件的碳足迹呢？首先，您必须测量您运行的应用程序和您构建的工具的能源消耗和碳强度。&lt;/p&gt;&lt;p&gt; “减少排放的第一步是实际了解自己的排放量，”艾达说。&lt;/p&gt;&lt;p&gt;幸运的是，工程师可以使用&lt;a href="https://github.com/sustainable-computing-io/kepler" rel="noopener noreferrer" target="_blank"&gt;Kubernetes Efficient Power Level Exporter (Kepler)&lt;/a&gt; 、eBPF 能源监控工具和 CNCF 沙箱项目来设置简单的监控流程来收集绿色指标。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/green-metrics-promcon2023-session/green-metrics-promcon2023-kepler-slide.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示有关开普勒的信息的演示幻灯片。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示有关开普勒的信息的演示幻灯片。" src="https://grafana.com/media/blog/green-metrics-promcon2023-session/green-metrics-promcon2023-kepler-slide.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; Kepler 的工作原理是使用 RAPL 或估计模型聚合能量指标。 &lt;a href="https://sustainable-computing.io/design/kepler-energy-sources/#:~:text=Intel%27s%20Running%20Average%20Power%20Limit,versions%20of%20Intel%27s%20processing%20architecture." rel="noopener noreferrer" target="_blank"&gt;RAPL&lt;/a&gt;代表运行平均功率限制，是一项英特尔技术，用于聚合和公开处理器的能源指标。如果无法使用 RAPL（例如，在 VM 环境中，由于虚拟机管理程序而无法访问 RAPL），Kepler 会使用估计模型，这是经过训练的机器学习模型。&lt;/p&gt;&lt;p&gt; Kepler 使用 eBPF 将权力分配给进程，然后分配给 Pod。&lt;/p&gt;&lt;p&gt; “eBPF 将查看能量指标，并将其与&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/resource_management_guide/ch01" rel="noopener noreferrer" target="_blank"&gt;cgroup&lt;/a&gt; ID 以及匹配的容器和 Pod 相关联，”Niki 说。 “这样，您就可以拥有 Pod 级能源指标以及节点级能源指标。”&lt;/p&gt;&lt;p&gt;然后，Kepler 可以将这些指标导出到 Prometheus。&lt;/p&gt;&lt;h2 id="visualizing-energy-metrics-in-grafana"&gt;在 Grafana 中可视化能源指标&lt;/h2&gt;&lt;p&gt;Niki 随后讨论了这些开普勒能量指标的 Grafana 可视化，并展示了一些示例。&lt;/p&gt;&lt;p&gt;下图包含 AWS us-east-2 区域中运行的集群的碳排放可视化。具体来说，它显示每天每千瓦时的二氧化碳克数。 Niki 解释说，该团队特别关注了三个节点，并使用节点标签选择器在他们想要的命名空间中定位他们想要的节点。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/green-metrics-promcon2023-session/green-metrics-promcon2023-carbon-emissions-slide.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="幻灯片显示 Grafana 面板显示每千瓦时的碳排放量。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="幻灯片显示 Grafana 面板显示每千瓦时的碳排放量。" src="https://grafana.com/media/blog/green-metrics-promcon2023-session/green-metrics-promcon2023-carbon-emissions-slide.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;在面板下方，您可以看到关联的 PromQL 查询。 Niki指出，容器命名空间是&lt;code&gt;“hosted_grafana”&lt;/code&gt; ， &lt;code&gt;kepler_container_joules_total&lt;/code&gt;用于聚合GPU、CPU、内存和其他相关能量过程。&lt;/p&gt;&lt;p&gt; “我们使用了硬编码变量来表示每秒瓦数到千瓦时，”尼基继续说道。 “这是能源指标的标准转换。在这种情况下，另一个硬编码变量是碳系数。”&lt;/p&gt;&lt;p&gt; Niki 指出，这个特定的查询正在进行中。例如，如果某些千瓦时没有相应的样本，则可能会出现问题。 “我们欢迎您提出增强和改进的建议，因为肯定还有其他方法可以做到这一点，但这就是我们正在研究的。”&lt;/p&gt;&lt;p&gt;接下来，Ida 展示了用于 Kepler 能源指标的 Grafana 面板的另一个示例 - 这次显示每个 Pod 或租户 ID 的功耗。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/green-metrics-promcon2023-session/green-metrics-promcon2023-pod-power-consumption-slide.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="带有 Grafana 面板的幻灯片，描绘了 Pod 和进程的功耗。" class="lazyload " /&gt; &lt;noscript&gt;&lt;img alt="带有 Grafana 面板的幻灯片，描绘了 Pod 和进程的功耗。" src="https://grafana.com/media/blog/green-metrics-promcon2023-session/green-metrics-promcon2023-pod-power-consumption-slide.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; “如果您决定在集群上实施 Kepler，这个[面板]可以很好地向您的客户展示他们的应用程序有多少功耗，”Ida 说。 “它还可以帮助工程团队了解不同版本之间的功耗是否变化，以及随着新功能的启用，功耗是否增加或减少。”&lt;/p&gt;&lt;h2 id="whats-next--and-how-to-get-involved"&gt;接下来是什么——以及如何参与&lt;/h2&gt;&lt;p&gt;在 PromCon 2023 演讲结束时，Ida 和 Niki 概述了使用 Kepler 和 Grafana 监控能源指标的后续步骤和新兴用例。&lt;/p&gt;&lt;p&gt; Niki 举例说，CNCF 环境可持续发展 TAG 的绿色审查工作组目前正在使用称为社区集群的基础设施，其积分由 Equinix 捐赠给 CNCF。他们正在使用基础设施即代码、Prometheus、Kepler 和 Grafana 等工具构建一条管道，以测量各种 CNCF 项目的能源消耗，从&lt;a href="https://www.cncf.io/projects/falco/" rel="noopener noreferrer" target="_blank"&gt;Falco&lt;/a&gt;开始。&lt;/p&gt;&lt;p&gt; Niki 和 Ida 鼓励与会者加入 CNCF 的 #tag-environmental-sustainability Slack 频道，贡献自己的可持续发展和绿色计算想法。有关更多信息，您还可以查看环境可持续性标签的&lt;a href="https://github.com/cncf/tag-env-sustainability" rel="noopener noreferrer" target="_blank"&gt;GitHub 存储库&lt;/a&gt;。&lt;/p&gt;&lt;p&gt; “非常欢迎您加入并做出贡献，”尼基说。 “我们也有定期会议，向所有人开放，我很高兴更多地谈论这个问题。”&lt;/p&gt;&lt;p&gt;&lt;em&gt;想了解更多有关云可持续性的信息吗？查看 Niki 最近的其他演讲：&lt;/em&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;em&gt;&lt;a href="https://kccncna2023.sched.com/event/1R4Tl" rel="noopener noreferrer" target="_blank"&gt;KubeCon 2023：主题演讲：云中的环境可持续性并非神话&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;em&gt;&lt;a href="https://kccncna2023.sched.com/event/1R2mQ" rel="noopener noreferrer" target="_blank"&gt;KubeCon 2023：CNCF 环境可持续发展标签更新和信息&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;em&gt;&lt;a href="https://kccnceu2024.sched.com/event/1YeLF" rel="noopener noreferrer" target="_blank"&gt;KubeCon 2024：闪电演讲：揭穿云中环境可持续性的神话，构建更绿色的 CNCF 景观&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;em&gt;&lt;a href="https://redmonk.com/videos/a-redmonk-conversation-cncfs-environmental-sustainability-tag/" rel="noopener noreferrer" target="_blank"&gt;RedMonk 对话：CNCF 的环境可持续发展标签&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;</description><pubDate>Mon, 22 Apr 2024 11:11:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/04/22/going-green-how-to-monitor-your-cloud-carbon-footprint-using-kepler-prometheus-and-grafana/</guid></item><item><title>Grafana OnCall 移动应用通知：为 Android 用户提供全新且改进的体验</title><link>https://grafana.com/blog/2024/04/19/grafana-oncall-mobile-app-notifications-the-new-and-improved-experience-for-android-users/</link><description>&lt;p&gt;Grafana OnCall 移动应用程序是待命工程师监控和响应关键系统事件的重要工具。该应用程序适用于 iOS 和 Android，提供一系列功能和通知设置，使通话体验更轻松、更直观 — 一切尽在您的掌控之中。&lt;/p&gt;&lt;p&gt;但我们知道，对于值班工程师来说，顺利运营和潜在灾难之间的区别取决于在&lt;em&gt;正确的&lt;/em&gt;时间向&lt;em&gt;正确的&lt;/em&gt;人发出警报，而无缝通知传递的道路也面临着挑战，特别是在 Android 设备的多样化环境中。&lt;/p&gt;&lt;p&gt;在这篇文章中，我们将探讨一些最新的改进，这些改进可增强&lt;a href="https://grafana.com/docs/oncall/latest/manage/mobile-app/"&gt;Grafana OnCall 移动应用程序&lt;/a&gt;的可靠性，特别是提高使用 Android 设备的待命工程师的生活质量。他们现在可以高枕无忧，因为知道他们的设备会尊重他们对（偶尔）和平与安静的需求，同时为真正关键的事件提供例外。&lt;/p&gt;&lt;p&gt;&lt;em&gt;还没有 Grafana OnCall 移动应用程序？立即下载&lt;a href="https://apps.apple.com/us/app/grafana-oncall-preview/id1669759048" rel="noopener noreferrer" target="_blank"&gt;iOS&lt;/a&gt;或&lt;a href="https://play.google.com/store/apps/details?id=com.grafana.oncall.prod" rel="noopener noreferrer" target="_blank"&gt;Android&lt;/a&gt;版。&lt;/em&gt;&lt;/p&gt;&lt;h2 id="do-not-disturb-mode-in-ios-vs-android"&gt; iOS 与 Android 中的请勿打扰模式&lt;/h2&gt;&lt;p&gt;在介绍 OnCall 移动应用程序的最新改进之前，了解 iOS 和 Android 中的请勿打扰 (DND) 模式之间的差异会很有帮助。&lt;/p&gt;&lt;h3 id="the-ios-paradigm-a-smooth-sail"&gt; iOS 范式：一帆风顺&lt;/h3&gt;&lt;p&gt;iOS 提供了一种简化的方法来处理 DND 模式下的关键通知。 Apple 的生态系统允许简单直接的设置，关键通知可以在任何 iOS 设备上有效且一致地传递。无论 iOS 设备的状态如何，任何传入的关键通知都会播放声音并向用户显示。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/android-oncall-mobile-app/android-on-call-mobile-app-ios-notification.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="iOS 上的 OnCall 移动警报。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="iOS 上的 OnCall 移动警报。" src="https://grafana.com/media/blog/android-oncall-mobile-app/android-on-call-mobile-app-ios-notification.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="the-android-paradigm-a-complex-symphony"&gt; Android 范式：一首复杂的交响乐&lt;/h3&gt;&lt;p&gt;Android 的 DND 模式与 iOS 的 DND 模式有很大不同，并且可能会有些令人困惑。&lt;/p&gt;&lt;p&gt;有一种设置可以允许应用程序“忽略/覆盖请勿打扰”，但这主要适用于视觉方面；它确保通知被看到，但不一定被听到。&lt;/p&gt;&lt;p&gt;通知声音由设备上的铃声模式控制，可以是正常、振动或静音：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link captioned" href="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-normal-setting.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Ringer mode set to normal." class="lazyload mb-0" title="*振铃模式设置为正常。*" /&gt; &lt;noscript&gt;&lt;img alt="Ringer mode set to normal." src="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-normal-setting.png" title="*振铃模式设置为正常。*" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;figcaption class="w-100p caption mb-1 text-gray-13 "&gt;&lt;em&gt;振铃模式设置为正常。&lt;/em&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link captioned" href="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-vibrate-setting.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Ringer mode set to vibrate." class="lazyload mb-0" title="*铃声模式设置为振动。*" /&gt; &lt;noscript&gt;&lt;img alt="Ringer mode set to vibrate." src="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-vibrate-setting.png" title="*铃声模式设置为振动。*" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;figcaption class="w-100p caption mb-1 text-gray-13 "&gt;&lt;em&gt;振铃模式设置为振动。&lt;/em&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link captioned" href="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-slient-setting-.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Ringer mode set to silent." class="lazyload mb-0" title="*铃声模式设置为静音。*" /&gt; &lt;noscript&gt;&lt;img alt="Ringer mode set to silent." src="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-slient-setting-.png" title="*铃声模式设置为静音。*" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;figcaption class="w-100p caption mb-1 text-gray-13 "&gt;&lt;em&gt;振铃模式设置为静音。&lt;/em&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;如果铃声模式设置为振动或静音，则默认情况下，通知不会发出任何噪音。&lt;/p&gt;&lt;p&gt;为了克服这个问题，还有一个“请勿打扰权限/访问”的设置。此权限允许应用程序更改设备上的铃声模式（还可以更改音量）。&lt;/p&gt;&lt;p&gt;通过组合&lt;em&gt;“忽略请勿打扰”&lt;/em&gt;和&lt;em&gt;“请勿打扰”权限&lt;/em&gt;设置，应用程序可以像在 iOS 上一样显示重要通知。但应用程序开发人员必须进行自己的定制工作才能实现这一目标；没有开箱即用的解决方案。&lt;/p&gt;&lt;p&gt;这种区别对于 Grafana OnCall 等应用程序至关重要，其中声音警报与通知本身一样重要。&lt;/p&gt;&lt;h4 id="oem-variations-and-dnd-complexities"&gt; OEM 变化和 DND 复杂性&lt;/h4&gt;&lt;p&gt;除此之外，Android 还提供了各种原始设备制造商 (OEM)，每个制造商都为 Android API 添加了自己独特的风格。这种多样性虽然是一种优势，但在确保跨设备行为一致方面带来了复杂性，特别是在覆盖 DND 功能时。&lt;/p&gt;&lt;p&gt;例如，某些设备具有控制振铃模式的物理开关，这有效地消除了以编程方式更改振铃模式的能力。&lt;/p&gt;&lt;p&gt;在某些设备上，当用户启用免打扰模式时，所有声道的音量会自动设置为静音，而在其他设备上，只会更改通知声道的音量。&lt;/p&gt;&lt;h2 id="breaking-through-the-silence"&gt;打破沉默&lt;/h2&gt;&lt;p&gt;最初，为了克服 Android 上的这些挑战，Grafana OnCall 移动应用程序将禁用静音模式，以编程方式将铃声模式设置为正常，并增加通知通道（这是传入通知的默认声音通道）的设备音量。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-gif-1.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示 Grafana OnCall 移动应用如何处理 Android 通知的 gif。" class="lazyload " /&gt; &lt;noscript&gt;&lt;img alt="显示 Grafana OnCall 移动应用如何处理 Android 通知的 gif。" src="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-gif-1.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;虽然这在提供 OnCall 警报方面很有效，但这种方法无意中允许&lt;em&gt;所有&lt;/em&gt;应用程序发送嘈杂的通知并扰乱用户的平静 - 远非理想。&lt;/p&gt;&lt;p&gt;经过深入研究和开发，我们的团队开创了更完善的解决方案。警报声音通道通常用于唤醒用户或提醒他们重要事件，现在却成为希望的灯塔。&lt;/p&gt;&lt;p&gt;通过通过此渠道（而不是默认的通知声音渠道）传送我们的关键通知，我们既可以尊重用户的偏好，同时确保我们的关键警报可以打破沉默。&lt;/p&gt;&lt;h2 id="the-genius-of-the-alarm-channel"&gt;天才的报警通道&lt;/h2&gt;&lt;p&gt;您可能想知道为什么是报警通道？其独特的优势在于其固有的忽略 Android 设备上的静音模式设置的能力。这意味着，即使设备设置为静音，我们的通知仍然有声音，确保重要警报被听到，而不仅仅是看到。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-alarm-volume-channel.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="报警音量通道截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="报警音量通道截图。" src="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-alarm-volume-channel.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;这也意味着不妥协的用户设置。采用报警通道使我们能够尊重用户的偏好。他们的设备对其他一切都保持静音模式，最大限度地减少干扰，而不会错过真正重要的事情。&lt;/p&gt;&lt;p&gt;利用警报通道需要一些创新的技术调整，因此我们开发了为此特定目的量身定制的自定义通知音频播放器。此自定义可确保声音和音量设置针对需要时的警报进行优化，但在接收非关键警报时遵循默认通知设置。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-gif-2.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示 Android 中更新的 OnCall 通知体验的 gif。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示 Android 中更新的 OnCall 通知体验的 gif。" src="https://grafana.com/media/blog/android-oncall-mobile-app/android-oncall-mobile-app-gif-2.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="wed-love-your-feedback"&gt;我们很乐意收到您的反馈！&lt;/h2&gt;&lt;p&gt;我们希望您喜欢 Android 版 Grafana OnCall 移动应用程序的这一改进，该应用程序随该应用程序的 1.15.1 版本一起提供。&lt;/p&gt;&lt;p&gt;此外，如果有任何其他功能可以改善您和您的团队的随叫随到体验，我们希望收到您的来信。您可以发送电子邮件至&lt;a href="mailto:mobile-support@grafana.com"&gt;mobile-support@grafana.com&lt;/a&gt; ，或在&lt;a href="https://grafana.slack.com/archives/C02LSUUSE2G" rel="noopener noreferrer" target="_blank"&gt;Grafana Community Slack 频道&lt;/a&gt;中给我们留言。&lt;/p&gt;&lt;p&gt;我们也希望您能够帮助我们塑造 OnCall 移动应用程序的未来。为了抢占新功能的先机，并帮助我们调整随叫随到的体验，您可以加入我们的&lt;a href="https://testflight.apple.com/join/mGMAjYml" rel="noopener noreferrer" target="_blank"&gt;iOS&lt;/a&gt;或&lt;a href="https://play.google.com/apps/testing/com.grafana.oncall.prod" rel="noopener noreferrer" target="_blank"&gt;Android&lt;/a&gt;测试团队。谢谢您的意见！&lt;/p&gt;</description><pubDate>Fri, 19 Apr 2024 11:21:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/04/19/grafana-oncall-mobile-app-notifications-the-new-and-improved-experience-for-android-users/</guid></item><item><title>通过 Ansible 在多个主机上扩展 OpenTelemetry Collector 的指南</title><link>https://grafana.com/blog/2024/04/18/a-guide-to-scaling-opentelemetry-collectors-across-multiple-hosts-via-ansible/</link><description>&lt;p&gt;OpenTelemetry 已成为可观测领域的&lt;a href="https://grafana.com/observability-survey/?pg=blog&amp;amp;plcmt=body-txt#oss-is-the-de-facto-approach-to-observability"&gt;关键开源工具&lt;/a&gt;。当组织使用它来管理更多遥测数据时，他们还需要了解如何使其在各种环境中工作。&lt;/p&gt;&lt;p&gt;本指南的重点是跨各种 Linux 主机扩展 OpenTelemetry Collector 部署，以在可观测性架构中充当网关和代理。利用 OpenTelemetry Collector 的这种双重功能，可以稳健地收集指标、跟踪和日志并将其转发到分析和可视化平台，例如&lt;a href="https://grafana.com/products/cloud?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt; 。&lt;/p&gt;&lt;p&gt;为了加速这一过程，我们还将使用 Ansible，它因其在部署和管理软件方面的易用性和多功能性而受到开发人员的欢迎。它是部署 OpenTelemetry Collector 的绝佳选择，因为它简化了安装、设置和管理任务的自动化。&lt;/p&gt;&lt;p&gt;一旦我们概述了使用 Ansible 在整个基础设施中部署和管理 OpenTelemetry Collector 可扩展实例的策略，我们将讨论如何在 Grafana 中有效地可视化该数据。让我们深入了解吧！&lt;/p&gt;&lt;h2 id="how-to-scale-otel-collectors-across-multiple-hosts"&gt;如何跨多个主机扩展 OTel 收集器&lt;/h2&gt;&lt;h3 id="before-you-begin"&gt;在你开始之前&lt;/h3&gt;&lt;p&gt;首先，您应该具备以下条件：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;具有 SSH 访问权限和足够权限的 Linux 主机&lt;/li&gt;&lt;li&gt;Ansible 安装在您的基础系统上&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="install-the-grafana-ansible-collection"&gt;安装 Grafana Ansible 集合&lt;/h3&gt;&lt;p&gt;Grafana Ansible 集合提供了用于管理 Grafana Cloud 上各种资源的模块和角色，以及用于管理和部署 Grafana 的角色。自 3.1.0 版本起&lt;a href="https://github.com/grafana/grafana-ansible-collection/tree/main/roles/opentelemetry_collector" rel="noopener noreferrer" target="_blank"&gt;，OpenTelemetry Collector 角色&lt;/a&gt;在 Grafana Ansible 集合中提供。&lt;/p&gt;&lt;p&gt;要安装 Grafana Ansible 集合，请运行以下命令：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;ansible-galaxy collection install grafana.grafana&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="create-an-ansible-inventory-file"&gt;创建 Ansible 库存文件&lt;/h3&gt;&lt;p&gt;接下来，您需要设置主机并创建清单文件。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;创建 Ansible 库存文件。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt; Ansible 清单位于名为 inventory 的文件中，在单独的行上列出每个主机 IP，如下所示（显示 8 个主机）：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;146.190.208.216 # hostname = ubuntu-01 146.190.208.190 # hostname = ubuntu-02 137.184.155.128 # hostname = centos-01 146.190.216.129 # hostname = centos-02 198.199.82.174 # hostname = debian-01 198.199.77.93 # hostname = debian-02 143.198.182.156 # hostname = fedora-01 143.244.174.246 # hostname = fedora-02&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：如果您要复制上述文件，请删除注释 (#)。&lt;/p&gt;&lt;/blockquote&gt;&lt;ol start="2"&gt;&lt;li&gt;在&lt;code&gt;inventory&lt;/code&gt;所在的同一目录中创建&lt;code&gt;ansible.cfg&lt;/code&gt;文件，并使用以下值：&lt;/li&gt;&lt;/ol&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;[defaults] inventory = inventory # Path to the inventory file private_key_file = ~/.ssh/id_rsa # Path to my private SSH Key remote_user=root&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="use-the-opentelemetry-collector-ansible-role"&gt;使用 OpenTelemetry Collector Ansible 角色&lt;/h3&gt;&lt;p&gt;接下来，您将创建一个 Ansible playbook，从&lt;code&gt;grafana.grafana&lt;/code&gt; Ansible 集合中调用&lt;code&gt;opentelemetry_collector&lt;/code&gt;角色。请参阅&lt;a href="https://grafana.com/docs/grafana-cloud/send-data/otlp/send-data-otlp/?pg=blog&amp;amp;plcmt=body-txt#send-data-using-opentelemetry-protocol-otlp"&gt;此文档&lt;/a&gt;以获取配置 OpenTelemetry Collector 以将遥测数据发送到 Grafana Cloud 所需的凭据。&lt;/p&gt;&lt;p&gt;在与&lt;code&gt;ansible.cfg&lt;/code&gt;和&lt;code&gt;inventory&lt;/code&gt;相同的目录中创建一个名为&lt;code&gt;deploy-otelcol.yml&lt;/code&gt;的文件。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;- name: Install OpenTelemetry Collector hosts: all become: true tasks: - name: Install OpenTelemetry Collector ansible.builtin.include_role: name: grafana.grafana.opentelemetry_collector vars: otel_collector_extensions: basicauth/otlp: client_auth: username: &amp;lt;instanceID&amp;gt; password: &amp;lt;Cloud Access Policy token&amp;gt; otel_collector_receivers: otlp: # https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver/otlpreceiver protocols: grpc: http: hostmetrics: # Optional. Host Metrics Receiver added as an example of Infra Monitoring capabilities of the OpenTelemetry Collector # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/hostmetricsreceiver scrapers: load: memory: otel_collector_processors: batch: # https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/batchprocessor resourcedetection: # Enriches telemetry data with resource information from the host # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/resourcedetectionprocessor detectors: [&amp;quot;env&amp;quot;, &amp;quot;system&amp;quot;] override: false transform/add_resource_attributes_as_metric_attributes: # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/transformprocessor error_mode: ignore metric_statements: - context: datapoint statements: - set(attributes[&amp;quot;deployment.environment&amp;quot;], resource.attributes[&amp;quot;deployment.environment&amp;quot;]) - set(attributes[&amp;quot;service.version&amp;quot;], resource.attributes[&amp;quot;service.version&amp;quot;]) otel_collector_exporters: otlphttp: auth: authenticator: basicauth/otlp endpoint: &amp;lt;OTLP Endpoint URL&amp;gt; otel_collector_service: extensions: [basicauth/otlp] pipelines: traces: receivers: [otlp] processors: [resourcedetection, batch] exporters: [otlphttp] metrics: receivers: [otlp, hostmetrics] processors: [resourcedetection, transform/add_resource_attributes_as_metric_attributes, batch] exporters: [otlphttp] logs: receivers: [otlp] processors: [resourcedetection, batch] exporters: [otlphttp]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;您需要调整配置以匹配您想要收集的特定遥测数据以及您计划将其转发到的位置。上面的配置片段是一个基本示例，旨在收集主机指标（通过 OpenTelemetry Collector）并将其转发到 Grafana Cloud。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id="run-the-ansible-playbook"&gt;运行 Ansible 剧本&lt;/h3&gt;&lt;p&gt;通过执行以下命令在主机上部署 OpenTelemetry Collector：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt;&lt;span class="lang-toolbar__item"&gt;嘘&lt;/span&gt;&lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-sh"&gt;ansible-playbook deploy-opentelemetry.yml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="verify-data-ingestion-into-grafana-cloud"&gt;验证 Grafana Cloud 中的数据摄取&lt;/h3&gt;&lt;p&gt;部署 OpenTelemetry Collector 并将其配置为将数据转发到 Grafana Cloud 后，您可以验证提取：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;登录您的 Grafana Cloud 实例。&lt;/li&gt;&lt;li&gt;导航至&lt;strong&gt;“探索”&lt;/strong&gt;部分。&lt;/li&gt;&lt;li&gt;从下拉菜单中选择您的 Grafana Cloud Prometheus 数据源。&lt;/li&gt;&lt;li&gt;执行查询以确认指标的接收，例如，针对特定主机的指标的&lt;code&gt;{instance=&amp;quot;ubuntu-01&amp;quot;}&lt;/code&gt; 。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="visualize-metrics-and-logs-in-grafana"&gt;在 Grafana 中可视化指标和日志&lt;/h3&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/static/assets/img/blog/ansible-to-manage-agent2.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="指标示例" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="指标示例" src="https://grafana.com/static/assets/img/blog/ansible-to-manage-agent2.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;将数据成功引入 Grafana Cloud 后，您可以创建自定义仪表板来可视化从 OTel Collector 收到的指标、日志和跟踪。然后，您可以使用 Grafana 强大的查询生成器和可视化工具有效地从数据中获取见解。&lt;/p&gt;&lt;p&gt;在开始之前，请记住以下一些提示：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;考虑创建仪表板来全面概述基础设施的运行状况和性能。&lt;/li&gt;&lt;li&gt;利用 Grafana 的&lt;a href="https://grafana.com/docs/grafana/latest/alerting/?pg=blog&amp;amp;plcmt=body-txt"&gt;警报功能&lt;/a&gt;主动管理和响应通过 OpenTelemetry 数据识别的问题。&lt;/li&gt;&lt;li&gt;定制 Ansible 角色、OpenTelemetry Collector 配置和 Grafana 仪表板，以满足您的特定监控和可观察性要求。&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="whats-next"&gt;下一步是什么？&lt;/h2&gt;&lt;p&gt;我们在此概述的策略可以增强您的监控和数据可视化能力。如果您发现它有用，这里有一些其他资源可以在您使用 OpenTelemetry 和 Grafana 时为您提供帮助：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;将遥测数据发送到 Prometheus 并在 Grafana OSS 中查看：&lt;/strong&gt;要了解如何将遥测数据直接传输到 Prometheus 实例并在 Grafana OSS 中分析指标， &lt;a href="https://opentelemetry.io/blog/2024/scaling-collectors/" rel="noopener noreferrer" target="_blank"&gt;OpenTelemetry 博客&lt;/a&gt;上有一个有用的指南。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;使用 Ansible 扩展 Grafana Alloy：&lt;/strong&gt;对扩展&lt;a href="https://grafana.com/oss/alloy-opentelemetry-collector/?pg=blog&amp;amp;plcmt=body-txt"&gt;Alloy&lt;/a&gt;感兴趣？有一篇关于&lt;a href="https://grafana.com/blog/2024/04/15/a-guide-to-scaling-grafana-alloy-deployments-across-multiple-hosts/"&gt;扩展 Allo&lt;/a&gt; y 的详细博客文章，它将引导您了解如何有效地使用 Ansible 来实现扩展目的。如果您的目标是增强 Alloy 设置的性能和可扩展性，那么这是一个很好的资源。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;扩展 OpenTelemetry Collector：&lt;/strong&gt;对于那些希望扩展 OpenTelemetry Collector 功能的人来说，官方 OpenTelemetry 文档提供了有关&lt;a href="https://opentelemetry.io/docs/collector/scaling/" rel="noopener noreferrer" target="_blank"&gt;扩展收集器的&lt;/a&gt;全面见解。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;在 Grafana Cloud 中可视化 OpenTelemetry 数据：&lt;/strong&gt;最后，如果您的目标是使用 Grafana Cloud 以更精细和更易于访问的方式可视化来自应用程序的遥测数据，那么检查 Grafana Cloud 中的&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/?pg=blog&amp;amp;plcmt=body-txt"&gt;应用程序可观察性&lt;/a&gt;是正确的选择。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Thu, 18 Apr 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/04/18/a-guide-to-scaling-opentelemetry-collectors-across-multiple-hosts-via-ansible/</guid></item><item><title>GrafanaCON 2024 主题演讲回顾网络研讨会：立即注册以了解所有最新公告</title><link>https://grafana.com/blog/2024/04/17/grafanacon-2024-keynote-recap-webinars-register-today-to-catch-up-on-all-the-latest-announcements/</link><description>&lt;p&gt;本月早些时候，我们在阿姆斯特丹举办了&lt;a href="https://grafana.com/about/events/grafanacon/2024/"&gt;GrafanaCON 2024&lt;/a&gt; 。我们的年度社区活动重点关注 Grafana 及其扩展的开源生态系统，展示了我们最新的 OSS 版本、来自社区的鼓舞人心的用例等等 - 所有这些都从开幕主题演讲开始。&lt;/p&gt;&lt;p&gt;如果您无法亲自参加我们的售罄活动，我们会想念您，但不用担心。您仍然可以通过收听我们的&lt;a href="https://grafana.com/go/webinar/grafanacon-2024-keynote-recap/"&gt;GrafanaCON 2024 主题演讲回顾网络研讨会&lt;/a&gt;之一来参与其中。&lt;/p&gt;&lt;p&gt;为了覆盖我们全球开源社区的所有成员，Grafana Labs 团队成员将在不同时区以多种语言举办这些现场独家网络研讨会：&lt;/p&gt;&lt;p&gt; &lt;strong&gt;&lt;a href="https://go2.grafana.com/2024-04-19-Webinar-GrafanaCONKeynoteRecap-APAC.html?pg=webinar-grafanacon-keynote-recap&amp;amp;plcmt=regional" rel="noopener noreferrer" target="_blank"&gt;英语 - 亚太地区&lt;/a&gt;| 4 月 19 日 |世界标准时间 3:30&lt;/strong&gt;&lt;br /&gt;&lt;em&gt;演讲者：联合创始人安东尼·伍兹；和首席技术官 Tom Wilkie&lt;/em&gt;&lt;/p&gt;&lt;p&gt; &lt;strong&gt;&lt;a href="https://grafana.com/es/go/webinar/grafanacon-2024-keynote-recap/?pg=webinar-grafanacon-keynote-recap&amp;amp;plcmt=regional"&gt;西班牙语&lt;/a&gt;| 4 月 25 日 | 13:00 世界标准时间&lt;/strong&gt;&lt;br /&gt;&lt;em&gt;演讲者：Imma Valls，高级开发倡导者&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://grafana.com/de/go/webinar/grafanacon-2024-keynote-recap/?pg=webinar-grafanacon-keynote-recap&amp;amp;plcmt=regional"&gt;德语&lt;/a&gt;| 4 月 30 日 | 12:00 世界标准时间&lt;/strong&gt;&lt;br /&gt;&lt;em&gt;演讲者：David Kaltschmidt，用户体验总监&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://grafana.com/fr/go/webinar/grafanacon-2024-keynote-recap/?pg=webinar-grafanacon-keynote-recap&amp;amp;plcmt=regional"&gt;法语&lt;/a&gt;| 4 月 30 日 |世界标准时间 9:00&lt;/strong&gt;&lt;br /&gt;&lt;em&gt;演讲者：Clément Duveau，合作伙伴解决方案工程师&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://grafana.com/go/webinar/grafanacon-2024-keynote-recap/"&gt;英语-美国&lt;/a&gt;| 5 月 1 日 | 16:30 世界标准时间&lt;/strong&gt;&lt;br /&gt;&lt;em&gt;演讲者：John O&amp;#39;Brien，高级解决方案工程师&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://grafana.com/pt-br/go/webinar/grafanacon-2024-keynote-recap/?pg=webinar-grafanacon-keynote-recap&amp;amp;plcmt=regional"&gt;葡萄牙语-拉丁美洲&lt;/a&gt;| 5 月 2 日 | 13:30 世界标准时间&lt;/strong&gt;&lt;br /&gt;&lt;em&gt;演讲者：Raphael Ferreira，高级解决方案工程师&lt;/em&gt;&lt;/p&gt;&lt;p&gt;您绝对不想错过，所以今天就报名参加您的活动吧！&lt;/p&gt;&lt;h2 id="what-to-expect-at-the-virtual-event"&gt;虚拟活动的预期结果&lt;/h2&gt;&lt;p&gt;我们的主题演讲回顾网络研讨会是了解&lt;a href="https://grafana.com/blog/2024/04/09/grafanacon-2024-a-guide-to-all-the-announcements-from-grafana-labs/"&gt;GrafanaCON 2024 年所有重大头条新闻和亮点的&lt;/a&gt;绝佳机会，包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;strong&gt;Grafana 11 发布：&lt;/strong&gt;了解旨在帮助在可观测性生态系统中运行、管理和扩展 Grafana 的&lt;a href="https://grafana.com/blog/2024/04/09/grafana-11-release-all-the-new-features/"&gt;所有最新可视化和功能&lt;/a&gt;。&lt;/li&gt;&lt;li&gt; &lt;strong&gt;Loki 的最新动态：&lt;/strong&gt;了解&lt;a href="https://grafana.com/blog/2024/04/09/grafana-loki-3.0-release-all-the-new-features/"&gt;Grafana Loki 3.0 版本&lt;/a&gt;如何为日志查询性能和 OpenTelemetry 摄取带来重要更新。&lt;/li&gt;&lt;li&gt; &lt;strong&gt;Grafana Alloy 的推出：&lt;/strong&gt;了解我们&lt;a href="https://grafana.com/blog/2024/04/09/grafana-alloy-opentelemetry-collector-with-prometheus-pipelines/"&gt;新的 OpenTelemetry Collector 开源发行版&lt;/a&gt;，它为 OpenTelemetry 和 Prometheus 遥测格式提供本机管道。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我们希望（虚拟）在那里见到您！如果您无法参加现场 GrafanaCON 2024 Keynote Recap 网络研讨会，您可以&lt;a href="https://grafana.com/go/webinar/grafanacon-2024-keynote-recap/"&gt;注册&lt;/a&gt;将点播录音直接发送到您的收件箱。&lt;/p&gt;&lt;p&gt;&lt;em&gt;正在寻找与 Grafana Labs 建立联系的更多方式？请查看我们的&lt;a href="https://grafana.com/about/events/?pg=blog&amp;amp;plcmt=body-txt"&gt;活动页面&lt;/a&gt;，了解即将到来的现场和虚拟机会。&lt;/em&gt;&lt;/p&gt;</description><pubDate>Wed, 17 Apr 2024 14:09:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/04/17/grafanacon-2024-keynote-recap-webinars-register-today-to-catch-up-on-all-the-latest-announcements/</guid></item><item><title>Grafana Cloud 更新：无需 PromQL、本机 OpenTelemetry 日志支持、炫酷面板等即可探索指标</title><link>https://grafana.com/blog/2024/04/16/grafana-cloud-updates-explore-metrics-without-promql-native-opentelemetry-log-support-cool-panels-and-more/</link><description>&lt;p&gt;我们不断在 Grafana Cloud 中发布有用的更新和有趣的功能，这是我们完全托管的可观测性平台，由开源 Grafana LGTM Stack（用于日志的&lt;a href="https://grafana.com/oss/loki/?pg=blog&amp;amp;plcmt=body-txt"&gt;Loki&lt;/a&gt; 、用于可视化的&lt;a href="https://grafana.com/oss/grafana?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana&lt;/a&gt; 、用于跟踪的&lt;a href="https://grafana.com/oss/tempo/?pg=blog&amp;amp;plcmt=body-txt"&gt;Tempo&lt;/a&gt;和用于指标的&lt;a href="https://grafana.com/oss/mimir/?pg=blog&amp;amp;plcmt=body-txt"&gt;Mimir&lt;/a&gt; ）提供支持。&lt;/p&gt;&lt;p&gt;这个月也不例外。在我们在阿姆斯特丹举行的年度社区会议 GrafanaCON 上， &lt;a href="https://grafana.com/blog/2024/04/09/grafanacon-2024-a-guide-to-all-the-announcements-from-grafana-labs/"&gt;我们推出了一系列新功能&lt;/a&gt;，可帮助您深入了解指标，而无需编写任何查询（您没看错），为广受欢迎的 Canvas 面板添加了有趣的功能，对 OpenTelemetry 日志等的本机支持。&lt;/p&gt;&lt;p&gt;如果您错过了，这里汇总了本月 Grafana Cloud 的最新、最出色的升级。您还可以&lt;a href="https://grafana.com/docs/grafana-cloud/whats-new/?pg=blog&amp;amp;plcmt=body-txt"&gt;在 Grafana Cloud 文档新增功能&lt;/a&gt;中了解我们添加到 Grafana Cloud 的所有功能。&lt;/p&gt;&lt;p&gt;如果您不是 Grafana Cloud 用户。 。 。我们还在等什么？您可以通过我们慷慨的免费云计划免费尝试这些功能。今天&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;就注册&lt;/a&gt;一个帐户！&lt;/p&gt;&lt;h2 id="new-in-grafana-dashboards-and-visualizations"&gt; Grafana 仪表板和可视化中的新增功能&lt;/h2&gt;&lt;h3 id="explore-prometheus-metrics-without-writing-queries"&gt;无需编写查询即可探索 Prometheus 指标&lt;/h3&gt;&lt;p&gt;如果您&lt;em&gt;无需&lt;/em&gt;编写 PromQL 就可以在 Prometheus 中进行查询和故障排除，会怎样？向 Explore Metrics 打个招呼，这是一种新的无查询体验，用于在 Grafana 中探索和钻取 Prometheus 指标。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;p&gt;通过探索指标，您可以查找或选择指标名称并立即看到相应的可视化效果，无论您的指标是仪表、计数器还是直方图。您可以查看按每个标签细分的指标，这使得您可以轻松地按命名空间、集群或任何其他属性发现异常情况。这是缩小延迟、错误或其他问题根源的有效方法，而且完全只需点击即可。&lt;/p&gt;&lt;p&gt;要了解更多信息，请阅读我们的&lt;a href="https://grafana.com/docs/grafana/latest/explore/explore-metrics/?pg=blog&amp;amp;plcmt=body-txt"&gt;探索指标文档&lt;/a&gt;。&lt;/p&gt;&lt;h3 id="color-code-table-rows"&gt;颜色代码表行&lt;/h3&gt;&lt;p&gt;在 Grafana 中，您现在可以使用表可视化中的&lt;strong&gt;彩色背景单元&lt;/strong&gt;格类型向整个表行添加颜色。当您将表中的字段配置为使用此单元格类型时，可以使用将单元格颜色应用于整行的选项。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;p&gt;此功能对于各种用例都很有用，包括将状态字段映射到颜色（例如， &lt;code&gt;info&lt;/code&gt; 、 &lt;code&gt;debug&lt;/code&gt; 、 &lt;code&gt;warning&lt;/code&gt; ）以及允许根据阈值对行进行颜色编码。这是我们使表格格式化更加无缝的方法之一，并使您能够使用表格可视化快速扫描数据。&lt;/p&gt;&lt;p&gt;要了解更多信息，请参阅&lt;a href="https://grafana.com/docs/grafana/v11.0/panels-visualizations/visualizations/table/?pg=blog&amp;amp;plcmt=body-txt#color-background-gradient-or-solid"&gt;表可视化文档&lt;/a&gt;。&lt;/p&gt;&lt;h3 id="improvements-to-the-canvas-visualization"&gt;画布可视化的改进&lt;/h3&gt;&lt;p&gt;自从我们在 Grafana 9.x 中引入 Canvas 面板以来，它的受欢迎程度和功能都在不断增长。除了引入&lt;a href="https://grafana.com/docs/grafana/latest/whatsnew/whats-new-in-v10-3/#canvas-visualization-supports-pan-and-zoom"&gt;平移和缩放&lt;/a&gt;以及&lt;a href="https://grafana.com/docs/grafana/latest/whatsnew/whats-new-in-v10-2/?pg=blog&amp;amp;plcmt=body-txt#create-interactive-buttons-in-canvas-visualizations"&gt;添加交互式按钮的&lt;/a&gt;功能之外，我们很高兴为 Canvas 面板引入以下增强功能。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;流程图功能：&lt;/strong&gt;这些改进在社区中需求量很大，其中包括添加：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;广泛使用的元素：云、平行四边形、三角形&lt;/li&gt;&lt;li&gt;中点控制使连接器不再必须是直线&lt;/li&gt;&lt;li&gt;更多连接器样式，包括虚线以及角半径和方向控制&lt;/li&gt;&lt;li&gt;连接器的水平和垂直卡扣&lt;/li&gt;&lt;li&gt;元素的圆角样式&lt;/li&gt;&lt;li&gt;旋转画布中的元素的能力&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;通用数据链接支持：&lt;/strong&gt;我们更新了数据链接，以便您可以将它们添加到与“画布”面板中的数据关联的几乎所有元素或元素属性。以前，您只能将数据链接添加到文本元素或使用&lt;code&gt;TextConfig&lt;/code&gt;对象的元素。此更新消除了该限制。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;无限平移：&lt;/strong&gt;使用这个新的编辑器选项，您现在可以查看和导航非常大的画布。当启用&lt;strong&gt;平移和变焦&lt;/strong&gt;开关时，会显示此选项。要进行此尝试，请联系 Grafana 支持以启用 Grafana Cloud 中的平移和缩放功能。&lt;/p&gt;&lt;p&gt;要了解有关所有这些功能的更多信息，请查看我们的&lt;a href="https://grafana.com/docs/grafana-cloud/visualizations/panels-visualizations/visualizations/canvas/?pg=blog&amp;amp;plcmt=body-txt"&gt;Canvas 面板文档&lt;/a&gt;。&lt;/p&gt;&lt;h3 id="scenes-powered-dashboards"&gt;场景驱动的仪表板&lt;/h3&gt;&lt;p&gt;去年，Grafana 创始人 Torkel Ödegaard &lt;a href="https://grafana.com/blog/2023/08/03/new-in-grafana-10-grafana-scenes-for-building-dynamic-dashboarding-experiences/"&gt;宣布推出 Scenes&lt;/a&gt; ，这是我们针对 Grafana 仪表板的新前端框架。现在，组成仪表板的所有内容（面板、变量、行、时间范围、转换和部分）都是开发人员可以合并到应用程序中的组件。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;p&gt;从那时起，我们一直致力于仪表板架构的重大更新，我们很自豪地宣布它已迁移到场景库。此迁移为我们提供了更稳定、动态和灵活的场景驱动的仪表板。&lt;/p&gt;&lt;p&gt;想要证据吗？以下是我们在 Grafana 中引入的两项改进：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;编辑模式：&lt;/strong&gt;在仪表板编辑过程中，有时很难有效地浏览所有可视选项。通过引入编辑模式，我们的目标是提供一种更简单的方式来发现仪表板编辑体验并与之交互。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;模板变量和时间选择器的固定位置：&lt;/strong&gt;我们将时间选择器移至仪表板画布中，现在，当您滚动浏览仪表板时，它将与模板变量一起粘在顶部。这在历史上一直是一个强烈&lt;a href="https://github.com/grafana/grafana/issues/11166" rel="noopener noreferrer" target="_blank"&gt;要求的功能&lt;/a&gt;，我们很高兴最终为社区推出。&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="improvements-to-manage-grafana-at-scale"&gt;大规模管理 Grafana 的改进&lt;/h2&gt;&lt;h3 id="organize-grafana-dashboards-with-subfolders"&gt;使用子文件夹组织 Grafana 仪表板&lt;/h3&gt;&lt;p&gt;仪表板进入文件夹，现在……文件夹可以进入文件夹！听起来像是一个很小的变化，但子文件夹功能却产生了很大的影响。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;p&gt;有些人希望使用子文件夹来防止仪表板蔓延，并且在嵌套层次结构中设置文件夹有助于实现这一点。&lt;/p&gt;&lt;p&gt;其他人将使用子文件夹来创建嵌套的权限层，其中团队可以在反映其组织层次结构的不同级别进行访问。&lt;/p&gt;&lt;p&gt;每个人都将从子文件夹引入 Grafana 的组织和顺序中受益，特别是当组织扩展其仪表板使用量时。&lt;/p&gt;&lt;h3 id="user-based-authentication-in-azure-monitor-data-source"&gt; Azure Monitor 数据源中基于用户的身份验证&lt;/h3&gt;&lt;p&gt;借助这一新的实验性功能，现在可以限制用户对&lt;a href="https://grafana.com/docs/grafana/latest/datasources/azure-monitor/?pg=blog&amp;amp;plcmt=body-txt"&gt;Azure Monitor 数据源&lt;/a&gt;中某些数据的访问。&lt;/p&gt;&lt;p&gt;如果使用 Azure Monitor，则可以转发用户的凭据及其查询，以便使用 Grafana 的每个人都只能访问他们可以在 Azure 控制台中看到的 Azure Monitor 遥测数据。&lt;/p&gt;&lt;p&gt;要了解更多信息，请阅读我们的&lt;a href="https://grafana.com/docs/grafana/next/datasources/azure-monitor/?pg=blog&amp;amp;plcmt=body-txt#configure-current-user-authentication"&gt;Azure Monitor 文档&lt;/a&gt;。 &lt;/p&gt;&lt;p&gt;&lt;img alt="Azure Monitor 数据源 UI 的屏幕截图" class="lazyload" /&gt;&lt;/p&gt;&lt;h3 id="pdf-export-improvements"&gt; PDF 导出改进&lt;/h3&gt;&lt;p&gt;等待结束了——至少对于您的 PDF 报告来说是这样。我们一直致力于对 Grafana 仪表板转 PDF 功能进行重大更新，以使其能够更快地处理更大、更复杂的仪表板。&lt;/p&gt;&lt;p&gt;结果：PDF 生成时间将不再与仪表板中的面板数量成正比。例如，包含大约 200 个面板的复杂 SLO 仪表板所需时间从超过 7 分钟缩短到仅 11 秒。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;p&gt;此更新还修复了与渲染带有由变量设置为重复的面板或行的报表相关的所有警告，例如在折叠行内渲染重复面板。&lt;/p&gt;&lt;p&gt;要尝试此更新，请联系 Grafana 支持以在 Grafana Cloud 中启用此功能。&lt;/p&gt;&lt;h2 id="the-latest-in-cloud-logs"&gt;云日志的最新信息&lt;/h2&gt;&lt;h3 id="team-label-based-access-control-lbac"&gt;基于团队标签的访问控制 (LBAC)&lt;/h3&gt;&lt;p&gt; Team LBAC（基于标签的访问控制）是我们基于 Grafana 团队成员身份改进和简化数据源访问管理的第一步。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/docs/grafana/data-sources/teamlbac.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Cloud 日志中团队 LBAC UI 的屏幕截图" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana Cloud 日志中团队 LBAC UI 的屏幕截图" src="https://grafana.com/media/docs/grafana/data-sources/teamlbac.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; Cloud Logs 中提供了团队 LBAC，它根据 Grafana 中为每个团队设置的规则来控制对日志的访问。因此，现在团队可以查看相同的数据源，但通过各自团队的标签权限的文件管理器。&lt;/p&gt;&lt;p&gt;这一强大的功能使 Grafana 管理员可以将每个实例的日志记录数据源总数从数百个减少到一个。团队 LBAC 还使多个团队能够访问一个仪表板，因为每个团队都会将适当的访问控制规则应用于其用例。&lt;/p&gt;&lt;p&gt;要了解有关功能和最佳实践的更多信息，请访问我们的&lt;a href="https://grafana.com/docs/grafana/latest/administration/data-source-management/teamlbac/?pg=blog&amp;amp;plcmt=body-txt"&gt;团队 LBAC 文档&lt;/a&gt;。&lt;/p&gt;&lt;h3 id="native-opentelemetry-logs-support"&gt;原生 OpenTelemetry 日志支持&lt;/h3&gt;&lt;p&gt;虽然已经可以将 OTel 日志提取到 Cloud Logs，但它并没有提供最佳的查询体验。为了向选择 OpenTelemetry 的用户提供原生 OTel 日志记录体验，我们向 Grafana Cloud Logs 添加了原生 OpenTelemetry 摄取支持。&lt;/p&gt;&lt;p&gt;通过利用底层的&lt;a href="https://grafana.com/docs/grafana-cloud/whats-new/?pg=blog&amp;amp;plcmt=body-txt#structured-metadata-for-cloud-logs"&gt;结构化元数据&lt;/a&gt;，Cloud Logs 现在为通过我们的 Cloud OTLP 端点发送的日志提供简化的语法和更好的查询性能。&lt;/p&gt;&lt;h2 id="built-in-generative-ai-support"&gt;内置生成人工智能支持&lt;/h2&gt;&lt;p&gt;更容易开始使用 Grafana Cloud 中的生成式 AI 功能。&lt;/p&gt;&lt;p&gt;您现在无需配置自己的 API 密钥，而是可以在 Grafana Cloud 控制台中找到可以使用的 LLM 插件。要为您的实例启用生成式 AI 功能，只需选择&lt;strong&gt;使用 Grafana 提供的 OpenAI&lt;/strong&gt; ，接受条款，然后单击&lt;strong&gt;保存并测试&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;然后尝试我们的人工智能功能之一：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/profiles/flamegraphs/?pg=blog&amp;amp;plcmt=body-txt"&gt;解释火焰图&lt;/a&gt;并提供解决问题的建议&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/blog/2024/04/09/grafana-11-release-all-the-new-features/#faster-ai-powered-titles-and-descriptions"&gt;建议仪表板和仪表板面板的标题和描述&lt;/a&gt;&lt;/li&gt;&lt;li&gt;解释&lt;a href="https://grafana.com/blog/2024/02/21/ai-powered-diagnostics-for-incident-response-new-sift-features-in-grafana-irm/"&gt;Sift&lt;/a&gt;中的错误日志行，这是我们用于事件响应的人工智能驱动的诊断功能&lt;/li&gt;&lt;li&gt;解决事件时&lt;a href="https://grafana.com/blog/2023/08/28/generative-ai-at-grafana-labs-whats-new-whats-next-and-our-vision-for-the-open-source-community/#streamline-incident-response-with-grafana-incident-auto-summary"&gt;自动总结事件&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;要了解更多信息， &lt;a href="https://grafana.com/docs/grafana-cloud/alerting-and-irm/machine-learning/configure/llm-plugin/?pg=blog&amp;amp;plcmt=body-txt"&gt;请查看我们的 LLM 插件文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="share-performance-testing-results-as-a-grafana-dashboard"&gt;作为 Grafana 仪表板共享性能测试结果&lt;/h2&gt;&lt;p&gt;在 Grafana Cloud k6 中运行性能测试后，下一步通常是与您的团队分享任何结果。有时您可能希望过滤掉一些信息并专注于特定指标以与团队成员共享。其他时候，您可能希望以可访问、易于阅读的格式生成 PDF 以便与外部利益相关者共享。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/docs/k6/screenshot-grafana-cloud-k6-summary-dashboard.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Cloud 中 Grafana Cloud k6 性能测试结果仪表板的屏幕截图" class="lazyload " /&gt; &lt;noscript&gt;&lt;img alt="Grafana Cloud 中 Grafana Cloud k6 性能测试结果仪表板的屏幕截图" src="https://grafana.com/media/docs/k6/screenshot-grafana-cloud-k6-summary-dashboard.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; Grafana Cloud k6 中的新导出摘要功能允许您将测试结果导出为清晰、全面的 Grafana 仪表板，其中包括带有关键指标的面板和图表，例如最大吞吐量、HTTP 故障、平均响应时间等。然后，您可以轻松地与其他团队成员共享仪表板、对其进行编辑或将其导出为 PDF。&lt;/p&gt;&lt;p&gt;要了解更多信息，请参阅 Grafana Cloud k6 文档中的&lt;a href="https://grafana.com/docs/grafana-cloud/k6/analyze-results/export-results/?pg=blog&amp;amp;plcmt=body-txt#export-as-summary"&gt;导出测试结果&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="new-and-improved-grafana-cloud-solutions"&gt;新的和改进的 Grafana Cloud 解决方案&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://grafana.com/solutions/pgbouncer/monitor/?pg=blog&amp;amp;plcmt=body-txt"&gt;PgBouncer&lt;/a&gt; 。获取四个警报和三个预构建的仪表板，以监控来自 PostgreSQL 数据库的轻量级连接池的指标和日志。&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/solutions/openstack/monitor/?pg=blog&amp;amp;plcmt=body-txt"&gt;开放堆栈&lt;/a&gt;。使用 Grafana Cloud 监控您的开源云基础设施。此集成包括九个警报和五个预构建的仪表板，用于监控和可视化 OpenStack 指标和日志，包括指定用于计算、网络和存储的仪表板。&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/solutions/influxdb/monitor/?pg=blog&amp;amp;plcmt=body-txt"&gt;流入数据库&lt;/a&gt;。监控和可视化这个开源时间序列数据库系统的指标和日志，通常用于 DevOps 和基础设施监控、物联网应用程序、实时分析等。此集成包括六个警报和三个预构建的仪表板来监控您的集群。&lt;/li&gt;&lt;li&gt; &lt;a href="https://grafana.com/solutions/microsoft-sql-server/monitor/?pg=blog&amp;amp;plcmt=body-txt"&gt;SQL 服务器。&lt;/a&gt;我们扩展了您验证 Microsoft SQL Server 集成凭据的方式。除了对 SQL Server 凭据的现有支持之外，我们现在还支持&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-infrastructure/integrations/integration-reference/integration-mssql/?pg=blog&amp;amp;plcmt=body-txt#post-install-configuration-for-the-microsoft-sql-server-integration"&gt;Windows 凭据身份验证&lt;/a&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;查看&lt;a href="https://grafana.com/solutions/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud 解决方案的完整列表&lt;/a&gt;，其中包括&lt;a href="https://grafana.com/solutions/kubernetes/?pg=blog&amp;amp;plcmt=body-txt"&gt;Kubernetes 监控&lt;/a&gt;、 &lt;a href="https://grafana.com/solutions/linux-node/monitor/?pg=blog&amp;amp;plcmt=body-txt"&gt;Linux&lt;/a&gt; 、 &lt;a href="https://grafana.com/solutions/mongodb/monitor/?pg=blog&amp;amp;plcmt=body-txt"&gt;MongoDB&lt;/a&gt;等。&lt;/p&gt;&lt;blockquote&gt;&lt;h2 id="angularjs-deprecation-in-grafana-how-to-prepare"&gt; Grafana 中的 AngularJS 弃用：如何准备&lt;/h2&gt;&lt;p&gt;Grafana 中的 AngularJS 支持在 Grafana 9 中已弃用，并且将在 5 月份发布的 Grafana 11 中默认关闭。发生这种情况时，任何依赖于 AngularJS 的插件都不会加载，并且基于 Angular 的仪表板面板也不会显示数据。&lt;/p&gt;&lt;p&gt;为了帮助实现这一转变，Grafana 现在会在任何依赖于 AngularJS 插件的仪表板中显示警告横幅。警告图标也会出现在面板插件或底层数据源插件具有 AngularJS 依赖项的任何面板中。&lt;/p&gt;&lt;p&gt;这补充了管理菜单下插件页面上已有的警告。&lt;/p&gt;&lt;p&gt;我们还开发了一个开源工具来&lt;a href="https://github.com/grafana/detect-angular-dashboards" rel="noopener noreferrer" target="_blank"&gt;检测角度仪表板&lt;/a&gt;。它可以针对任何 Grafana 实例运行，生成一份报告，列出所有具有 AngularJS 插件依赖项的仪表板，以及正在使用的插件。该工具还可以检测具有 AngularJS 依赖项的&lt;a href="https://grafana.com/legal/plugins/?pg=blog&amp;amp;plcmt=body-txt"&gt;私有插件&lt;/a&gt;；但是，此特殊功能仅适用于 Grafana 10.1 或更高版本。&lt;/p&gt;&lt;p&gt;为了避免 Grafana 仪表板出现任何中断，我们鼓励您迁移到 Grafana 或&lt;a href="https://grafana.com/grafana/plugins/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 插件目录&lt;/a&gt;中包含的基于 React 的&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/?pg=blog&amp;amp;plcmt=body-txt"&gt;可视化&lt;/a&gt;和&lt;a href="https://grafana.com/docs/grafana/latest/datasources/?pg=blog&amp;amp;plcmt=body-txt"&gt;数据源&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;要了解更多信息，请参阅&lt;a href="https://grafana.com/docs/grafana/latest/developers/angular_deprecation/?pg=blog&amp;amp;plcmt=body-txt"&gt;Angular 支持弃用&lt;/a&gt;文档，其中包括&lt;a href="https://grafana.com/docs/grafana/latest/developers/angular_deprecation/angular-plugins/?pg=blog&amp;amp;plcmt=body-txt"&gt;推荐的替代插件&lt;/a&gt;，阅读&lt;a href="https://grafana.com/blog/2024/03/11/removal-of-angularjs-support-in-grafana-what-you-need-to-know/"&gt;我们博客上的迁移指南&lt;/a&gt;，并观看我们&lt;a href="https://www.youtube.com/watch?v=XlEVs6g8dC8" rel="noopener noreferrer" target="_blank"&gt;关于弃用警告如何在 Grafana 中工作的视频演示&lt;/a&gt;。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Tue, 16 Apr 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/04/16/grafana-cloud-updates-explore-metrics-without-promql-native-opentelemetry-log-support-cool-panels-and-more/</guid></item></channel></rss>