<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Grafana Labs 上的 Grafana Labs 博客</title><link>https://grafana.com/blog/</link><description>Grafana Labs 上的 Grafana Labs 博客中的最​​新内容</description><lastBuildDate>Tue, 28 May 2024 16:04:26 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>【How to monitor steel alloys with Grafana: the story of a Golden Grot Awards winner】如何使用 Grafana 监控钢合金：金格罗特奖获奖者的故事</title><link>https://grafana.com/blog/2024/05/24/how-to-monitor-steel-alloys-with-grafana-the-story-of-a-golden-grot-awards-winner/</link><description>&lt;p&gt;每个出色的 Grafana 仪表板似乎都有这样的“顿悟”时刻——当用户从抽象地思考数据转变为将其视为有形且可立即采取行动的东西时。对于&lt;a href="https://www.theiascientific.com/" rel="noopener noreferrer" target="_blank"&gt;Theia Scientific&lt;/a&gt;联合创始人兼总裁 Christopher Field 来说，每次他向习惯于漫长的数据分析过程的科学研究人员展示仪表板时，都会发生这样的时刻。&lt;/p&gt;&lt;p&gt; “仪表板的一个伟大之处在于，我们展示了它以及我们构建的软件和我们开发的平台，它让科学家们看到了灯泡的亮起，”克里斯托弗说。 “当他们看到它的实际效果时，你确实可以看到它。”&lt;/p&gt;&lt;p&gt;我们的眼睛也亮了起来，这就是为什么 Christopher 成为今年&lt;a href="https://grafana.com/about/events/grafanacon/2024/golden-grot-awards/"&gt;Golden Grot 奖&lt;/a&gt;的获得者之一，我们的年度奖项旨在表彰个人和专业仪表板中的最佳人选。他在专业仪表板类别中的胜利证明了 Grafana 仪表板的所有非传统用例，因为他的公司使用它来监测由于下一代核裂变反应堆和核聚变暴露于辐射而引起的钢合金缺陷的增长活力。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;p&gt; “它验证了我们对这种定制和可视化以及使用带有显微镜的网络堆栈的原始概念，”他说。 “Grafana 正在通过可观察性来完成所有这一切，并在 IT 方面通过 DevOps 进行并监控您的 Web 应用程序，我们有点说，‘让我们为了科学的可观察性而这样做。这适用吗？它真的可以翻译并且有效吗？这证实了，是的，确实如此。”&lt;/p&gt;&lt;h2 id="accelerated-discovery-with-award-winning-grafana-dashboards"&gt;使用屡获殊荣的 Grafana 仪表板加速发现&lt;/h2&gt;&lt;p&gt;克里斯托弗 (Christopher) 与他的核科学家兄弟凯文 (Kevin) 共同创立了这家位于弗吉尼亚州阿灵顿的公司。他们的软件帮助研究人员将图像从房间大小的电子显微镜传输到时间序列数据库和机器学习模型，用于立即识别缺陷。该仪表板在内部共享，其他变体则由美国能源部 (DOE) 国家实验室和研究型大学使用。&lt;/p&gt;&lt;p&gt;借助 Grafana 展示的技术，科学家、工程师和研究人员可以节省高达 80% 的时间来确定合金的适用性。&lt;/p&gt;&lt;p&gt; “凯文花了十年的时间在黑点周围手工绘制方框，绘制了数千甚至数十万张图像，”克里斯托弗说。 “他再也不想这样做了，因此我们着手从根本上改变科学家和工程师研究这些材料和图像的工作流程。”&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/golden-grot/2024/dashboards/screenshot-goldengrot-christopher-field.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="克里斯托弗·菲尔德 (Christopher Field) 的获胜仪表板" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="克里斯托弗·菲尔德 (Christopher Field) 的获胜仪表板" src="https://grafana.com/media/golden-grot/2024/dashboards/screenshot-goldengrot-christopher-field.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;&lt;br /&gt;他们与一些组织合作，在几个小时内向合金发射集中辐射，以模拟该材料在整个世纪内的承受力。克里斯托弗说，几十年来，分析过程基本上没有变化，研究人员每分钟左右拍摄一次快照，然后再回去评估这些图像。&lt;/p&gt;&lt;p&gt; “我们现在可以通过仪表板做的是，他们可以进行分析，并在其仍在运行时确定它是否是一个好的材料，”克里斯托弗说。 “以前，他们可能需要一年半到两年的时间才能做出这一发现。当显微镜学家看到它或我们演示它时，这确实是“顿悟时刻”的部分，他们就像，“哦，我现在可以做到这一点吗？”我不用等吗？”&lt;/p&gt;&lt;p&gt;虽然 Grafana 的用例可能不典型，但它强调了可视化的价值以及可视化如何帮助团队专注于对他们的工作真正重要的事情。&lt;/p&gt;&lt;p&gt; “[画盒子]，这不是科学，这不是没有得到你的答案，”克里斯托弗说。 “因此，让我们将其自动化并解决掉它，并更快地到达发现点。让我们更快地找到答案。如果我们能在收购时做到这一点，那就更好了，对吧？”&lt;/p&gt;&lt;h2 id="what-makes-a-great-dashboard"&gt;是什么造就了一个出色的仪表板？&lt;/h2&gt;&lt;p&gt;仪表板的功能性和灵活性也给评委们留下了深刻的印象。&lt;/p&gt;&lt;p&gt; “它不仅非常有用，因为它显着加快了发现和审查核反应堆所用钢合金缺陷变化的过程，而且还更进一步。它使用专为这种情况设计的定制交互式面板，这为科学家和工程师提供了对图像集进行深入分析的机会，”一位评委说道。“它展示了交互式仪表板如何培养好奇心和趣味性，有助于改进系统。”&lt;/p&gt;&lt;p&gt;至于 Christopher 会给其他开始创建第一个 Grafana 仪表板的人提供什么建议，他建议向社区寻求支持，从小事做起，不要害怕第一次出错。&lt;/p&gt;&lt;p&gt; “失败没关系，只要继续尝试，”他说。 “如果它没有按照您想要的方式工作，请不要害怕，也不要认为您将拥有一个仪表板来统治所有这些；尝试一些不同的方法，看看会发生什么。”&lt;/p&gt;</description><pubDate>Fri, 24 May 2024 09:25:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/24/how-to-monitor-steel-alloys-with-grafana-the-story-of-a-golden-grot-awards-winner/</guid></item><item><title>【Serverless observability: How to monitor Google Cloud Run with OpenTelemetry and Grafana Cloud】无服务器可观测性：如何使用 OpenTelemetry 和 Grafana Cloud 监控 Google Cloud Run</title><link>https://grafana.com/blog/2024/05/23/serverless-observability-how-to-monitor-google-cloud-run-with-opentelemetry-and-grafana-cloud/</link><description>&lt;p&gt;OpenTelemetry 已成为收集遥测数据（包括跟踪、指标和日志）的首选开源解决方案。该项目的特别独特之处在于它专注于摆脱对专有代码的依赖，为用户提供更好的控制和灵活性。&lt;/p&gt;&lt;p&gt;作为 Grafana Labs 的高级解决方案工程师，我花了很多时间探索 OpenTelemetry，包括业余时间。作为我之前关于使用 OpenTelemetry 获取 AWS Lambda 跟踪&lt;a href="https://grafana.com/blog/2023/10/11/send-lambda-traces-to-grafana-cloud-with-opentelemetry/"&gt;的博客文章&lt;/a&gt;的后续内容，我对将 OTel 应用到其他无服务器解决方案感到好奇。&lt;/p&gt;&lt;p&gt;无服务器平台具有许多优势。它们允许您只需为您使用的资源付费，并且它们会根据工作负载需求自动扩展。此外，无服务器模型无需管理任何底层基础设施，这意味着开发人员有更多时间专注于应用程序开发和部署。&lt;/p&gt;&lt;p&gt;然而，由于其瞬态性，无服务器解决方案有时在可观察性方面可能是一个挑战。无服务器作业被设计为短暂的，这意味着必须立即导出这些实例中生成的遥测数据。这就是 OpenTelemetry 的用武之地，它提供了一种基于推送的方法，使用&lt;a href="https://opentelemetry.io/docs/specs/otel/protocol/" rel="noopener noreferrer" target="_blank"&gt;OpenTelemetry 协议 (OTLP)&lt;/a&gt;摄取遥测数据。&lt;/p&gt;&lt;p&gt;在这篇文章中，我将演示如何使用 OpenTelementry 收集&lt;a href="https://cloud.google.com/run/docs" rel="noopener noreferrer" target="_blank"&gt;Google Cloud Run&lt;/a&gt;的遥测数据，Google Cloud Run 是 Google Cloud Platform (GCP) 中的无服务器解决方案。我们将探索如何将 OpenTelemetry 的自动检测与 Node.js 应用程序结合使用，以高效地从 Cloud Run 服务导出遥测数据，并使用&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability//?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud 中的应用程序可观察性&lt;/a&gt;对其进行分析。&lt;/p&gt;&lt;p&gt;&lt;em&gt;注意：您可以在&lt;a href="https://github.com/kadjoudi/otel-cloud-run-grafana-o11y/" rel="noopener noreferrer" target="_blank"&gt;GitHub&lt;/a&gt;上找到本博客中使用的完整源代码。&lt;/em&gt;&lt;/p&gt;&lt;h2 id="first-some-background"&gt;首先，一些背景&lt;/h2&gt;&lt;p&gt;Google Cloud Run 是一个完全托管的容器运行时，可以自动扩展容器中的代码，从零到处理传入请求所需的多个实例。&lt;/p&gt;&lt;p&gt;谷歌最近更新了其 Cloud Run 架构，引入了&lt;a href="https://cloud.google.com/blog/products/serverless/cloud-run-now-supports-multi-container-deployments" rel="noopener noreferrer" target="_blank"&gt;多容器或 sidecar 的概念。&lt;/a&gt;此前，一项 Cloud Run 服务只能运行一个容器。现在，边车容器可以与主（入口）容器一起启动。 &lt;a href="https://cloud.google.com/blog/products/serverless/cloud-run-now-supports-multi-container-deployments" rel="noopener noreferrer" target="_blank"&gt;据谷歌称&lt;/a&gt;，这一变化旨在解决各种用例，包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;运行应用程序监视、日志记录和跟踪（实际上，总体上启用可观察性）&lt;/li&gt;&lt;li&gt;使用 Nginx、Envoy 或 Apache2 作为应用程序容器前面的代理&lt;/li&gt;&lt;li&gt;添加身份验证和授权过滤器&lt;/li&gt;&lt;li&gt;运行出站连接代理&lt;/li&gt;&lt;/ul&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt;&lt;a class="lightbox-link captioned" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_sidecar_architecture_resized2.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="A diagram showing the Google Cloud Run sidecar architecture." class="lazyload mb-0" title="*图片来源：&amp;lt;https://cloud.google.com/blog/products/serverless/cloud-run-now-supports-multi-container-deployments&amp;gt;*" /&gt; &lt;noscript&gt;&lt;img alt="A diagram showing the Google Cloud Run sidecar architecture." src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_sidecar_architecture_resized2.png" title="*图片来源：&amp;lt;https://cloud.google.com/blog/products/serverless/cloud-run-now-supports-multi-container-deployments&amp;gt;*" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;figcaption class="w-100p caption text-gray-13 "&gt;&lt;em&gt;图片来源： &lt;a href="https://cloud.google.com/blog/products/serverless/cloud-run-now-supports-multi-container-deployments" rel="noopener noreferrer" target="_blank"&gt;https://cloud.google.com/blog/products/serverless/cloud-run-now-supports-multi-container-deployments&lt;/a&gt;&lt;/em&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;通过 sidecar 容器，我们可以部署&lt;a href="https://opentelemetry.io/docs/collector/" rel="noopener noreferrer" target="_blank"&gt;OTel Collector&lt;/a&gt;并捕获 Cloud Run 服务生成的遥测数据。&lt;/p&gt;&lt;p&gt;能够收集遥测数据只是难题的一小部分；我们还需要一个可以存储数据并从中获取见解的后端。这就是&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/"&gt;Grafana 云应用程序可观察性&lt;/a&gt;发挥作用的地方。&lt;/p&gt;&lt;p&gt;应用程序可观察性是一种开箱即用的可观察性解决方案，旨在使用 OpenTelemetry 语义约定和 Prometheus 数据模型最大限度地减少现代应用程序（如无服务器）的平均修复时间 (MTTR)。&lt;/p&gt;&lt;p&gt;应用程序可观察性帮助用户：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;数据收集&lt;/strong&gt;：依靠开放标准和 OpenTelemetry 的无锁定仪器来收集指标、跟踪和日志。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;可视化&lt;/strong&gt;：利用预构建的仪表板和工作流程，包括服务清单、服务概述和服务地图，更轻松地探索指标、日志和跟踪。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;异常检测&lt;/strong&gt;：使用预先配置的仪表板来检测服务和应用程序中的异常情况。&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="prepare-the-nodejs-application"&gt;准备 Node.js 应用程序&lt;/h2&gt;&lt;p&gt;自动检测的优点在于它能够检测任何应用程序（检查语言的&lt;a href="https://opentelemetry.io/docs/concepts/instrumentation/zero-code/" rel="noopener noreferrer" target="_blank"&gt;自动检测支持&lt;/a&gt;）并从各种库和框架捕获遥测数据，而无需更改任何代码。&lt;/p&gt;&lt;p&gt;我们在本博客中使用的 Node.js 应用程序基于&lt;a href="https://opentelemetry.io/docs/languages/js/getting-started/nodejs/" rel="noopener noreferrer" target="_blank"&gt;OpenTelemetry Node.js 入门示例，&lt;/a&gt;并进行了一些修改。它由两个服务组成：服务 A 和服务 B。服务 A 将请求定向到在端口 8080 上运行的服务 B。服务 B 使用一条简单的消息响应端口 5050 上的请求： &lt;em&gt;“GRAFANA APPLICATION O11Y IS AWESOME !!!!”&lt;/em&gt; 。此配置旨在展示两个服务之间的通信以及 OTel 如何捕获此交互。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_meta.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示 OTel、GCP 和 Grafana Cloud 配置的图表。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示 OTel、GCP 和 Grafana Cloud 配置的图表。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_meta.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="set-up-the-cloud-run-service"&gt;设置 Cloud Run 服务&lt;/h2&gt;&lt;p&gt;有大量资源详细介绍了设置 Cloud Run 所需的先决条件和步骤。出于本博客的目的，我假设您已经完成了这些，但如果没有，您可以按照本&lt;a href="https://cloud.google.com/run/docs/tutorials/custom-metrics-opentelemetry-sidecar" rel="noopener noreferrer" target="_blank"&gt;教程&lt;/a&gt;中概述的步骤进行操作。&lt;/p&gt;&lt;p&gt;由于 Cloud Run 在容器上运行，我们需要创建一个&lt;a href="https://cloud.google.com/artifact-registry/docs/docker/store-docker-container-images" rel="noopener noreferrer" target="_blank"&gt;ArtifactRegistryDocker&lt;/a&gt;存储库来托管我们的应用程序服务映像。&lt;/p&gt;&lt;p&gt;让我们在&lt;code&gt;europe-west9&lt;/code&gt;区域的&lt;code&gt;blog-otel-grafana-o11y&lt;/code&gt;项目中创建&lt;code&gt;otel-grafana-o11y&lt;/code&gt;存储库（不过，您可以选择您选择的区域）。首先，确保启用 ArtifactRegistry API。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_artifact_registry_resized2.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="工件注册表的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="工件注册表的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_artifact_registry_resized2.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;然后，从控制台运行以下命令。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;gcloud config set project blog-grafana-o11y-otel gcloud config set run/region europe-west9 gcloud artifacts repositories create grafana-o11y-otel \ --repository-format=docker \ --location=europe-west9 \ --project=blog-grafana-o11y-otel&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;以下是 GCP 控制台的输出。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_GCPoutput_resized2.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="GCP 输出的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="GCP 输出的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_GCPoutput_resized2.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="configure-auto-instrumentation-for-our-nodejs-services"&gt;为我们的 Node.js 服务配置自动检测&lt;/h2&gt;&lt;p&gt;现在 Cloud Run 服务已配置完毕，是时候关注我们的 Node.js 应用程序了。让我们检查一下两个服务的代码。&lt;/p&gt;&lt;p&gt; &lt;strong&gt;1. 服务A&lt;/strong&gt;&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;const express = require(&amp;#39;express&amp;#39;); // Import the Express framework const app = express(); // Create an Express application instance const axios = require(&amp;quot;axios&amp;quot;); // Import the axios library for making HTTP requests // Define a route for handling GET requests to the root URL (&amp;#39;/&amp;#39;) app.get(&amp;#39;/&amp;#39;, async (req, res) =&amp;gt; { // Send a GET request to Service B let response = await axios.get(&amp;quot;http://localhost:5050&amp;quot;); // Send a response to the client, combining the response data from Service B with a custom message res.send(&amp;quot;Service B says: &amp;quot; + response.data); }); // Define the port to listen on, using the value of the PORT environment variable if it&amp;#39;s set, otherwise default to port 8080 const port = parseInt(process.env.PORT) || 8080; // Start the Express server and make it listen on the specified port app.listen(port, () =&amp;gt; { console.log(`Service A listening on port ${port}`); // Log a message to indicate that the server is running });&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt; &lt;strong&gt;2. 服务B&lt;/strong&gt;&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;const express = require(&amp;#39;express&amp;#39;); // Import the Express framework const app = express(); // Create an Express application instance // Define a route for handling GET requests to the root URL (&amp;#39;/&amp;#39;) app.get(&amp;#39;/&amp;#39;, async (req, res) =&amp;gt; { res.send(&amp;quot;GRAFANA APPLICATION O11 IS AWESOME !!!!&amp;quot;); // Send a response with the message &amp;quot;GRAFANA APPLICATION O11 IS AWESOME&amp;quot; }); // Define the port to listen on, using the value of the PORT environment variable if it&amp;#39;s set, otherwise default to port 5050 const port = parseInt(process.env.PORT || 5050); // Start the Express server and make it listen on the specified port app.listen(port, () =&amp;gt; { console.log(`Service B listening on port ${port}`); // Log a message to indicate that the server is running });&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;现在，让我们根据&lt;a href="https://opentelemetry.io/docs/languages/js/automatic/" rel="noopener noreferrer" target="_blank"&gt;OpenTelemetry JavaScript 文档&lt;/a&gt;和使用 npm &lt;a href="https://www.npmjs.com/package/@opentelemetry/auto-instrumentations-node" rel="noopener noreferrer" target="_blank"&gt;的 @open-telemetry/auto-instrumentions-node 文档，&lt;/a&gt;使用 Node.js 配置自动检测。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;npm install --save @opentelemetry/api npm install --save @opentelemetry/auto-instrumentations-node&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;要使用自动检测来运行 Node.js 应用程序，请运行以下命令。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;node --require @opentelemetry/auto-instrumentations-node/register serviceA.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;对于我们的两个服务，我们需要创建一个&lt;code&gt;package.json&lt;/code&gt;文件，其中包含要运行的所有必需的依赖项和命令。然后，该 JSON 包将在 Docker 映像构建过程中使用。&lt;/p&gt;&lt;p&gt;以下是服务 A 的&lt;code&gt;package.json&lt;/code&gt;文件示例，我们在其中指定了&lt;code&gt;express&lt;/code&gt;和&lt;code&gt;axios&lt;/code&gt;库，以及 OpenTelemetry 自动检测库。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;{ &amp;quot;name&amp;quot;: &amp;quot;ServiceA&amp;quot;, &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;serviceA running in Cloud Run&amp;quot;, &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;, &amp;quot;scripts&amp;quot;: { &amp;quot;start&amp;quot;: &amp;quot;node --require @opentelemetry/auto-instrumentations-node/register serviceA.js&amp;quot; }, &amp;quot;dependencies&amp;quot;: { &amp;quot;@opentelemetry/api&amp;quot;: &amp;quot;^1.8.0&amp;quot;, &amp;quot;@opentelemetry/auto-instrumentations-node&amp;quot;: &amp;quot;^0.43.0&amp;quot;, &amp;quot;axios&amp;quot;: &amp;quot;^1.6.2&amp;quot;, &amp;quot;express&amp;quot;: &amp;quot;^4.18.2&amp;quot; } }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;现在，让我们为服务 A 创建&lt;a href="https://docs.docker.com/reference/dockerfile/" rel="noopener noreferrer" target="_blank"&gt;Dockerfile&lt;/a&gt; 。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;FROM node:20.12.0-slim WORKDIR /usr/src/app COPY package*.json ./ RUN npm install # Copy local code to the container image. COPY . . # Run the web service on container startup. ENV PORT=8080 CMD [ &amp;quot;npm&amp;quot;, &amp;quot;start&amp;quot; ]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt; ...并将其推送到我们的 Artifact 注册表。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;gcloud builds submit --tag europe-west9-docker.pkg.dev/blog-grafana-o11y-otel/grafana-o11y-otel/servicea:latest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;对服务 B 重复相同的过程。&lt;/p&gt;&lt;p&gt;从Cloud UI中可以看到我们的Service A和Service B容器已经成功推送。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_containers_successfully_pushed.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="GCP UI 的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="GCP UI 的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_containers_successfully_pushed.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="configure-the-opentelemetry-collector-to-connect-to-application-observability"&gt;配置 OpenTelemetry Collector 以连接到应用程序可观察性&lt;/h2&gt;&lt;p&gt;Grafana Cloud Application Observability 与 OpenTelemetry Collector 兼容，并且本身接受 OTLP。要将 OpenTelemetry Collector 设置为发送到 Grafana Cloud 的数据收集器：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;创建和/或登录 Grafana Cloud 帐户。如果您还没有 Grafana Cloud 帐户，您可以立即创建一个&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;免费的 Grafana Cloud&lt;/a&gt;帐户。&lt;/li&gt;&lt;li&gt; &lt;a href="https://opentelemetry.io/docs/collector/installation/" rel="noopener noreferrer" target="_blank"&gt;安装 OpenTelemetry Collector&lt;/a&gt; 。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;注意：OpenTelemetry Collector 有两个发行版：core 和 contrib。应用程序可观察性需要&lt;strong&gt;contrib 分发&lt;/strong&gt;。&lt;/em&gt;&lt;/p&gt;&lt;h3 id="1-create-the-otel-collector-configuration-file"&gt; 1.创建OTel Collector配置文件&lt;/h3&gt;&lt;p&gt;OpenTelemetry Collector 的运行需要&lt;strong&gt;config.yaml&lt;/strong&gt;配置文件。好消息是，Application Observability 包含一个引导配置菜单，可帮助您生成 OTel Collector 配置。要获取此配置，请从列表中选择&lt;strong&gt;添加服务 → OpenTelemetry Collector&lt;/strong&gt; 。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_otel_collector_config.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="OTel Collector 配置详细信息的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="OTel Collector 配置详细信息的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_otel_collector_config.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; OpenTelemetry Collector 集成将生成 OpenTelemetry Collector 配置以与 Grafana Cloud Application Observability 一起使用。&lt;/p&gt;&lt;p&gt;为了确保收集器与 Cloud Run 服务无缝协作，我们可以在扩展部分包含&lt;code&gt;health_check&lt;/code&gt;选项。 （有关更多详细信息，请参阅下面的“部署 Cloud Run 服务”部分。）&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;extensions: health_check: ... service: extensions: [health_check,basicauth/grafana_cloud_tempo, basicauth/grafana_cloud_prometheus, basicauth/grafana_cloud_loki]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;您可以在&lt;a href="https://github.com/kadjoudi/otel-cloud-run-grafana-o11y/tree/main/OTelCollector" rel="noopener noreferrer" target="_blank"&gt;GitHub&lt;/a&gt;存储库中找到完整的配置文件。您还可以参考&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/setup/collector/opentelemetry-collector/#configuration"&gt;Grafana Cloud 文档&lt;/a&gt;以获取更多信息。&lt;/p&gt;&lt;h3 id="2-create-the-otel-collector-dockerfile"&gt; 2. 创建 OTel 收集器 Dockerfile&lt;/h3&gt;&lt;p&gt;以下是将之前的 OTel Collector 配置捆绑到 contrib 收集器映像中的 Dockerfile 配置：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;FROM otel/opentelemetry-collector-contrib:0.94.0 COPY collector-config.yaml /etc/otelcol-contrib/config.yaml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="3-push-the-otel-collector"&gt; 3. 推送OTel收集器&lt;/h3&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt;&lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;gcloud builds submit --tag europe-west9-docker.pkg.dev/blog-grafana-o11y-otel/grafana-o11y-otel/otelcollector:latest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h2 id="deploy-the-cloud-run-service"&gt;部署 Cloud Run 服务&lt;/h2&gt;&lt;p&gt;目前，我们将所有三个容器存储在我们的工件注册表中。现在，我们可以部署 Google Cloud Run 服务。我选择使用 YAML 方法使用&lt;a href="https://knative.dev/docs/" rel="noopener noreferrer" target="_blank"&gt;Knative&lt;/a&gt;配置我的 Cloud Run 服务。&lt;/p&gt;&lt;p&gt;在我们继续之前，有一件重要的事情需要提及：OTel Collector 使用基于推送的方法，因此当应用程序发送遥测数据时，它期望 OTel Collector 准备好接收和导出它。这意味着 OTel Collector 必须在应用程序启动之前启动，并且需要在应用程序关闭后停止。&lt;/p&gt;&lt;p&gt;幸运的是，Google 为 Cloud Run sidecar 添加了一个有用的功能： &lt;a href="https://cloud.google.com/run/docs/deploying#multicontainer-features" rel="noopener noreferrer" target="_blank"&gt;&lt;strong&gt;容器依赖&lt;/strong&gt;。&lt;/a&gt;这使我们能够控制容器启动和停止的顺序。我们可以确保 OTel Collector 在服务 A 和服务 B 之前启动，并在它们之后停止。这非常重要，这样我们就不会错过任何我们应该收集的数据。我们还需要使用&lt;a href="https://cloud.google.com/run/docs/configuring/healthchecks" rel="noopener noreferrer" target="_blank"&gt;启动运行状况检查探针&lt;/a&gt;来成功部署。&lt;/p&gt;&lt;p&gt;此外，正如&lt;a href="https://opentelemetry.io/docs/languages/js/automatic/" rel="noopener noreferrer" target="_blank"&gt;OTEL 文档&lt;/a&gt;中所指定的，我们将使用环境变量并在每个容器部分中传递配置值。&lt;em&gt;注意：目前环境变量配置仅&lt;a href="https://opentelemetry.io/docs/languages/js/automatic/" rel="noopener noreferrer" target="_blank"&gt;支持 Traces&lt;/a&gt; 。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;例如，我们将使用以下环境变量。&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;环境变量&lt;/th&gt;&lt;th&gt;服务容器&lt;/th&gt;&lt;th&gt;服务B容器&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;OTEL_SERVICE_NAME&lt;/td&gt;&lt;td&gt;服务A&lt;/td&gt;&lt;td&gt;服务B&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; OTEL_LOG_LEVEL&lt;/td&gt;&lt;td&gt;信息&lt;/td&gt;&lt;td&gt;信息&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;OTEL_EXPORTER_OTLP_PROTOCOL&lt;/td&gt;&lt;td&gt; http/protobuf&lt;/td&gt;&lt;td&gt; http/protobuf&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;让我们回顾一下&lt;code&gt;service.yaml&lt;/code&gt;文件，我们在其中设置容器启动顺序并指示运行状况检查探针。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;apiVersion: serving.knative.dev/v1 kind: Service metadata: annotations: run.googleapis.com/launch-stage: BETA name: grafana-o11y-otel labels: cloud.googleapis.com/location: &amp;quot;europe-west9&amp;quot; spec: template: metadata: annotations: #The following line aims to set a container start order run.googleapis.com/container-dependencies: &amp;#39;{&amp;quot;servicea&amp;quot;:[&amp;quot;otelcollector&amp;quot;], &amp;quot;serviceb&amp;quot;:[&amp;quot;otelcollector&amp;quot;]}&amp;#39; spec: containers: - image: &amp;quot;europe-west9-docker.pkg.dev/blog-grafana-o11y-otel/grafana-o11y-otel/servicea:latest&amp;quot; name: servicea env: - name: OTEL_SERVICE_NAME value: &amp;quot;ServiceA&amp;quot; - name: OTEL_PROPAGATORS value: &amp;quot;tracecontext&amp;quot; - name: OTEL_LOG_LEVEL value: &amp;quot;info&amp;quot; - name: OTEL_EXPORTER_OTLP_PROTOCOL value: &amp;quot;http/protobuf&amp;quot; ports: - containerPort: 8080 - image: &amp;quot;europe-west9-docker.pkg.dev/blog-grafana-o11y-otel/grafana-o11y-otel/serviceb:latest&amp;quot; name: serviceb env: - name: PORT value: &amp;quot;5050&amp;quot; - name: OTEL_SERVICE_NAME value: &amp;quot;ServiceB&amp;quot; - name: OTEL_PROPAGATORS value: &amp;quot;tracecontext&amp;quot; - name: OTEL_LOG_LEVEL value: &amp;quot;info&amp;quot; - name: OTEL_EXPORTER_OTLP_PROTOCOL value: &amp;quot;http/protobuf&amp;quot; #The following lines define the health-check probe configuration - image: &amp;quot;europe-west9-docker.pkg.dev/blog-grafana-o11y-otel/grafana-o11y-otel/otelcollector:latest&amp;quot; name: otelcollector startupProbe: httpGet: path: / port: 13133 resources: limits: cpu: 1000m memory: 512Mi&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;让我们部署 Cloud Run 服务。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt; gcloud run services replace service.yaml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;我们应该有以下输入，其中&lt;code&gt;URL&lt;/code&gt;是要调用的 URL。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;Applying new configuration to Cloud Run service [grafana-o11y-otel] in project [blog-grafana-o11y-otel] region [europe-west9] ✓ Deploying... Done. ✓ Creating Revision... ✓ Routing traffic... Done. New configuration has been applied to service [grafana-o11y-otel]. URL: https://grafana-o11y-otel-xscqzsykua-od.a.run.app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;部署后，您可以通过运行以下命令来获取并保存服务 URL，其中&lt;code&gt;$SERVICE_NAME&lt;/code&gt;是 YAML 文件中服务的名称 ( &lt;code&gt;grafana-o11y-otel&lt;/code&gt; )， &lt;code&gt;$REGION&lt;/code&gt;是我们之前设置的区域 ( &lt;code&gt;europe-west9&lt;/code&gt; ）：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format &amp;#39;value(status.url)&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;使用 Cloud Run 控制台，我们可以确认我们的 Cloud Run 服务以及所有三个容器已成功部署。此外，我们可以观察到环境变量已更新。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_cloudconsole.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="GCP 控制台的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="GCP 控制台的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_cloudconsole.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;您现在可以发出一些请求来生成跟踪数据。让我们使用循环每五秒发出一个请求（完成后不要忘记停止脚本）：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;while true; do curl &amp;quot;https://grafana-o11y-otel-xscqzsykua-od.a.run.app&amp;quot;; sleep 5; done;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h2 id="analyze-data-with-grafana-cloud-application-observability"&gt;使用 Grafana Cloud 应用程序可观察性分析数据&lt;/h2&gt;&lt;p&gt;现在一切都按预期运行，让我们在 Grafana Cloud 中打开应用程序可观察性：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;导航到堆栈：https://&amp;lt;your-stack-name.&amp;gt;grafana.net&lt;/li&gt;&lt;li&gt;展开 Grafana 徽标下方的左上方菜单&lt;/li&gt;&lt;li&gt;点击&lt;strong&gt;申请&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;应用程序可观察性依赖于被引入 Grafana Cloud 的跟踪生成的指标。这些指标用于显示应用程序可观测性中的速率错误持续时间 (RED) 方法信息。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_get_started.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Cloud UI 的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana Cloud UI 的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_get_started.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;要完成设置，请单击&lt;strong&gt;“启用应用程序可观察性”&lt;/strong&gt; 。&lt;/p&gt;&lt;p&gt;&lt;em&gt;注意：生成指标和显示图表可能最多需要五分钟。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;服务清单&lt;/strong&gt;页面列出了向 Grafana Cloud 发送分布式跟踪的所有服务。您可以看到我们能够捕获服务 A 和服务 B。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_services_inventory.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="服务清单页面的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="服务清单页面的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_services_inventory.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;我们还可以检查&lt;strong&gt;“服务地图”&lt;/strong&gt;页面，以获取高级别相关服务和运行状况指标的图表。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_service_map_page.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="服务地图页面的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="服务地图页面的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_service_map_page.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;让我们导航到每项服务（服务 A 和服务 B）的&lt;strong&gt;服务概述&lt;/strong&gt;页面。此页面提供了健康状况概述以及 RED 指标：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;服务本身&lt;/li&gt;&lt;li&gt;相关上下游服务&lt;/li&gt;&lt;li&gt;对服务执行的操作&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;以下是服务 A 的服务概述页面：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_service_overview_serviceA.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="服务 A 的服务概述页面的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="服务 A 的服务概述页面的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_service_overview_serviceA.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;这是服务 B 的同一页面：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_service_overview_serviceB.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="服务 B 的服务概述页面的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="服务 B 的服务概述页面的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_service_overview_serviceB.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;跟踪&lt;/strong&gt;视图提供与我们的服务相关的所有跟踪的视图。默认情况下，应用程序可观察性按服务和服务命名空间过滤跟踪。有两种自定义搜索查询的方法：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; TraceQL 使用 Trace 查询语言&lt;/li&gt;&lt;li&gt;单击&lt;strong&gt;“搜索”&lt;/strong&gt;以使用可视化 TraceQL 查询生成器&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这是服务 A 的跟踪视图：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_traces_view_serviceA.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="服务 A 的跟踪视图的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="服务 A 的跟踪视图的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_traces_view_serviceA.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;这是服务 B 的 Traces 视图：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_traces_view_serviceB.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="服务 B 的跟踪视图的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="服务 B 的跟踪视图的屏幕截图。" src="https://grafana.com/media/blog/google-cloud-run-otel-app-olly/google_cloud_run_app_olly_traces_view_serviceB.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="let-us-know-what-you-think"&gt;让我们知道您的想法！&lt;/h2&gt;&lt;p&gt;总之，OpenTelemetry 使自动检测 Node.js 应用程序变得非常简单。这涉及安装必要的 Node.js 包以进行自动检测，并设置 OTel Collector 以收集遥测数据并将其发送到 Grafana Cloud。&lt;/p&gt;&lt;p&gt;通过结合 OpenTelemetry 的数据收集功能和 Grafana Cloud 应用程序可观测性的可视化和分析功能，组织可以实现全面的可观测性。这使团队能够主动识别和解决问题，并优化其性能和可靠性——即使在可见性可能成为挑战的无服务器环境中也是如此。&lt;/p&gt;&lt;p&gt;我们致力于持续改进，您的反馈在此过程中非常宝贵。如果您使用过 OTel 和 Grafana Cloud 进行无服务器观测，请与我们分享您的想法和经验。您可以在 #opentelemetry 频道的&lt;a href="https://slack.grafana.com/" rel="noopener noreferrer" target="_blank"&gt;Grafana Labs 社区 Slack&lt;/a&gt;中找到我们的团队。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪和仪表板的最简单方法。我们最近在慷慨的永久免费套餐中添加了新功能，包括允许三个用户访问所有企业插件。另外，每个用例都有相应的计划。 &lt;a href="https://grafana.com/auth/sign-up/create-user?pg=blog-application-observability-ga&amp;amp;plcmt=in-txt"&gt;立即注册免费帐户！&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description><pubDate>Thu, 23 May 2024 12:47:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/23/serverless-observability-how-to-monitor-google-cloud-run-with-opentelemetry-and-grafana-cloud/</guid></item><item><title>【How to visualize Amazon CloudWatch metrics in Grafana】如何在 Grafana 中可视化 Amazon CloudWatch 指标</title><link>https://grafana.com/blog/2024/05/22/how-to-visualize-amazon-cloudwatch-metrics-in-grafana/</link><description>&lt;p&gt;在广阔的可观察性领域中，您有多种选择来可视化 Amazon CloudWatch 收集的指标。正因为如此，您经常需要做出很多决定——关于成本、配置、灵活性等等。在 Grafana Labs，我们坚持“大帐篷”理念，这意味着我们不会强迫您做出决定，甚至不会告诉您必须将 CloudWatch 指标引入 Grafana Cloud。&lt;/p&gt;&lt;p&gt;这种灵活性很棒，但它常常让我们的用户想知道哪个选项适合他们。因此，我们撰写这篇博文来帮助您了解在 Grafana 中可视化 AWS 指标的四个主要选项：&lt;/p&gt;&lt;ol&gt;&lt;li&gt; Grafana Labs &lt;a href="https://grafana.com/docs/grafana/latest/datasources/aws-cloudwatch/?pg=blog&amp;amp;plcmt=body-txt"&gt;Amazon CloudWatch 数据源&lt;/a&gt;&lt;/li&gt;&lt;li&gt;使用&lt;a href="https://grafana.com/solutions/cloud-monitoring-aws/?pg=blog&amp;amp;plcmt=body-txt"&gt;AWS Observability 应用程序&lt;/a&gt;的&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-infrastructure/aws/cloudwatch-metrics/?pg=blog&amp;amp;plcmt=body-txt"&gt;AWS Observability CloudWatch 指标&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/docs/alloy/latest/reference/components/prometheus.exporter.cloudwatch/?pg=blog&amp;amp;plcmt=body-txt"&gt;使用 CloudWatch 导出器运行 Grafana Alloy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;运行&lt;a href="https://github.com/nerdswords/yet-another-cloudwatch-exporter" rel="noopener noreferrer" target="_blank"&gt;Yet-another-cloudwatch-exporter&lt;/a&gt; (YACE)，这是一个用于 CloudWatch 的开源 Prometheus 导出器&lt;/li&gt;&lt;/ol&gt;&lt;h2 id="visualizing-the-different-deployment-models"&gt;可视化不同的部署模型&lt;/h2&gt;&lt;p&gt;在我们深入比较之前，让我们看一下每个选项的标准部署，以便您可以很好地直观地了解每个选项的作用。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/cloudwatch-metrics-options/cloudwatch-data-source.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Amazon CloudWatch 数据源模型" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Amazon CloudWatch 数据源模型" src="https://grafana.com/media/blog/cloudwatch-metrics-options/cloudwatch-data-source.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/cloudwatch-metrics-options/AWS-observability-app.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="AWS 可观测性应用程序模型" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="AWS 可观测性应用程序模型" src="https://grafana.com/media/blog/cloudwatch-metrics-options/AWS-observability-app.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;如果您对 Grafana Labs 如何将 Alloy 作为 AWS Observability 应用程序的一部分进行操作感兴趣，请在接下来的几周内关注即将发布的博客文章，该文章将深入介绍这一点。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/cloudwatch-metrics-options/Alloy-cloudwatch.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana合金模型" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana合金模型" src="https://grafana.com/media/blog/cloudwatch-metrics-options/Alloy-cloudwatch.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/cloudwatch-metrics-options/YACE-approach.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="YACE模型" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="YACE模型" src="https://grafana.com/media/blog/cloudwatch-metrics-options/YACE-approach.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="which-approach-is-right-for-you"&gt;哪种方法适合您？&lt;/h2&gt;&lt;p&gt;在本文的其余部分，我们将重点讨论各种方法之间的相似点和差异。确切的配合将取决于您的系统和团队的需求，并且需要考虑许多因素。但在我们讨论所有这些之前，我们想指出一个事实，即开始观察您的系统的最简单方法AWS环境是Grafana Cloud。这是一个 TL;DR 决策树*，它应该可以帮助您指明正确的方向：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/cloudwatch-metrics-options/config-decision-tree.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="应如何为 AWS 决策树配置 Grafana Cloud" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="应如何为 AWS 决策树配置 Grafana Cloud" src="https://grafana.com/media/blog/cloudwatch-metrics-options/config-decision-tree.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; &lt;em&gt;*您可以在 Grafana Cloud 中使用 YACE 模型，但不建议这样做，因为我们将无法通过&lt;a href="https://grafana.com/docs/grafana-cloud/account-management/support/?pg=blog&amp;amp;plcmt=body-txt"&gt;标准支持票流程&lt;/a&gt;提供支持。&lt;/em&gt;&lt;/p&gt;&lt;h2 id="how-are-they-all-the-same"&gt;它们怎么都一样呢？&lt;/h2&gt;&lt;p&gt;此处概述的所有选项均使用 Amazon CloudWatch API（ &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html" rel="noopener noreferrer" target="_blank"&gt;ListMetrics&lt;/a&gt;和&lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html" rel="noopener noreferrer" target="_blank"&gt;GetMetricData&lt;/a&gt; ）使数据在 Grafana 中可用。这是一件好事，因为它确保所有选项都能够生成相同的数据。 （您还应该注意，调用这些 API 会在您的 AWS 账户上产生费用。）&lt;/p&gt;&lt;p&gt;此外，每个选项还提供对各种 CloudWatch 命名空间的支持，包括通过自定义命名空间支持&lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html" rel="noopener noreferrer" target="_blank"&gt;自定义指标&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;这里有一些您可能不知道的事情：除了 Amazon CloudWatch 数据源之外，此处列出的所有选项实际上只是不同包装器中的 YACE！我们非常重视“&lt;a href="https://grafana.com/oss/?pg=blog&amp;amp;plcmt=body-txt"&gt;开源是我们的 DNA&lt;/a&gt; ”这一理念，因此我们为改进 CloudWatch 指标解决方案所做的和继续做的所有工作都已融入 YACE。 &lt;a href="https://github.com/search?q=repo%3Anerdswords%2Fyet-another-cloudwatch-exporter&amp;#43;author%3Akgeckhart&amp;#43;author%3Acristiangreco&amp;#43;author%3Athepalbi&amp;#43;author%3Ajeschkies&amp;#43;author%3Aandriikushch&amp;#43;author%3Anikosmeds&amp;#43;author%3Atristanburgess&amp;amp;type=pullrequests" rel="noopener noreferrer" target="_blank"&gt;Grafana Labs 员工已发布 200 多个 PR&lt;/a&gt; ，主要功能包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://github.com/nerdswords/yet-another-cloudwatch-exporter/issues/821" rel="noopener noreferrer" target="_blank"&gt;用于将资源与 CloudWatch 指标匹配的改进算法&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/nerdswords/yet-another-cloudwatch-exporter/issues/921" rel="noopener noreferrer" target="_blank"&gt;AWS 开发工具包 v2 支持&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/nerdswords/yet-another-cloudwatch-exporter/pull/1040" rel="noopener noreferrer" target="_blank"&gt;AWS DDoS 保护支持&lt;/a&gt;和其他&lt;a href="https://github.com/nerdswords/yet-another-cloudwatch-exporter/pull/1222" rel="noopener noreferrer" target="_blank"&gt;CloudWatch 命名空间&lt;/a&gt;&lt;/li&gt;&lt;li&gt;大量&lt;a href="https://github.com/nerdswords/yet-another-cloudwatch-exporter/pull/1092" rel="noopener noreferrer" target="_blank"&gt;性能增强&lt;/a&gt;、 &lt;a href="https://github.com/nerdswords/yet-another-cloudwatch-exporter/pull/438" rel="noopener noreferrer" target="_blank"&gt;错误修复&lt;/a&gt;和&lt;a href="https://github.com/nerdswords/yet-another-cloudwatch-exporter/pull/1289" rel="noopener noreferrer" target="_blank"&gt;代码质量改进&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="how-are-they-different"&gt;它们有何不同？&lt;/h2&gt;&lt;p&gt;尽管有相似之处，但还是存在一些显着的差异，我们将在这里将其分为三个主要领域：存储、保真度和操作复杂性。&lt;/p&gt;&lt;h3 id="where-the-data-is-stored"&gt;数据存储位置&lt;/h3&gt;&lt;p&gt;第一个关键区别是 Amazon CloudWatch 数据源将数据保留在 AWS 中，并让您可以直接查询访问它。这是一种非常经济高效的解决方案，可在 Grafana 中实现 CloudWatch 数据的可视化。您根据查询数据的频率付费。由于它尝试镜像许多 Clo​​udWatch 功能，因此您可以访问&lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html" rel="noopener noreferrer" target="_blank"&gt;度量数学&lt;/a&gt;和&lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/query_with_cloudwatch-metrics-insights.html" rel="noopener noreferrer" target="_blank"&gt;Metrics Insight 查询&lt;/a&gt;等高级功能。&lt;/p&gt;&lt;p&gt;基于 YACE 的选项（AWS Observability 应用程序和 Grafana Alloy CloudWatch 导出器）均从 CloudWatch 中提取数据，将其转换为与 Prometheus 兼容的格式，并使其在集中式数据存储中可用。此方法侧重于从 CloudWatch 镜像原始数据，不允许使用度量数学或 Metrics Insights 查询等高级功能。&lt;/p&gt;&lt;p&gt;当然，这引出了一个问题：为什么要付费从 CloudWatch 中提取这些数据并将其存储在其他地方？这个模型的一个巨大卖点是，它使您能够利用 PromQL 的强大功能构建跨账户、跨区域和跨服务的仪表板、警报和查询。让我们看看查找两个账户和两个区域的 CPU 利用率的查询是什么样的，以及使用 PromQL 与 Amazon CloudWatch 数据源的比较。&lt;/p&gt;&lt;p&gt;首先，我们来看看如何使用 Amazon CloudWatch 数据源来查询 CloudWatch 中的数据。从下面 Grafana 中探索模式的屏幕截图中可以看出，您必须为每个账户设置一个 Amazon CloudWatch 数据源，并且使用手动构建器一次只能查询一个区域。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/cloudwatch-metrics-options/cloudwatch-explore.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="探索用户界面" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="探索用户界面" src="https://grafana.com/media/blog/cloudwatch-metrics-options/cloudwatch-explore.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;或者，使用 PromQL，您只需要使用过滤器运行这个非常基本的查询：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;aws_ec2_cpuutilization_maximum{account_id=~&amp;quot;974410390816|account2&amp;quot;, region=~&amp;quot;us-east-1|us-east-2&amp;quot;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="data-fidelity"&gt;数据保真度&lt;/h3&gt;&lt;p&gt;Amazon CloudWatch 数据源仅与 AWS 的 CloudWatch API 交互，因此，它只能为您提供 CloudWatch 中可用维度内的原始 CloudWatch 指标和统计数据。除非您牢记 EC2 实例 ID，否则这些信息本身通常不足以做出可行的决策。 （我知道我不知道！）&lt;/p&gt;&lt;p&gt;鉴于 CloudWatch 中这一难以填补的空白，基于 YACE 的选项包括一个称为“资源标签关联”的额外功能。此功能还需要调用 AWS 资源标记 API 并将这些标签与 CloudWatch 指标相关联。使用 CloudWatch 指标查询标签数据的功能使得在出现问题时更容易获得可操作的数据。让我们看看带有标签的 CPU 利用率查询是什么样子的：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;aws_ec2_cpuutilization_maximum{account_id=~&amp;quot;974410390816|account2&amp;quot;, region=~&amp;quot;us-east-1|us-east-2&amp;quot;} + on (name) group_left(tag_Application, tag_Name) aws_ec2_info&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;请注意，这利用了 PromQL 的&lt;code&gt;group_left&lt;/code&gt; ，它更高级一些。但如果您不是 Prometheus 专家，请不要担心：我们为您提供了 AWS Observability 应用程序，您可以在其中使用标签观察所有 EC2 和 RDS 资源 — 无需查询。查看 play.grafana.com 上的示例：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://play.grafana.org/a/grafana-aws-app/dashboard/ec2?var-datasource=grafanacloud-prom&amp;amp;var-allTagsMultipleOptions=tag_Application&amp;amp;var-metrics=aws_ec2_cpuutilization_average&amp;amp;var-metrics=aws_ec2_cpuutilization_maximum&amp;amp;var-metrics=aws_ec2_status_check_failed_sum" rel="noopener noreferrer" target="_blank"&gt;亚马逊EC2&lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href="https://play.grafana.org/a/grafana-aws-app/dashboard/rds?var-datasource=bdi6x8p7vm29sd&amp;amp;var-region=$__all&amp;amp;var-account=$__all&amp;amp;var-scrape_job=$__all" rel="noopener noreferrer" target="_blank"&gt;亚马逊RDS&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果您想完全避免&lt;code&gt;group_left&lt;/code&gt; ，基于 YACE 的选项（AWS Observability App 和 Grafana Alloy CloudWatch 导出器）有一个可用功能，允许您将&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-infrastructure/aws/cloudwatch-metrics/config-cw-metrics/?pg=blog&amp;amp;plcmt=body-txt#optionally-configure-resource-tag-use-1"&gt;标签添加到 CloudWatch 指标上&lt;/a&gt;，将查询转换回原始查询：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;aws_ec2_cpuutilization_maximum{account_id=~&amp;quot;974410390816|account2&amp;quot;, region=~&amp;quot;us-east-1|us-east-2&amp;quot;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;请随意在&lt;a href="https://play.grafana.org/explore?schemaVersion=1&amp;amp;panes=%7B%2244l%22:%7B%22datasource%22:%22grafanacloud-prom%22,%22queries%22:%5B%7B%22refId%22:%22A%22,%22expr%22:%22aws_ec2_cpuutilization_maximum%7Baccount_id%3D~%5C%22974410390816%7Caccount2%5C%22,%20region%3D~%5C%22us-east-1%7Cus-east-2%5C%22%7D%20%2B%20on%20%28name%29%20group_left%28tag_Application,%20tag_Name%29%20aws_ec2_info%22,%22range%22:true,%22instant%22:true,%22datasource%22:%7B%22type%22:%22prometheus%22,%22uid%22:%22grafanacloud-prom%22%7D,%22editorMode%22:%22code%22,%22legendFormat%22:%22__auto%22,%22hide%22:false%7D,%7B%22refId%22:%22B%22,%22expr%22:%22aws_ec2_cpuutilization_maximum%7Baccount_id%3D~%5C%22974410390816%7Caccount2%5C%22,%20region%3D~%5C%22us-east-1%7Cus-east-2%5C%22%7D%22,%22range%22:true,%22instant%22:true,%22datasource%22:%7B%22type%22:%22prometheus%22,%22uid%22:%22grafanacloud-prom%22%7D,%22editorMode%22:%22code%22,%22legendFormat%22:%22__auto%22,%22hide%22:true%7D%5D,%22range%22:%7B%22from%22:%22now-1h%22,%22to%22:%22now%22%7D%7D%7D&amp;amp;orgId=1" rel="noopener noreferrer" target="_blank"&gt;play.grafana.com&lt;/a&gt;上的 Explore 中尝试这两个查询版本&lt;/p&gt;&lt;h3 id="operational-complexity"&gt;操作复杂性&lt;/h3&gt;&lt;p&gt;有两个“我们可以为您运行”选项：Amazon CloudWatch 数据源和 AWS Observability 应用程序。但如果您想更好地控制您的指标体验，您始终可以选择运行&lt;a href="https://grafana.com/oss/alloy-opentelemetry-collector/"&gt;Grafana Alloy&lt;/a&gt;甚至 YACE。通过自己运行它，您可以更严格地控​​制抓取间隔，并获得更高级的 YACE 配置，例如维度过滤器。&lt;/p&gt;&lt;p&gt;还有很多细节需要考虑，但迄今为止分享的细节是最大的区别。作为帮助您消化所有这些内容并为您提供另一个快速参考的方法，这里有一个全面的功能比较网格，可帮助您与前面介绍的决策树配合。这些应该有助于指导您完成所有 CloudWatch 指标决策。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/cloudwatch-metrics-options/Feature-comparison.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="功能对比图" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="功能对比图" src="https://grafana.com/media/blog/cloudwatch-metrics-options/Feature-comparison.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="the-tent-will-only-get-bigger"&gt;帐篷只会变得更大&lt;/h2&gt;&lt;p&gt;如果您熟悉 CloudWatch，您可能知道提取数据并不是数据传输的唯一选择。 CloudWatch 还&lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Metric-Streams.html?pg=blog&amp;amp;plcmt=body-txt" rel="noopener noreferrer" target="_blank"&gt;通过 Amazon Data Firehose 提供指标流&lt;/a&gt;，如果您不知道，我们最近使用该功能来帮助启动&lt;a href="https://grafana.com/blog/2024/05/07/logs-with-firehose-cost-effective-aws-log-streaming-to-grafana-cloud/"&gt;带有对 AWS Observability 应用程序的 Firehose 支持的日志&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;我们还有更多工作正在进行中。我们的路线图包括 Grafana Alloy 的指标流支持和无代理 AWS Observability 应用程序体验。我们还计划深入了解 CloudWatch for OpenTelemetry 的世界，看看我们可以做些什么来将我们对我们最喜欢的 OSS Prometheus 导出器 (YACE) 所做的改进也带给 OTel 用户。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Wed, 22 May 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/22/how-to-visualize-amazon-cloudwatch-metrics-in-grafana/</guid></item><item><title>【How to use Grafana Beyla in Grafana Alloy for eBPF-based auto-instrumentation】如何在 Grafana Alloy 中使用 Grafana Beyla 进行基于 eBPF 的自动仪表</title><link>https://grafana.com/blog/2024/05/21/how-to-use-grafana-beyla-in-grafana-alloy-for-ebpf-based-auto-instrumentation/</link><description>&lt;p&gt;在上个月的 GrafanaCON 上，我们&lt;a href="https://grafana.com/blog/2024/04/09/grafana-alloy-opentelemetry-collector-with-prometheus-pipelines/"&gt;发布了 Grafana Alloy&lt;/a&gt; ，这是我们的 OpenTelemetry Collector 开源发行版。 Alloy 是一种遥测收集器，100% OTLP 兼容，并为 OpenTelemetry 和 Prometheus 遥测格式提供本机管道，支持指标、日志、跟踪和配置文件。&lt;/p&gt;&lt;p&gt;今天，我们很高兴与大家分享， &lt;a href="https://grafana.com/blog/2023/09/13/grafana-beyla-open-source-ebpf-auto-instrumentation/"&gt;Grafana Beyla&lt;/a&gt;现已在 Grafana Alloy 中作为默认的基于 eBPF 的应用程序自动检测解决方案。这样，Alloy 用户可以自动捕获正在运行的服务的指标和跟踪，并连接到现有的遥测管道。本月发布的&lt;a href="https://github.com/grafana/alloy/releases" rel="noopener noreferrer" target="_blank"&gt;Grafana Alloy 1.1&lt;/a&gt;与 Grafana Beyla 1.5 一起发布。&lt;/p&gt;&lt;p&gt;在这篇博文中，我们将介绍如何在 Grafana Alloy 中使用 Grafana Beyla 的一些示例，包括如何从正在运行的服务获取 RED 指标以及如何在 Kubernetes 中自动检测应用程序。&lt;/p&gt;&lt;h2 id="get-red-metrics-from-your-running-services"&gt;从正在运行的服务获取 RED 指标&lt;/h2&gt;&lt;p&gt;假设您有一个正在运行的服务，该服务接受 HTTP 请求并侦听端口 8080。通常，您需要将 Prometheus 客户端库添加到您的服务并检测您的代码以收集 RED 指标。&lt;/p&gt;&lt;p&gt;通过以下配置，您可以从服务获取 RED 指标，而无需更改代码：&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt;&lt;span class="lang-toolbar__item"&gt;合金&lt;/span&gt;&lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-alloy"&gt;beyla.ebpf &amp;quot;default&amp;quot; { open_port = &amp;quot;8080&amp;quot; } prometheus.scrape &amp;quot;beyla&amp;quot; { targets = beyla.ebpf.default.targets forward_to = [prometheus.remote_write.demo.receiver] } prometheus.remote_write &amp;quot;demo&amp;quot; { endpoint { url = &amp;lt;PROMETHEUS_REMOTE_WRITE_URL&amp;gt; basic_auth { username = &amp;lt;USERNAME&amp;gt; password = &amp;lt;PASSWORD&amp;gt; } } }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;通过此配置， &lt;code&gt;beyla.ebpf&lt;/code&gt;组件检测侦听端口 8080 的服务。 &lt;code&gt;open_port&lt;/code&gt;参数接受一系列端口、单个端口或逗号分隔的端口列表，因此您可以一次检测多个服务。您还可以使用&lt;code&gt;executable_name&lt;/code&gt;参数指定要检测的服务的可执行文件的路径。&lt;/p&gt;&lt;p&gt; &lt;code&gt;prometheus.scrape&lt;/code&gt;组件从&lt;code&gt;beyla.ebpf&lt;/code&gt;组件中抓取指标并将其转发到 Prometheus 远程写入端点。&lt;/p&gt;&lt;p&gt;将&lt;code&gt;&amp;lt;PROMETHEUS_REMOTE_WRITE_URL&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;USERNAME&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;PASSWORD&amp;gt;&lt;/code&gt;替换为您的 Prometheus 远程写入端点 URL、用户名和密码。&lt;/p&gt;&lt;p&gt;您需要使用&lt;code&gt;sudo&lt;/code&gt;权限运行 Alloy 才能允许基于 eBPF 的检测工作。&lt;/p&gt;&lt;p&gt;有关配置选项的更多详细信息，请参阅&lt;a href="https://grafana.com/docs/alloy/latest/reference/components/beyla.ebpf/"&gt;Grafana Alloy beyla.ebpf 组件的文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="instrument-your-applications-automatically-in-kubernetes"&gt;在 Kubernetes 中自动检测您的应用程序&lt;/h2&gt;&lt;p&gt;随着&lt;a href="https://grafana.com/blog/2024/01/24/grafana-beyla-1.2-release-ebpf-auto-instrumentation-with-full-kubernetes-support/"&gt;Grafana Beyla 1.2 版本的发布&lt;/a&gt;，我们宣布对 Beyla 提供原生 Kubernetes 支持。现在，借助 Grafana Alloy，您可以使用 Helm 图表在 Kubernetes 集群中部署 Beyla 并自动检测您的应用程序。&lt;/p&gt;&lt;p&gt;为了演示其工作原理，让我们回顾一下&lt;a href="https://grafana.com/blog/2024/01/24/grafana-beyla-1.2-release-ebpf-auto-instrumentation-with-full-kubernetes-support/"&gt;Beyla 1.2 发布帖子&lt;/a&gt;中的示例。&lt;/p&gt;&lt;h3 id="1-prepare-the-alloy-environment-in-kubernetes"&gt; 1.在Kubernetes中准备Alloy环境&lt;/h3&gt;&lt;p&gt;您需要在 Kubernetes 集群中安装 Grafana Alloy 的 Helm 图表。&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt;&lt;span class="lang-toolbar__item"&gt;巴什&lt;/span&gt;&lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-bash"&gt;helm install --namespace alloy alloy grafana/alloy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;此命令将 Grafana Alloy Helm 图表安装在&lt;code&gt;alloy&lt;/code&gt;命名空间中。&lt;/p&gt;&lt;h3 id="2-deploy-services"&gt; 2. 部署服务&lt;/h3&gt;&lt;p&gt;您可以在 Kubernetes 集群中检测任何 HTTP、HTTPS 或 gRPC 服务。您可以使用 Grafana Beyla 存储库中的&lt;a href="https://github.com/grafana/beyla/blob/main/examples/alloy/sampleapps.yml" rel="noopener noreferrer" target="_blank"&gt;&lt;code&gt;sampleapps.yml&lt;/code&gt;文件&lt;/a&gt;，并使用命令&lt;code&gt;kubectl apply -f sampleapps.yml&lt;/code&gt;进行部署。&lt;/p&gt;&lt;h3 id="3-configure-credentials"&gt; 3. 配置凭据&lt;/h3&gt;&lt;p&gt;Alloy 可以将指标和跟踪导出到任何 OpenTelemetry 端点，以及将指标公开为 Prometheus 端点。但是，我们建议在 Grafana Cloud 中使用 Grafana Tempo 远程写入端点。 （还没有免费的 Grafana Cloud 帐户？&lt;a href="https://grafana.com/auth/sign-up/create-user"&gt;立即注册一个！&lt;/a&gt; ）&lt;/p&gt;&lt;p&gt;从 Grafana Cloud 门户中，找到&lt;strong&gt;Tempo&lt;/strong&gt;框并单击&lt;strong&gt;Send Traces&lt;/strong&gt; 。&lt;/p&gt;&lt;p&gt;使用 Grafana Cloud 凭据创建一个&lt;code&gt;secrets.yml&lt;/code&gt;文件，用于 Prometheus 和 Tempo 远程写入。使用命令&lt;code&gt;kubectl apply -f secrets.yml&lt;/code&gt;进行部署。&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;yaml&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-yaml"&gt;apiVersion: v1 kind: Secret metadata: namespace: alloy name: grafana-credentials type: Opaque stringData: tempo-rw-user: &amp;quot;tempo-user&amp;quot; tempo-rw-pwd: &amp;quot;tempo-pwd&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="4-create-a-configmap-with-alloy-configuration"&gt; 4. 使用 Alloy 配置创建 ConfigMap&lt;/h3&gt;&lt;p&gt;将以下内容复制到文件中（例如&lt;code&gt;config.alloy&lt;/code&gt; ）并使用命令&lt;code&gt;kubectl create configmap --namespace alloy alloy-config &amp;quot;--from-file=config.alloy=./config.alloy&amp;quot;&lt;/code&gt;进行部署。&lt;/p&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt;&lt;span class="lang-toolbar__item"&gt;合金&lt;/span&gt;&lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-alloy"&gt;beyla.ebpf &amp;quot;default&amp;quot; { attributes { kubernetes { enable = &amp;quot;true&amp;quot; } } discovery { services { exe_path = &amp;quot;http&amp;quot; open_ports = &amp;quot;80&amp;quot; } } output { traces = [otelcol.processor.batch.default.input] } } otelcol.processor.batch &amp;quot;default&amp;quot; { output { traces = [otelcol.exporter.otlp.grafana_cloud_tempo.input] } } otelcol.exporter.otlp &amp;quot;grafana_cloud_tempo&amp;quot; { client { endpoint = &amp;quot;tempo-us-central1.grafana.net:443&amp;quot; auth = otelcol.auth.basic.grafana_cloud_tempo.handler } } otelcol.auth.basic &amp;quot;grafana_cloud_tempo&amp;quot; { username = env(&amp;quot;TEMPO_REMOTE_WRITE_USERNAME&amp;quot;) password = env(&amp;quot;TEMPO_REMOTE_WRITE_PASSWORD&amp;quot;) }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;在此配置中，Beyla 配置为检测 Kubernetes 集群中运行的服务并将跟踪发送到 Grafana Cloud Traces。&lt;/p&gt;&lt;p&gt;参数&lt;code&gt;discovery &amp;gt; services &amp;gt; exe_path&lt;/code&gt;指定要检测的服务的可执行文件的路径。 &lt;code&gt;discovery &amp;gt; services &amp;gt; open_ports&lt;/code&gt;参数指定服务正在侦听的端口。&lt;/p&gt;&lt;p&gt;指标和跟踪可以使用运行自动检测服务的 Kubernetes 实体的元数据进行修饰。要启用此功能，请将&lt;code&gt;attributes &amp;gt; kubernetes &amp;gt; enable&lt;/code&gt;参数设置为&lt;code&gt;true&lt;/code&gt; 。&lt;/p&gt;&lt;p&gt; Beyla 组件的&lt;code&gt;output&lt;/code&gt;部分指定应将跟踪发送到&lt;code&gt;otelcol.exporter.otlp&lt;/code&gt; 。 &lt;code&gt;otelcol.exporter.otlp&lt;/code&gt;部分配置 OTLP 导出器以将跟踪发送到 Grafana Cloud Tempo。&lt;/p&gt;&lt;h3 id="5-deploy-alloy-with-helm"&gt; 5. 使用 Helm 部署 Alloy&lt;/h3&gt;&lt;p&gt;使用 Alloy Helm 图表的配置创建&lt;code&gt;values.yaml&lt;/code&gt;文件。您可以使用 Grafana Beyla 的 GitHub 存储库中的&lt;a href="https://github.com/grafana/beyla/blob/main/examples/alloy/values.yaml" rel="noopener noreferrer" target="_blank"&gt;&lt;code&gt;values.yaml&lt;/code&gt;文件&lt;/a&gt;作为参考，然后使用命令&lt;code&gt;helm upgrade --namespace alloy alloy grafana/alloy -f values.yaml&lt;/code&gt;进行部署。&lt;/p&gt;&lt;p&gt;请注意：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;要在 DaemonSet 模式下运行，Beyla 需要访问节点中的所有进程。因此，在&lt;code&gt;controller&lt;/code&gt;部分设置&lt;code&gt;hostPID: true&lt;/code&gt; 。&lt;/li&gt;&lt;li&gt; Beyla 容器以特权运行，因为它必须执行特权操作，例如加载 BPF 程序和创建 BPF 映射。因此&lt;code&gt;privileged: true&lt;/code&gt;在&lt;code&gt;securityContext&lt;/code&gt;部分中设置。要将 Beyla 作为&lt;code&gt;unprivileged&lt;/code&gt;容器运行（即没有&lt;code&gt;privileged: true&lt;/code&gt;选项），请访问&lt;a href="https://grafana.com/docs/beyla/latest/setup/kubernetes/#deploy-beyla-unprivileged"&gt;部署 Beyla 非特权指南&lt;/a&gt;。&lt;/li&gt;&lt;li&gt; &lt;code&gt;extraEnv&lt;/code&gt;部分设置 Tempo 远程写入凭据的环境变量。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="6-test-the-setup"&gt; 6. 测试设置&lt;/h3&gt;&lt;p&gt;在第一步中的&lt;code&gt;kubectl port-forward&lt;/code&gt;命令仍在运行的情况下，测试两个 Web 服务器实例。例如：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;curl http://localhost:8080 curl http://localhost:8080/foo curl http://localhost:8081 curl http://localhost:8081/foo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;现在，转到 Grafana Cloud 中的实例，然后从左侧面板的&lt;strong&gt;“探索”&lt;/strong&gt;部分中选择跟踪的数据源（通常名为&lt;code&gt;grafanacloud-&amp;lt;your user name&amp;gt;-traces&lt;/code&gt; ）。&lt;/p&gt;&lt;p&gt;&lt;img alt="选择轨迹数据源" class="lazyload" /&gt;&lt;/p&gt;&lt;p&gt;要搜索所有跟踪，请选择查询栏中的&lt;strong&gt;“搜索”&lt;/strong&gt;框，将表单留空，然后单击&lt;strong&gt;“运行查询”&lt;/strong&gt; 。&lt;/p&gt;&lt;p&gt;&lt;img alt="搜索系统中所有痕迹" class="lazyload" /&gt;&lt;/p&gt;&lt;p&gt;这将显示&lt;code&gt;docs&lt;/code&gt;实例（端口 8081）的跟踪。您可能会看到来自您自己的服务的痕迹，但不应看到来自&lt;code&gt;website&lt;/code&gt;服务的痕迹，因为它尚未经过 Beyla 检测。&lt;/p&gt;&lt;p&gt;&lt;img alt="Grafana Cloud 跟踪列表" class="lazyload" /&gt;&lt;/p&gt;&lt;p&gt;在跟踪详细信息中，跟踪的资源属性使用运行检测服务的 Kubernetes Pod 的元数据进行修饰。&lt;/p&gt;&lt;p&gt;&lt;img alt="跟踪的详细信息" class="lazyload" /&gt;&lt;/p&gt;&lt;h2 id="whats-next"&gt;下一步是什么？&lt;/h2&gt;&lt;p&gt;在这篇博文中，我们介绍了如何在 Grafana Alloy 中使用 Grafana Beyla 从正在运行的服务获取 RED 指标，以及如何在 Kubernetes 中自动检测您的应用程序。&lt;/p&gt;&lt;p&gt;将来，我们计划向 Beyla 添加更多配置选项，以允许用户自定义其应用程序的检测。我们还计划支持更多协议来自动检测。最后，在 Beyla 的未来版本中，我们计划添加对更多基于 eBPF 的功能的支持，例如网络监控。敬请期待更多的更新！&lt;/p&gt;</description><pubDate>Tue, 21 May 2024 14:12:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/21/how-to-use-grafana-beyla-in-grafana-alloy-for-ebpf-based-auto-instrumentation/</guid></item><item><title>【Grafana OnCall: Connect to Discord, Mattermost, and more with webhooks】Grafana OnCall：使用 webhooks 连接到 Discord、Mattermost 等</title><link>https://grafana.com/blog/2024/05/20/grafana-oncall-connect-to-discord-mattermost-and-more-with-webhooks/</link><description>&lt;p&gt;采用工具时的一个重要考虑因素是它是否可以与您现有的工作流程和服务集成。每个场景都可能非常具体，这就是为什么寻找具有公共 API 或可自定义 Webhook 的工具非常重要。&lt;/p&gt;&lt;p&gt;去年， &lt;a href="https://grafana.com/products/cloud/oncall/"&gt;Grafana OnCall&lt;/a&gt;扩展了其&lt;a href="https://grafana.com/docs/grafana-cloud/alerting-and-irm/oncall/outgoing-webhooks/"&gt;Webhook 支持&lt;/a&gt;，以允许更复杂的设置，从而在警报组事件期间提供与其他服务交互的更大灵活性。&lt;/p&gt;&lt;p&gt;这些网络钩子如何工作？为了说明如何调整 Grafana OnCall 并将其与现有环境联系起来，我们将向您展示如何向其他消息传递解决方案（例如&lt;a href="https://mattermost.com/" rel="noopener noreferrer" target="_blank"&gt;Mattermost&lt;/a&gt;和&lt;a href="https://discord.com/" rel="noopener noreferrer" target="_blank"&gt;Discord）&lt;/a&gt;发送警报组通知和更新，这些解决方案尚未开箱即用，但仍然可以插入进入您的工作流程。&lt;/p&gt;&lt;p&gt;这里的目标是将 Grafana OnCall Webhooks 连接到第三方 API，建立一个简单的&lt;strong&gt;单向&lt;/strong&gt;同步（OnCall -&amp;gt; 外部服务）以保持状态信息最新，而无需编写任何代码。我们将分别介绍每个流行的 ChatOps 应用程序的流程，以表明虽然连接可能不同，但 Grafana OnCall 中的设置本质上是相同的，所以让我们看看它是如何工作的！&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;为了更完整的集成或双向同步，需要额外的逻辑和/或使用我们的&lt;a href="https://grafana.com/docs/grafana-cloud/alerting-and-irm/oncall/oncall-api-reference/"&gt;OnCall API&lt;/a&gt; 。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="how-to-integrate-grafana-oncall-with-mattermost"&gt;如何将 Grafana OnCall 与 Mattermost 集成&lt;/h2&gt;&lt;p&gt;Mattermost 是一种流行的开源且灵活的消息传递服务，支持多种集成，您可以自行托管或用作云即服务。对于此集成，计划创建一个机器人，将警报组详细信息发布到 Mattermost 渠道，并使这些警报组的状态和信息保持最新。&lt;/p&gt;&lt;p&gt;首先，让我们创建&lt;a href="https://developers.mattermost.com/integrate/reference/bot-accounts/" rel="noopener noreferrer" target="_blank"&gt;机器人帐户&lt;/a&gt;以使用其访问令牌访问&lt;a href="https://api.mattermost.com/" rel="noopener noreferrer" target="_blank"&gt;Mattermost API&lt;/a&gt; ：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/create-bot.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="最重要的集成菜单" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="最重要的集成菜单" src="https://grafana.com/media/blog/oncall-chatops/create-bot.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;您可能需要设置系统管理员角色以允许机器人更新消息。请参阅&lt;a href="https://developers.mattermost.com/integrate/reference/bot-accounts/#can-bot-accounts-edit-messages-through-the-restful-api" rel="noopener noreferrer" target="_blank"&gt;此 Mattermost 常见问题解答&lt;/a&gt;以了解更多信息。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;创建后您将获得一个代币；确保保留该值。&lt;/p&gt;&lt;p&gt;接下来，将机器人用户添加为您希望将通知发布到的频道中的成员，并从该频道的信息视图中获取频道 ID。要到达那里，请单击频道名称下拉菜单，您将看到“查看信息”选项。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/mattermost-id-info.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="最重要的 ID 信息" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="最重要的 ID 信息" src="https://grafana.com/media/blog/oncall-chatops/mattermost-id-info.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;此时，您应该拥有一个令牌，并且能够使用该 &lt;a href="https://api.mattermost.com/#tag/authentication" rel="noopener noreferrer" target="_blank"&gt;令牌&lt;/a&gt;以及通道 ID 来访问 Mattermost API，以作为机器人在指定的 Mattermost 通道中发布消息。使用此&lt;code&gt;curl&lt;/code&gt;命令来测试我们想要在Grafana OnCall中使用的流程：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;$ curl -i -X POST -H &amp;#39;Content-Type: application/json&amp;#39; -d &amp;#39;{&amp;quot;channel_id&amp;quot;:&amp;quot;eorfq3i1zj89jg7pqpzpyp8rxh&amp;quot;, &amp;quot;message&amp;quot;:&amp;quot;This is a message from a bot&amp;quot;, &amp;quot;props&amp;quot;:{&amp;quot;attachments&amp;quot;: [{&amp;quot;pretext&amp;quot;: &amp;quot;Look some text&amp;quot;,&amp;quot;text&amp;quot;: &amp;quot;This is text&amp;quot;}]}}&amp;#39; -H &amp;#39;Authorization: Bearer qwd4k954qjyx3euumnbnqfa6wo&amp;#39; http://localhost:8065/api/v4/posts8065/api/v4/posts&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;它应该返回类似于以下内容的输出：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;HTTP/1.1 201 Created Content-Type: application/json Permissions-Policy: Referrer-Policy: no-referrer Vary: Accept-Encoding X-Content-Type-Options: nosniff X-Request-Id: mdubxdeqffffpxkcbu65fxaino X-Version-Id: 7.9.0.7.9.0.7f5ade118b6f3cf753675a3fdfaa6d40.false Date: Tue, 16 Apr 2024 17:11:46 GMT Content-Length: 725 {&amp;quot;id&amp;quot;:&amp;quot;kxi7owmor3y9proo5rkef64our&amp;quot;,&amp;quot;create_at&amp;quot;:1713287506329,&amp;quot;update_at&amp;quot;:1713287506329,&amp;quot;edit_at&amp;quot;:0,&amp;quot;delete_at&amp;quot;:0,&amp;quot;is_pinned&amp;quot;:false,&amp;quot;user_id&amp;quot;:&amp;quot;rks6to6tz7n19etm6oboe9s9zh&amp;quot;,&amp;quot;channel_id&amp;quot;:&amp;quot;eorfq3i1zj89jg7pqpzpyp8rxh&amp;quot;,&amp;quot;root_id&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;original_id&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;message&amp;quot;:&amp;quot;This is a message from a bot&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;props&amp;quot;:{&amp;quot;attachments&amp;quot;:[{&amp;quot;id&amp;quot;:0,&amp;quot;fallback&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;color&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;pretext&amp;quot;:&amp;quot;Look some text&amp;quot;,&amp;quot;author_name&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;author_link&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;author_icon&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;title_link&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;This is text&amp;quot;,&amp;quot;fields&amp;quot;:null,&amp;quot;image_url&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;thumb_url&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;footer&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;footer_icon&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;ts&amp;quot;:null}],&amp;quot;from_bot&amp;quot;:&amp;quot;true&amp;quot;},&amp;quot;hashtags&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;pending_post_id&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;reply_count&amp;quot;:0,&amp;quot;last_reply_at&amp;quot;:0,&amp;quot;participants&amp;quot;:null,&amp;quot;metadata&amp;quot;:{&amp;quot;embeds&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;message_attachment&amp;quot;}]}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;发出上述请求后，您应该会在 Mattermost 频道中收到一条类似于下面屏幕截图中的消息，确认凭据和频道 ID 正常，并且我们可以使用该 API。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/oncall-bot-message.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Oncall 机器人消息" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Oncall 机器人消息" src="https://grafana.com/media/blog/oncall-chatops/oncall-bot-message.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;回到我们使用 webhooks 创建 Grafana OnCall 集成计划的目标，我们对我们的用例的以下 Mattermost API 端点（仅供参考）感兴趣：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://api.mattermost.com/#tag/posts/operation/CreatePost" rel="noopener noreferrer" target="_blank"&gt;创建帖子&lt;/a&gt;，发布新的警报组通知&lt;/li&gt;&lt;li&gt;&lt;a href="https://api.mattermost.com/#tag/posts/operation/UpdatePost" rel="noopener noreferrer" target="_blank"&gt;更新帖子&lt;/a&gt;，以在警报组更新时更新之前发送的通知&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="how-to-connect-grafana-oncall-to-mattermost"&gt;如何将 Grafana OnCall 连接到 Mattermost&lt;/h3&gt;&lt;p&gt;在 Grafana OnCall 中，我们需要配置两个 Webhook：一个用于在创建警报组时发布通知（使用“创建帖子”端点），另一个用于在警报组状态更改时更新该通知（使用“更新帖子”端点）。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/mattermost.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="将 Grafana OnCall 连接到 Mattermost 的步骤" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="将 Grafana OnCall 连接到 Mattermost 的步骤" src="https://grafana.com/media/blog/oncall-chatops/mattermost.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;让我们首先设置&lt;code&gt;Alert Group Created&lt;/code&gt; webhook：&lt;/p&gt;&lt;p&gt;如果您在自己的计算机上进行操作，则需要输入以下内容才能实现上面 GIF 中列出的步骤中所看到的内容：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;名称：&lt;/strong&gt; mattermost-new&lt;/li&gt;&lt;li&gt;&lt;strong&gt;启用：&lt;/strong&gt;真&lt;/li&gt;&lt;li&gt;&lt;strong&gt;触发类型：&lt;/strong&gt;已创建警报组&lt;/li&gt;&lt;li&gt;&lt;strong&gt;HTTP 方法：&lt;/strong&gt; POST&lt;/li&gt;&lt;li&gt; &lt;strong&gt;Webhook URL：&lt;/strong&gt; http://localhost:8065/api/v4/posts&lt;/li&gt;&lt;li&gt;&lt;strong&gt;授权标头：&lt;/strong&gt; Bearer [您的令牌]&lt;/li&gt;&lt;li&gt;&lt;strong&gt;全部转发：&lt;/strong&gt;错误&lt;/li&gt;&lt;li&gt;&lt;strong&gt;数据：&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;{ &amp;quot;channel_id&amp;quot;: &amp;quot;eorfq3i1zj89jg7pqpzpyp8rxh&amp;quot;, &amp;quot;message&amp;quot;: &amp;quot;{% if alert_group.state == &amp;#39;acknowledged&amp;#39;%}:large_orange_circle:{% elif alert_group.state == &amp;#39;resolved&amp;#39;%}:large_green_circle:{% elif alert_group.state == &amp;#39;silenced&amp;#39;%}:white_circle:{% else %}:red_circle:{% endif %} **{{ alert_group.title }}**\n*{{ alert_group.state }}*\n{{ alert_payload.message }}\n*{{ integration.name }}*\n\n{% if event.type == &amp;#39;acknowledge&amp;#39; %}**Acknowledged by: {{ user.username }}**{% endif %}{% if event.type == &amp;#39;resolve&amp;#39; %}**Resolved by: {{ user.username }}**{% endif %}{% if event.type == &amp;#39;silence&amp;#39; %}**Silenced by: {{ user.username }} (until {{ event.until }})**{% endif %}\n\n[View in Grafana OnCall]({{ alert_group.permalinks.web }})&amp;quot; }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;要更新已发送的通知，您需要拥有原始消息 ID。触发我们刚刚创建的 Webhook 后，此 ID 将包含在响应中。 Grafana OnCall Webhook 维护链接到警报组的先前响应的记录，使我们能够在更新 Webhook 中 &lt;a href="https://grafana.com/docs/oncall/latest/configure/outgoing-webhooks/#using-response-data"&gt;引用&lt;/a&gt;此信息。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/outgoing-webhook-details.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="传出 Webhook 详细信息" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="传出 Webhook 详细信息" src="https://grafana.com/media/blog/oncall-chatops/outgoing-webhook-details.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;然后，我们可以使用模板表达式&lt;code&gt;{{ responses.WHK9SLCGJBPZK5.id }}&lt;/code&gt;来引用 ID 为&lt;code&gt;WHK9SLCGJBPZK5&lt;/code&gt;的 Webhook 的上一个响应中的&lt;code&gt;id&lt;/code&gt;字段，对应于触发状态更改的同一警报组。 （这是&lt;code&gt;mattermost-new&lt;/code&gt; Webhook。您可以从 Webhooks 列表 UI 获取此 ID；请参见下文。）&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/webhooks-listing-ui.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Webhook 列表" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Webhook 列表" src="https://grafana.com/media/blog/oncall-chatops/webhooks-listing-ui.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;考虑到这一点，我们现在将设置&lt;code&gt;Alert Group Status Change&lt;/code&gt; Webhook。以下是配置 Webhook 时需要输入的信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;名称：&lt;/strong&gt; mattermost-update&lt;/li&gt;&lt;li&gt;&lt;strong&gt;启用：&lt;/strong&gt;真&lt;/li&gt;&lt;li&gt;&lt;strong&gt;触发类型：&lt;/strong&gt;警报组状态变化&lt;/li&gt;&lt;li&gt;&lt;strong&gt;HTTP 方法：&lt;/strong&gt; PUT&lt;/li&gt;&lt;li&gt; &lt;strong&gt;Webhook URL：（&lt;/strong&gt;&lt;em&gt;请改用您的 thingmost-new webhook ID。&lt;/em&gt; ）http://localhost:8065/api/v4/posts/{{response.WHK9SLCGJBPZK5.id }}&lt;/li&gt;&lt;li&gt;&lt;strong&gt;授权标头：&lt;/strong&gt; Bearer [您的令牌]&lt;/li&gt;&lt;li&gt;&lt;strong&gt;全部转发：&lt;/strong&gt;错误&lt;/li&gt;&lt;li&gt;&lt;strong&gt;数据：（&lt;/strong&gt;&lt;em&gt;请使用您最新的 webhook ID。&lt;/em&gt; ）&lt;/li&gt;&lt;/ul&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;{ &amp;quot;id&amp;quot;: &amp;quot;{{ responses.WHK9SLCGJBPZK5.id }}&amp;quot;, &amp;quot;message&amp;quot;: &amp;quot;{% if alert_group.state == &amp;#39;acknowledged&amp;#39;%}:large_orange_circle:{% elif alert_group.state == &amp;#39;resolved&amp;#39;%}:large_green_circle:{% elif alert_group.state == &amp;#39;silenced&amp;#39;%}:white_circle:{% else %}:red_circle:{% endif %} **{{ alert_group.title }}**\n*{{ alert_group.state }}*\n{{ alert_payload.message }}\n*{{ integration.name }}*\n\n{% if event.type == &amp;#39;acknowledge&amp;#39; %}**Acknowledged by: {{ user.username }}**{% endif %}{% if event.type == &amp;#39;resolve&amp;#39; %}**Resolved by: {{ user.username }}**{% endif %}{% if event.type == &amp;#39;silence&amp;#39; %}**Silenced by: {{ user.username }} (until {{ event.until }})**{% endif %}\n\n[View in Grafana OnCall]({{ alert_group.permalinks.web }})&amp;quot; }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;就是这样！如果您发送&lt;a href="https://grafana.com/docs/oncall/latest/set-up/get-started/#send-a-demo-alert"&gt;演示警报&lt;/a&gt;，您应该会收到类似于以下内容的通知：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/incident-firing.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Oncall 中的事件触发消息" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana Oncall 中的事件触发消息" src="https://grafana.com/media/blog/oncall-chatops/incident-firing.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;确认后，将更新为：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/incident-acknowledged.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="来自 Grafana Oncall 的事件确认消息" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="来自 Grafana Oncall 的事件确认消息" src="https://grafana.com/media/blog/oncall-chatops/incident-acknowledged.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;由于我们没有设置任何&lt;a href="https://grafana.com/docs/oncall/latest/configure/outgoing-webhooks/#integrations"&gt;集成&lt;/a&gt;作为过滤依据，因此将为堆栈中的每个警报组触发 Webhook。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="how-to-integrate-grafana-oncall-with-discord"&gt;如何将 Grafana OnCall 与 Discord 集成&lt;/h2&gt;&lt;p&gt;Discord 是一个即时消息和 VoIP 社交平台，支持语音通话、视频通话、短信以及媒体和文件。对于此集成，计划创建一个机器人，将警报组详细信息发布到频道并保持这些警报组的状态和信息最新。&lt;/p&gt;&lt;p&gt;在本例中，我们将使用&lt;a href="https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks" rel="noopener noreferrer" target="_blank"&gt;Discord webhooks&lt;/a&gt;来实现通知：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/new-webhook.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="不和谐集成 UI" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="不和谐集成 UI" src="https://grafana.com/media/blog/oncall-chatops/new-webhook.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;通过 webhook URL 我们可以进行&lt;a href="https://discord.com/developers/docs/resources/webhook" rel="noopener noreferrer" target="_blank"&gt;多种操作&lt;/a&gt;。出于我们的目的，我们感兴趣的是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://discord.com/developers/docs/resources/webhook#execute-webhook" rel="noopener noreferrer" target="_blank"&gt;创建消息&lt;/a&gt;，发布新的警报组通知&lt;/li&gt;&lt;li&gt;&lt;a href="https://discord.com/developers/docs/resources/webhook#edit-webhook-message" rel="noopener noreferrer" target="_blank"&gt;编辑消息&lt;/a&gt;，以在更新警报组时更新先前发送的通知&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;注意：创建消息时，我们需要设置&lt;code&gt;?wait=true&lt;/code&gt;查询参数以获取包含创建的消息信息的响应，稍后我们需要更新该消息。&lt;/p&gt;&lt;h3 id="how-to-connect-grafana-oncall-to-discord"&gt;如何将 Grafana OnCall 连接到 Discord&lt;/h3&gt;&lt;p&gt;与我们为 Mattermost 所做的类似，我们需要按照链接的 API 规范创建 Grafana OnCall Webhooks：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/discord.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="在 Grafana Oncall 中连接到 Discord 的步骤" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="在 Grafana Oncall 中连接到 Discord 的步骤" src="https://grafana.com/media/blog/oncall-chatops/discord.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;您需要输入以下内容才能实现上面 GIF 中概述的步骤中所看到的内容：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;名称：&lt;/strong&gt; discord-新&lt;/li&gt;&lt;li&gt;&lt;strong&gt;启用：&lt;/strong&gt;真&lt;/li&gt;&lt;li&gt;&lt;strong&gt;触发类型：&lt;/strong&gt;已创建警报组&lt;/li&gt;&lt;li&gt;&lt;strong&gt;HTTP 方法：&lt;/strong&gt; POST&lt;/li&gt;&lt;li&gt; &lt;strong&gt;Webhook URL：&lt;/strong&gt; [您的 Discord webhook URL]？wait=true&lt;/li&gt;&lt;li&gt;&lt;strong&gt;全部转发：&lt;/strong&gt;错误&lt;/li&gt;&lt;li&gt;&lt;strong&gt;数据：&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;{ &amp;quot;content&amp;quot;: &amp;quot;{% if alert_group.state == &amp;#39;acknowledged&amp;#39;%}:orange_circle:{% elif alert_group.state == &amp;#39;resolved&amp;#39;%}:green_circle:{% elif alert_group.state == &amp;#39;silenced&amp;#39;%}:white_circle:{% else %}:red_circle:{% endif %} **{{ alert_group.title }}**\n*{{ alert_group.state }}*\n{{ alert_payload.message }}\n*{{ integration.name }}*\n\n{% if event.type == &amp;#39;acknowledge&amp;#39; %}**Acknowledged by: {{ user.username }}**{% endif %}{% if event.type == &amp;#39;resolve&amp;#39; %}**Resolved by: {{ user.username }}**{% endif %}{% if event.type == &amp;#39;silence&amp;#39; %}**Silenced by: {{ user.username }} (until {{ event.until }})**{% endif %}\n\n[View in Grafana OnCall]({{ alert_group.permalinks.web }})&amp;quot; }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;对于更新 webhook，我们将使用 URL 路径中之前的&lt;code&gt;discord-new&lt;/code&gt;响应中的消息&lt;code&gt;id&lt;/code&gt; ：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;名称：&lt;/strong&gt;不和谐更新&lt;/li&gt;&lt;li&gt;&lt;strong&gt;启用：&lt;/strong&gt;真&lt;/li&gt;&lt;li&gt;&lt;strong&gt;触发类型：&lt;/strong&gt;警报组状态变化&lt;/li&gt;&lt;li&gt;&lt;strong&gt;HTTP 方法：&lt;/strong&gt;补丁&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Webhook URL：（&lt;/strong&gt;&lt;em&gt;请改用您的 Discord 新 Webhook ID。&lt;/em&gt; ）[您的 Discord Webhook URL]/messages/{{response.WH5PXWNJ7MT9Y5.id }}&lt;/li&gt;&lt;li&gt;&lt;strong&gt;全部转发：&lt;/strong&gt;错误&lt;/li&gt;&lt;li&gt;&lt;strong&gt;数据：&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;{ &amp;quot;content&amp;quot;: &amp;quot;{% if alert_group.state == &amp;#39;acknowledged&amp;#39;%}:orange_circle:{% elif alert_group.state == &amp;#39;resolved&amp;#39;%}:green_circle:{% elif alert_group.state == &amp;#39;silenced&amp;#39;%}:white_circle:{% else %}:red_circle:{% endif %} **{{ alert_group.title }}**\n*{{ alert_group.state }}*\n{{ alert_payload.message }}\n*{{ integration.name }}*\n\n{% if event.type == &amp;#39;acknowledge&amp;#39; %}**Acknowledged by: {{ user.username }}**{% endif %}{% if event.type == &amp;#39;resolve&amp;#39; %}**Resolved by: {{ user.username }}**{% endif %}{% if event.type == &amp;#39;silence&amp;#39; %}**Silenced by: {{ user.username }} (until {{ event.until }})**{% endif %}\n\n[View in Grafana OnCall]({{ alert_group.permalinks.web }})&amp;quot; }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;让我们触发一个&lt;a href="https://grafana.com/docs/oncall/latest/set-up/get-started/#send-a-demo-alert"&gt;演示警报&lt;/a&gt;并查看通知的外观：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/discord-incident-firing.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="事件触发消息" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="事件触发消息" src="https://grafana.com/media/blog/oncall-chatops/discord-incident-firing.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;然后在确认后更新：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/oncall-chatops/discord-incident-acknowledged.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="事件确认消息" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="事件确认消息" src="https://grafana.com/media/blog/oncall-chatops/discord-incident-acknowledged.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="set-up-webhooks-programmatically"&gt;以编程方式设置 Webhooks&lt;/h2&gt;&lt;p&gt;作为奖励，我制作了几个脚本来使用 Grafana OnCall API 创建/更新 OnCall webhook。 （我们是否提到过 API 很有用？）这些脚本使迭代&lt;a href="https://grafana.com/docs/grafana-cloud/alerting-and-irm/oncall/configure/outgoing-webhooks/#outgoing-webhook-templates"&gt;通知模板&lt;/a&gt;变得更简单，直到获得所需的输出。您应该能够使用&lt;a href="https://registry.terraform.io/providers/grafana/grafana/latest/docs/resources/oncall_outgoing_webhook" rel="noopener noreferrer" target="_blank"&gt;Terraform&lt;/a&gt;进行类似的设置。&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://gist.github.com/matiasb/69e8c41e4418ed30ab672b940cf9800b" rel="noopener noreferrer" target="_blank"&gt;Mattermost 的脚本&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://gist.github.com/matiasb/957e04bbe42ddee1f7a32e4b4d5d10f0" rel="noopener noreferrer" target="_blank"&gt;不和谐的脚本&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="going-further"&gt;更进一步&lt;/h2&gt;&lt;p&gt;对&lt;a href="https://github.com/grafana/oncall/issues/2683" rel="noopener noreferrer" target="_blank"&gt;Microsoft Teams&lt;/a&gt;或&lt;a href="https://github.com/grafana/oncall/issues/298" rel="noopener noreferrer" target="_blank"&gt;Google Chat&lt;/a&gt;等其他 ChatOps 服务采用类似的方法也是可行的。如果您尝试，请告诉我们！&lt;/p&gt;&lt;p&gt;另一个值得探索的增强功能是根据&lt;a href="https://grafana.com/docs/oncall/latest/manage/on-call-schedules/"&gt;OnCall 时间表&lt;/a&gt;通知用户的能力。这可以通过使用&lt;a href="https://grafana.com/docs/oncall/latest/configure/outgoing-webhooks/#escalation-step"&gt;升级步骤&lt;/a&gt;webhook 结合&lt;a href="https://grafana.com/docs/grafana-cloud/alerting-and-irm/oncall/configure/outgoing-webhooks/#users_to_notify"&gt;&lt;code&gt;users_to_notify&lt;/code&gt;&lt;/a&gt;字段中的信息来实现。&lt;/p&gt;&lt;p&gt;此外，我们正在考虑对 Mattermost 和 Discord 进行更全面的集成，我们很乐意帮助任何愿意为此&lt;a href="https://github.com/grafana/oncall/issues/96" rel="noopener noreferrer" target="_blank"&gt;做出贡献的&lt;/a&gt;人。请随时通过我们的&lt;a href="https://grafana.slack.com/archives/C02LSUUSE2G" rel="noopener noreferrer" target="_blank"&gt;Community Slack&lt;/a&gt;与我们联系。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Mon, 20 May 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/20/grafana-oncall-connect-to-discord-mattermost-and-more-with-webhooks/</guid></item><item><title>【Grafana Cloud updates: revamped Synthetic Monitoring, improvements to Kubernetes Monitoring, and more】Grafana Cloud 更新：改进综合监控、改进 Kubernetes 监控等</title><link>https://grafana.com/blog/2024/05/16/grafana-cloud-updates-revamped-synthetic-monitoring-improvements-to-kubernetes-monitoring-and-more/</link><description>&lt;p&gt;我们不断在 Grafana Cloud 中发布有用的更新和有趣的功能，这是我们完全托管的可观测性平台，由开源 Grafana LGTM Stack（用于日志的&lt;a href="https://grafana.com/oss/loki/?pg=blog&amp;amp;plcmt=body-txt"&gt;Loki&lt;/a&gt; 、用于可视化的&lt;a href="https://grafana.com/oss/grafana?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana&lt;/a&gt; 、用于跟踪的&lt;a href="https://grafana.com/oss/tempo/?pg=blog&amp;amp;plcmt=body-txt"&gt;Tempo&lt;/a&gt;和用于指标的&lt;a href="https://grafana.com/oss/mimir/?pg=blog&amp;amp;plcmt=body-txt"&gt;Mimir&lt;/a&gt; ）提供支持。&lt;/p&gt;&lt;p&gt;如果您错过了，这里汇总了本月 Grafana Cloud 的最新、最精彩的更新。您还可以&lt;a href="https://grafana.com/docs/grafana-cloud/whats-new/?pg=blog&amp;amp;plcmt=body-txt"&gt;在 Grafana Cloud 文档新增功能&lt;/a&gt;中了解我们添加到 Grafana Cloud 的所有功能。&lt;/p&gt;&lt;p&gt;如果您不是 Grafana Cloud 用户……我们还在等什么？您可以通过我们慷慨的免费云计划免费尝试这些功能中的任何一个。今天&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;就注册&lt;/a&gt;一个帐户！&lt;/p&gt;&lt;h2 id="synthetic-monitoring-enhancements"&gt;综合监控增强功能&lt;/h2&gt;&lt;p&gt;我们宣布&lt;a href="https://grafana.com/blog/2024/05/01/grafana-cloud-synthetic-monitoring-all-the-latest-features/"&gt;对综合监控产品进行重大更新，&lt;/a&gt;以帮助您从用户的角度主动监控 API 和 Web 应用程序的性能。&lt;/p&gt;&lt;p&gt;传统上，综合监控使用 Prometheus 黑盒导出器在协议级别进行测试：HTTP、DNS、TCP、gRPC 和 ICMP（用于 ping 和 Traceroute）。这对于运行状况和正常运行时间监控非常有效，但重要的是还要测试单个端点之外的内容并深入研究复杂的事务和关键用户旅程。&lt;/p&gt;&lt;p&gt;这是我们改进的&lt;a href="https://grafana.com/products/cloud/synthetic-monitoring/"&gt;Grafana 云综合监控&lt;/a&gt;产品背后的动机，该产品由&lt;a href="https://grafana.com/oss/k6/"&gt;Grafana k6&lt;/a&gt;提供支持。我们现在提供两种新的检查类型，以扩大您的测试覆盖范围并增强您对应用程序的信心：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;strong&gt;MultiHTTP 检查（普遍可用）&lt;/strong&gt; ：一种基于表单的方法，用于定义多步骤测试。在后台，该表单会生成一个 k6 脚本，因此您无需编写代码。&lt;/li&gt;&lt;li&gt; &lt;strong&gt;k6 脚本化检查（公共预览版）&lt;/strong&gt; ：为您提供在 JavaScript 中定义工作流程测试的功能和灵活性，使用 k6 API 高效地编写测试。&lt;/li&gt;&lt;/ul&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;p&gt;您还可以在开发生命周期的其他部分使用这些 k6 脚本，这样团队就无需维护单独的测试场景，并提高了协作和效率。例如，CI 管道中的开发人员或卓越测试中心可以使用用于综合监控的相同脚本来运行自动化功能测试。&lt;/p&gt;&lt;p&gt;要了解更多信息，请查看我们的综合监控&lt;a href="https://grafana.com/blog/2024/05/01/grafana-cloud-synthetic-monitoring-all-the-latest-features/"&gt;公告博客文章&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="kubernetes-monitoring-all-the-latest-updates"&gt; Kubernetes 监控：所有最新更新&lt;/h2&gt;&lt;p&gt;我们一直忙于为&lt;a href="https://grafana.com/solutions/kubernetes/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud 中的 Kubernetes 监控&lt;/a&gt;添加新功能，帮助您更有效地跟踪和分析 Kubernetes 环境的运行状况。&lt;/p&gt;&lt;h3 id="user-experience-improvements"&gt;用户体验改进&lt;/h3&gt;&lt;p&gt;您现在可以控制 GUI 的自动刷新间隔，也可以禁用自动刷新，直到您准备好手动执行此操作。此功能对于显示大量数据的大型 Kubernetes 队列特别有用。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/docs/grafana-cloud/k8s/refresh-control.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示 Kubernetes 监控中用户体验改进的 gif。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示 Kubernetes 监控中用户体验改进的 gif。" src="https://grafana.com/media/docs/grafana-cloud/k8s/refresh-control.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="access-alert-rules-from-a-list-item"&gt;从列表项访问警报规则&lt;/h3&gt;&lt;p&gt;现在可以从集群、命名空间、节点、pod 或容器列表上的列表项导航到警报规则页面。为此，请单击列表项旁边带下划线的警报编号。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/docs/grafana-cloud/k8s/click-alert-number.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示如何访问警报规则页面的 gif。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示如何访问警报规则页面的 gif。" src="https://grafana.com/media/docs/grafana-cloud/k8s/click-alert-number.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="manage-metrics-in-the-cardinality-page"&gt;在“基数”页面中管理指标&lt;/h3&gt;&lt;p&gt;使用应用程序内的基数页面可以逐个集群地发现您的活动系列的来源。这可以帮助您识别不必要或重复的指标，以及其他潜在的基数问题。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/docs/grafana-cloud/k8s/cardinality-page.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="基数页面的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="基数页面的屏幕截图。" src="https://grafana.com/media/docs/grafana-cloud/k8s/cardinality-page.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="filter-for-pod-types"&gt;过滤 Pod 类型&lt;/h3&gt;&lt;p&gt;现在，您可以在工作负载列表页面上按 Pod 类型进行过滤，以查找&lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/static-pod/" rel="noopener noreferrer" target="_blank"&gt;静态 Pod&lt;/a&gt;和&lt;a href="https://kubernetes.io/docs/concepts/workloads/pods/#using-pods" rel="noopener noreferrer" target="_blank"&gt;裸/非托管 Pod&lt;/a&gt; 。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/docs/grafana-cloud/k8s/filter-for-static-pod.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示如何按 Pod 类型进行过滤的 gif。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示如何按 Pod 类型进行过滤的 gif。" src="https://grafana.com/media/docs/grafana-cloud/k8s/filter-for-static-pod.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="begin-a-sift-investigation"&gt;开始 Sift 调查&lt;/h3&gt;&lt;p&gt;&lt;a href="https://grafana.com/docs/grafana-cloud/alerting-and-irm/machine-learning/sift/"&gt;Sift&lt;/a&gt;是一款强大的诊断助手，由&lt;a href="https://grafana.com/docs/grafana-cloud/alerting-and-irm/machine-learning/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 机器学习&lt;/a&gt;提供支持，可以对您的基础设施遥测进行调查。在 Kubernetes 监控中，您现在可以通过从 Pod、集群、命名空间或工作负载视图中单击&lt;strong&gt;“运行 Sift 调查”&lt;/strong&gt;来开始&lt;a href="https://grafana.com/docs/grafana-cloud/alerting-and-irm/machine-learning/manage/sift/#sift-checks"&gt;事件调查&lt;/a&gt;。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/docs/grafana-cloud/k8s/k8s-sift.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Kubernetes 监控中的 Sift 的 gif。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Kubernetes 监控中的 Sift 的 gif。" src="https://grafana.com/media/docs/grafana-cloud/k8s/k8s-sift.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;要了解有关 Grafana Cloud 中 Kubernetes 监控的所有最新更新的更多信息，请查看我们的&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-infrastructure/kubernetes-monitoring/"&gt;技术文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="view-slo-performance-by-team-and-service"&gt;按团队和服务查看 SLO 绩效&lt;/h2&gt;&lt;p&gt;Grafana SLO（服务级别目标）提供了一个框架来衡量您为用户提供的服务质量。现在，SLO 性能页面提供了一个视图，可让您进行筛选以准确查看团队和服务 SLO 的执行情况。这对于拥有大量 SLO、想要查看逻辑子集的客户特别有用。首先，使用&lt;code&gt;team_name&lt;/code&gt;和/或&lt;code&gt;service_name&lt;/code&gt;标签标记您的 SLO。&lt;/p&gt;&lt;p&gt;要了解有关 Grafana SLO 的更多信息，请参阅我们的&lt;a href="https://grafana.com/docs/grafana-cloud/alerting-and-irm/slo/"&gt;技术文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="rbac-for-alert-rule-provisioning-apis"&gt;用于警报规则配置 API 的 RBAC&lt;/h2&gt;&lt;p&gt;警报配置 HTTP API 已更新，以实施基于角色的访问控制 (RBAC)。在 Grafana Cloud 中，具有&lt;strong&gt;规则编写者&lt;/strong&gt;角色和&lt;strong&gt;设置配置状态&lt;/strong&gt;的用户可以访问 API 并限制对使用特定数据源的警报规则的访问。&lt;/p&gt;&lt;h2 id="new-grafana-cloud-integrations"&gt;新的 Grafana 云集成&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;a href="https://grafana.com/solutions/velero/monitor/"&gt;维莱罗&lt;/a&gt;&lt;/strong&gt;。您现在可以在 Grafana Cloud 中轻松监控 Velero，这是一款开源工具，可帮助备份和迁移 Kubernetes 集群资源和持久卷。此集成包括四个有用的警报和三个用于备份、快照和集群视图的预构建仪表板。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;&lt;a href="https://grafana.com/solutions/openldap/monitor/"&gt;开放式LDAP&lt;/a&gt;&lt;/strong&gt; 。我们为轻量级目录访问协议 (LDAP) 的开源实现添加了新的集成，其中包括四个有用的警报和两个预构建的仪表板，可帮助您监控 OpenLDAP 指标和日志。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;更多 Kubernetes 集成&lt;/strong&gt;。我们为&lt;a href="https://grafana.com/solutions/tensorflow-serving/monitor/"&gt;TensorFlow&lt;/a&gt; 、 &lt;a href="https://grafana.com/solutions/oracle-database/monitor/"&gt;OracleDB&lt;/a&gt; 、 &lt;a href="https://grafana.com/solutions/microsoft-sql-server/monitor/"&gt;Microsoft SQL Server&lt;/a&gt;和&lt;a href="https://grafana.com/solutions/istio/monitor/"&gt;Istio&lt;/a&gt;集成添加了 Kubernetes 支持。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Thu, 16 May 2024 11:15:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/16/grafana-cloud-updates-revamped-synthetic-monitoring-improvements-to-kubernetes-monitoring-and-more/</guid></item><item><title>【AI-powered insights for continuous profiling: introducing Flame graph AI in Grafana Cloud】AI 驱动的持续分析洞察：在 Grafana Cloud 中引入 Flame graph AI</title><link>https://grafana.com/blog/2024/05/15/ai-powered-insights-for-continuous-profiling-introducing-flame-graph-ai-in-grafana-cloud/</link><description>&lt;p&gt;与可观察性领域的许多人一样，我们看到了利用人工智能来增强开发人员体验的巨大潜力。随着我们不断发展和扩展我们的可观测性平台，我们努力开发的功能不仅可以解决复杂的问题，而且可以更轻松地访问&lt;a href="https://grafana.com/docs/pyroscope/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Pyrscope&lt;/a&gt;等工具并从中获取价值。&lt;/p&gt;&lt;p&gt;今天，经过几个月的专门开发和完善，我们很高兴地宣布&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/profiles/flamegraph-ai/?pg=blog&amp;amp;plcmt=body-txt"&gt;Flame graph AI&lt;/a&gt; ，这是我们基于人工智能的火焰图分析功能。火焰图 AI 现已在&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/profiles/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud Profiles&lt;/a&gt; （由 Grafana Pyrscope 提供支持的托管连续分析工具）中提供，它使用大语言模型 (LLM) 来协助火焰图数据解释，以便您可以更快地识别瓶颈、根本原因和建议的修复方案。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_gif1_and_2_updated.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示火焰图 AI 功能的 gif。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示火焰图 AI 功能的 gif。" src="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_gif1_and_2_updated.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="the-challenge-of-turning-profiling-data-into-actionable-decisions"&gt;将分析数据转化为可行决策的挑战&lt;/h2&gt;&lt;p&gt;我们经常发现自己在与客户或社区成员进行对话，他们了解分析在削减成本、更快地解决事件和减少延迟方面的高层次价值。一旦添加到您的工具带中，分析就是主动和被动地了解代码中成本、问题或延迟的根本原因的最有效工具。&lt;/p&gt;&lt;p&gt;然而，当涉及到让他们的开发团队将火焰图和分析数据转化为可操作的代码更改以产生这些积极结果时，许多人陷入了困境。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_meme.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="一个流行的女性集中注意力的模因。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="一个流行的女性集中注意力的模因。" src="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_meme.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;这是因为通过检测应用程序来收集分析数据通常很简单，但是一旦获取这些数据，对其进行分析和解释往往具有挑战性。火焰图为分析数据提供了有价值且密集的可视化，但即使是经验丰富的开发人员也会发现它们难以理解。在现实环境中，学习曲线是复杂的，开发人员同时尝试从不同的可观测信号中获取价值。&lt;/p&gt;&lt;h2 id="bots-vs-brains-whos-better-at-flame-graph-interpretation"&gt;机器人与大脑：谁更擅长解释火焰图？&lt;/h2&gt;&lt;p&gt;认识到这些挑战后，Grafana Pyrscope 团队看到了使用人工智能简化火焰图解释的机会。&lt;/p&gt;&lt;p&gt;在最近的&lt;a href="https://grafana.com/blog/2024/03/01/grafana-labs-hackathon-projects-where-are-they-now/"&gt;Grafana 黑客马拉松&lt;/a&gt;中，我们对 OpenAI 的法学硕士进行了实际测试。我们向不同的人群发送了相同的火焰图（如下图所示）。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_meta.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="火焰图的屏幕截图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="火焰图的屏幕截图。" src="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_meta.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;这些人根据他们在火焰图分析方面的专业知识进行分类：初学者、高级或专家。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_skill_level_chart.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示火焰图经验水平的饼图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示火焰图经验水平的饼图。" src="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_skill_level_chart.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;然后，我们向人工智能系统和用户提供此提示，要求他们解释火焰图并回答与识别和解决性能瓶颈相关的三个具体问题：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;interpret this flamegraph for me and answer the following three questions: - **Performance Bottleneck**: What&amp;#39;s slowing things down? - **Root Cause**: Why is this happening? - **Recommended Fix**: How can we resolve it? [ ... specially compressed flamegraph data ]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;当我们将人工智能系统的响应与用户的响应进行比较时，我们发现人工智能在解释火焰图方面比（大多数）人类更好。以下是对其中一些发现的仔细研究：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;火焰图专家用户&lt;/strong&gt;：83% 通过。他们表现出高度的准确性和详细的理解，能够快速查明问题并正确解释它们&lt;/li&gt;&lt;li&gt;&lt;strong&gt;火焰图高级用户&lt;/strong&gt;：70% 通过。他们的反应各不相同；有些是正确的，而另一些则没有深入研究火焰图来确定根本原因。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;火焰图初学者（又称非技术专业人士）&lt;/strong&gt; ：23% 通过。该组最常选择“我不知道”的回答，尤其是当被问及根本原因和建议的解决方案时——尽管有一些非常有趣的猜测！&lt;/li&gt;&lt;li&gt; &lt;strong&gt;AI解释器&lt;/strong&gt;：100%通过（基于具有相同提示的10次迭代）。人工智能翻译器的表现始终优于初学者和高级用户，提供了比专家准确但不太详细/细致的解释。&lt;/li&gt;&lt;/ul&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_quiz_results.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示测验结果的条形图。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示测验结果的条形图。" src="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_quiz_results.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="flame-graph-ai-from-concept-to-core-feature"&gt;火焰图人工智能：从概念到核心功能&lt;/h2&gt;&lt;p&gt;在黑客马拉松之后，我们认识到人工智能在帮助火焰图分析方面的价值，我们加快了人工智能驱动的火焰图工具的开发，并根据广泛的用户反馈对其进行了完善。&lt;/p&gt;&lt;p&gt; Flame graph AI 使用&lt;a href="https://grafana.com/grafana/plugins/grafana-llm-app/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 的 LLM 插件&lt;/a&gt;来提供使用 OpenAI API 的 LLM。该功能已从实验阶段过渡到在 Grafana Cloud 中普遍可用，体现了我们通过创新增强开发人员工具的可用性和有效性的承诺。&lt;/p&gt;&lt;p&gt;火焰图 AI 可以直观地引导火焰图的密集数据，突出显示关键信息并自动提出优化建议。这不仅使火焰图更易于访问，而且显着加快了问题解决和故障排除的过程。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_gif1_and_2_updated.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示火焰图 AI 的 gif。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示火焰图 AI 的 gif。" src="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_gif1_and_2_updated.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="taking-ai-profiling-further-integration-with-github-for-line-level-insights"&gt;进一步进行 AI 分析：与 GitHub 集成以获取行级见解&lt;/h3&gt;&lt;p&gt;虽然我们最初的人工智能辅助火焰图解释本身就非常有价值，但我们已经将我们的人工智能能力更进一步了。我们新的&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/profiles/pyroscope-github-integration/"&gt;GitHub 集成&lt;/a&gt;允许 AI 系统访问直接链接到火焰图中特定节点的源代码。这种集成通过将行级性能数据与实际代码相结合，提供有针对性的建议并识别反模式，从而实现更精确的分析。&lt;/p&gt;&lt;p&gt;典型的工作流程如下所示：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;识别瓶颈&lt;/strong&gt;：使用火焰图 AI 查明应用程序中的性能问题。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;通过 AI-GitHub 集成进行检查&lt;/strong&gt;：然后可以通过 GitHub 使用相关源代码详细检查已识别的节点。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;接收人工智能驱动的建议&lt;/strong&gt;：根据对周围代码的评估，人工智能直接在 Grafana 界面中提供有关代码优化的具体建议和意见。&lt;/li&gt;&lt;/ol&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_gif3.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="演示 GitHub 集成的 gif。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="演示 GitHub 集成的 gif。" src="https://grafana.com/media/blog/flame_graph_AI_in_grafana_cloud/flame_graph_AI_gif3.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; GitHub 集成不仅会向您显示代码中的问题，还会引导您直接找到源代码，从而在需要时立即进行有效的更正。&lt;strong&gt;分析是唯一能够使用人工智能将见解转化为行动并具有这种效率和准确性的工具。&lt;/strong&gt;&lt;/p&gt;&lt;h2 id="try-flame-graph-ai-now-in-grafana-cloud"&gt;立即在 Grafana Cloud 中尝试 Flame graph AI&lt;/h2&gt;&lt;p&gt;亲身体验我们的人工智能火焰图分析如何改变您的分析方法。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;立即注册 Grafana Cloud&lt;/a&gt; ，开始将复杂的数据转化为可行的见解。我们为每个用例提供慷慨的永久免费套餐和计划。要开始使用 Flame graph AI，您还可以参考&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/profiles/flamegraph-ai/?pg=blog&amp;amp;plcmt=body-txt/#before-you-begin"&gt;我们的技术文档&lt;/a&gt;。&lt;/p&gt;</description><pubDate>Wed, 15 May 2024 13:59:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/15/ai-powered-insights-for-continuous-profiling-introducing-flame-graph-ai-in-grafana-cloud/</guid></item><item><title>【ObservabilityCON 2024 is coming to New York!】ObservabilityCON 2024 即将来到纽约！</title><link>https://grafana.com/blog/2024/05/15/observabilitycon-2024-is-coming-to-new-york/</link><description>&lt;p&gt;官方消息：条条大路通纽约。&lt;/p&gt;&lt;p&gt;我们很高兴地宣布&lt;a href="https://grafana.com/about/events/observabilitycon/2024/?pg=blog&amp;amp;plcmt=body-txt"&gt;ObservabilityCON 2024&lt;/a&gt;将于 9 月 24 日至 25 日在纽约市举行。 Grafana Labs 的旗舰开源可观测性会议每年举行一次。您有机会成为第一个了解 Grafana LGTM Stack（用于日志的&lt;a href="https://grafana.com/docs/loki/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Loki&lt;/a&gt; 、用于可视化的&lt;a href="https://grafana.com/docs/grafana/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana&lt;/a&gt; 、用于跟踪的&lt;a href="https://grafana.com/docs/tempo/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Tempo&lt;/a&gt;以及用于指标的&lt;a href="https://grafana.com/docs/mimir/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Mimir&lt;/a&gt; ）和可观测性解决方案的最新更新的机会，从演示和研讨会中学习提示和技巧，以及与社区其他成员联系。&lt;/p&gt;&lt;p&gt;今年为期两天的活动将包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;开幕主题演讲探讨了开源可观察性的新变化以及下一步发展。&lt;/li&gt;&lt;li&gt;实践研讨会和技术会议可帮助您更深入地了解应用程序性能、改善最终用户体验、加速根本原因分析等。&lt;/li&gt;&lt;li&gt;现场演示和一直很受欢迎的“专家咨询”展位，Grafana Labs 团队成员可以帮助您解决最棘手的可观测性挑战。&lt;/li&gt;&lt;li&gt;可观察性的成功案例和从社区汲取的经验教训。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;请继续关注 ObservabilityCON 2024 议程的更多详细信息。&lt;/p&gt;&lt;h2 id="how-to-register"&gt;如何注册&lt;/h2&gt;&lt;p&gt;ObservabilityCON 2024 的注册将于 6 月底开放。去年的活动门票很快就卖完了，所以&lt;a href="https://grafana.com/about/events/observabilitycon/2024/?pg=blog&amp;amp;plcmt=body-txt"&gt;今天就注册，以便在活动开始时收到通知&lt;/a&gt;，并享受早鸟价。门票数量有限，可按此折扣价购买，因此您需要在门票售完之前抢占席位。&lt;/p&gt;&lt;div class="btn-row "&gt; &lt;a class="btn btn--primary " href="https://grafana.com/about/events/observabilitycon/2024/?pg=blog&amp;amp;plcmt=body-txt" rel="noopener noreferrer"&gt;注册以获得通知&lt;/a&gt;&lt;/div&gt;&lt;h2 id="speaking-and-sponsorship-opportunities"&gt;演讲和赞助机会&lt;/h2&gt;&lt;p&gt;您有一个可观察性胜利或项目想要与更广泛的 Grafana 和开源社区分享吗？我们很乐意听取您的意见。&lt;/p&gt;&lt;p&gt; ObservabilityCON 2024 演讲者的演讲征集 (CFP) 现已开放，我们正在寻找各种技能水平的可观测性从业者和爱好者。您必须在&lt;strong&gt;6 月 10 日&lt;/strong&gt;之前申请我们纽约议程上的席位（以及免费的会议门票）——立即&lt;a href="https://grafana-labs.typeform.com/to/vu8bTIgT?typeform-source=www.google.com#src=xxxxx" rel="noopener noreferrer" target="_blank"&gt;提交您的故事&lt;/a&gt;。如果您需要一点灵感，可以查看去年 ObservabilityCON 活动中的&lt;a href="https://grafana.com/about/events/observabilitycon/2023/"&gt;这些点播演讲&lt;/a&gt;。&lt;/p&gt;&lt;figure class="figure-wrapper w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana-labs.typeform.com/to/vu8bTIgT?typeform-source=www.google.com#src=xxxxx"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="ObservabilityCON 2024 CFP 的图像。" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="ObservabilityCON 2024 CFP 的图像。" src="https://grafana.com/media/blog/observabilitycon2024_save_the_date/obscon2024_save_the_date_CFP.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;我们还提供有限的赞助机会。您可以联系&lt;a href="mailto:sponsors@grafana.com"&gt;sponsors@grafana.com&lt;/a&gt;了解更多信息。&lt;/p&gt;&lt;h2 id="cant-make-it-to-nyc"&gt;无法前往纽约？&lt;/h2&gt;&lt;p&gt;今年晚些时候，我们将在&lt;a href="https://grafana.com/about/events/observabilitycon/2024/on-the-road/berlin/"&gt;柏林&lt;/a&gt;、&lt;a href="https://grafana.com/about/events/observabilitycon/2024/on-the-road/london/"&gt;伦敦&lt;/a&gt;、巴黎（法语）和圣保罗（葡萄牙语）举办此活动的一日版本（不包括研讨会，加上本地用户故事）。&lt;a href="https://grafana.com/about/events/observabilitycon/2024/on-the-road/"&gt;了解有关 ObservabilityCON on the Road 的更多信息&lt;/a&gt;。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/about/events/observabilitycon/2024/?pg=blog&amp;amp;plcmt=body-txt"&gt;ObservabilityCON 2024&lt;/a&gt;倒计时已正式开始！我们一定会及时向您通报所有最新动态。如果您想探索其他即将举行的活动（无论是现场活动还是虚拟活动），请查看 Grafana Labs&lt;a href="https://grafana.com/about/events/?pg=blog&amp;amp;plcmt=body-txt"&gt;活动页面&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;</description><pubDate>Wed, 15 May 2024 12:08:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/15/observabilitycon-2024-is-coming-to-new-york/</guid></item><item><title>【Canvas panel in Grafana: create custom visualizations with all the latest features】Grafana 中的 Canvas 面板：使用所有最新功能创建自定义可视化效果</title><link>https://grafana.com/blog/2024/05/14/canvas-panel-in-grafana-create-custom-visualizations-with-all-the-latest-features/</link><description>&lt;p&gt;Grafana 10 中普遍提供的 Canvas 面板将 Grafana 的强大功能与自定义元素的灵活性结合在一起。&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/canvas/"&gt;画布可视化&lt;/a&gt;是可扩展的、表单构建的面板，可用于在静态和动态布局中显式放置元素。这允许您以标准 Grafana 面板无法实现的方式设计自定义可视化和叠加数据。最好的部分？这一切都可以在 Grafana 的 UI 中完成。&lt;/p&gt;&lt;p&gt;让我们看一下我们在&lt;a href="https://grafana.com/blog/2024/04/09/grafana-11-release-all-the-new-features/"&gt;Grafana 11&lt;/a&gt;中添加的所有令人兴奋的新功能，这些功能现已普遍可用。&lt;/p&gt;&lt;h3 id="flowcharting"&gt;流程图&lt;/h3&gt;&lt;p&gt;您现在可以使用画布面板构建丰富的动态流程图。从流程图到复杂的网络图，您可以创建和自定义连接以可视化元素之间的关系。&lt;/p&gt;&lt;p&gt;每个元素都有一系列可以连接的锚点。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/anchor-points-elements-grafana-canvas-panel.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示 Grafana Canvas 面板中元素上的锚点的图像" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="显示 Grafana Canvas 面板中元素上的锚点的图像" src="https://grafana.com/media/blog/canvas-panel-updates-G11/anchor-points-elements-grafana-canvas-panel.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;只需单击并从一个锚点拖动到另一个锚点即可创建新连接。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/new-connection-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Canvas 面板中新连接的 Gif" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana Canvas 面板中新连接的 Gif" src="https://grafana.com/media/blog/canvas-panel-updates-G11/new-connection-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;如果您喜欢冒险并且需要放手，您还可以创建不以固定点结束的联系！&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/no-anchor-connection-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Canvas 面板中无锚点连接的 Gif" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana Canvas 面板中无锚点连接的 Gif" src="https://grafana.com/media/blog/canvas-panel-updates-G11/no-anchor-connection-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;要更改连接的形状，只需拖动任何线段的中点控件即可创建新顶点。当您接近垂直或水平时，您会看到您的线段卡入到位。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/change-connection-shape-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Gif 改变 Grafana Canvas 面板中的连接形状" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Gif 改变 Grafana Canvas 面板中的连接形状" src="https://grafana.com/media/blog/canvas-panel-updates-G11/change-connection-shape-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;要删除顶点，请拖动它，直到它再次捕捉到直线。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/remove-vertex-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="从 Grafana Canvas 面板中删除顶点的 Gif" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="从 Grafana Canvas 面板中删除顶点的 Gif" src="https://grafana.com/media/blog/canvas-panel-updates-G11/remove-vertex-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;您定制的连接形状不会直接受到锚元素位置的影响。移动源元素和目标元素只会分别影响第一个和最后一个片段的显示方式。注意：保存模型以不关心元素是否移动的方式存储您的自定义连接形状。 TLDR：当元素移动时，你的顶点不会移动。&lt;/p&gt;&lt;p&gt;但是，删除元素将删除作为目标锚定到该元素的所有连接。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/remove-element-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Gif 从 Grafana Canvas 面板中删除元素" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Gif 从 Grafana Canvas 面板中删除元素" src="https://grafana.com/media/blog/canvas-panel-updates-G11/remove-element-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;您可以自定义连接的颜色、大小和圆角半径，甚至可以将此样式与您的数据联系起来。这对于找出有问题的连接特别有用！您还可以指定箭头方向、线条样式（实线、虚线、点线），甚至可以为连接设置动画以帮助可视化流程。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/customize-connections-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="" src="https://grafana.com/media/blog/canvas-panel-updates-G11/customize-connections-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;要删除连接，只需直接单击该连接，然后按&lt;strong&gt;删除&lt;/strong&gt;或&lt;strong&gt;退格&lt;/strong&gt;键即可。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/remove-connection-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="" src="https://grafana.com/media/blog/canvas-panel-updates-G11/remove-connection-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;要旋转某个元素，请首先选择它，然后单击并拖动旋转控件。要同时旋转多个元素，请在选择时按住 Shift 键以显示组旋转控件。&lt;/p&gt;&lt;p&gt;注意：虽然旋转会影响元素的锚点，但它不应影响连接的整体形状。考虑到这一点，您可能需要重新绘制连接才能捕获所需的结果。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/rotate-elements-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="在 Grafana Canvas 面板中旋转元素的 Gif" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="在 Grafana Canvas 面板中旋转元素的 Gif" src="https://grafana.com/media/blog/canvas-panel-updates-G11/rotate-elements-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;我们使用 Canvas 面板流程图的目标是让您能够可视化、理解并更好地控制您的复杂系统。您应该能够以用户友好的方式快速布置它，而不必担心通常脆弱的具体细节。把那些交给我们吧！&lt;/p&gt;&lt;p&gt;如果您想了解有关幕后细节的更多信息，我邀请您深入了解&lt;a href="https://github.com/grafana/grafana/tree/main/public/app/plugins/panel/canvas/components/connections" rel="noopener noreferrer" target="_blank"&gt;Canvas 连接背后的源代码&lt;/a&gt;。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/flowcharting-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Canvas 面板中流程图的 Gif 演示" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana Canvas 面板中流程图的 Gif 演示" src="https://grafana.com/media/blog/canvas-panel-updates-G11/flowcharting-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="create-interactive-buttons"&gt;创建交互式按钮&lt;/h3&gt;&lt;p&gt;您现在可以向画布面板添加交互式按钮。按钮可以配置为调用 API 端点。这将 Grafana 的功能推向了新的高度，允许您创建可用于控制外部系统的交互式仪表板。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/interactive-buttons-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana 画布面板中的交互式按钮的 Gif" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana 画布面板中的交互式按钮的 Gif" src="https://grafana.com/media/blog/canvas-panel-updates-G11/interactive-buttons-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;您可以使用基本的、未经身份验证的 HTTP 请求（例如 GET、POST 和 PUT）配置画布按钮，并支持各种有效负载内容类型，包括 JSON、文本、JavaScript 等。 API 编辑器还与&lt;a href="https://grafana.com/docs/grafana/latest/dashboards/variables/"&gt;仪表板变量&lt;/a&gt;完全兼容，因此您可以在配置 API 端点、查询参数、标头参数和负载时提供更多上下文！&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/api-editor-grafana-canvas-panel.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana 中的 API 编辑器 UI" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana 中的 API 编辑器 UI" src="https://grafana.com/media/blog/canvas-panel-updates-G11/api-editor-grafana-canvas-panel.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;画布按钮将 Grafana 转变为双向监控解决方案，我们很高兴看到社区如何采用它。到目前为止，我们已经看到&lt;a href="https://community.grafana.com/t/use-canvas-button-to-write-data-point-to-influxdb/108179" rel="noopener noreferrer" target="_blank"&gt;用户将数据写入 InfluxDB&lt;/a&gt;并尝试管理其 IT 基础设施，而无需离开 Grafana。&lt;/p&gt;&lt;h3 id="ease-of-use-improvements"&gt;易用性改进&lt;/h3&gt;&lt;h4 id="pan--zoom"&gt;平移 + 缩放&lt;/h4&gt;&lt;p&gt;对于特别大的画布，您可以启用平移和缩放功能切换以无缝导航您的设计。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/pan-zoom-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Canvas 面板中平移和缩放的 Gif" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana Canvas 面板中平移和缩放的 Gif" src="https://grafana.com/media/blog/canvas-panel-updates-G11/pan-zoom-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;要启用此功能，您必须首先启用&lt;code&gt;canvasPanelPanZoom&lt;/code&gt;&lt;a href="https://grafana.com/docs/grafana/next/setup-grafana/configure-grafana/feature-toggles/"&gt;功能切换&lt;/a&gt;。启用功能切换后，您可以打开&lt;code&gt;Pan and zoom&lt;/code&gt;以及&lt;code&gt;Infinite panning&lt;/code&gt;画布编辑器选项来测试它们。该功能处于公开预览阶段， &lt;a href="https://github.com/grafana/grafana/issues/new?assignees=&amp;amp;labels=&amp;amp;projects=&amp;amp;template=1-feature_requests.md&amp;amp;labels=area/panel/canvas" rel="noopener noreferrer" target="_blank"&gt;我们欢迎任何反馈&lt;/a&gt;。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/pan-zoom-controls-grafana-canvas-panel.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Canvas 面板 UI 中的平移和缩放控件" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana Canvas 面板 UI 中的平移和缩放控件" src="https://grafana.com/media/blog/canvas-panel-updates-G11/pan-zoom-controls-grafana-canvas-panel.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h4 id="snapping-and-alignment"&gt;捕捉和对齐&lt;/h4&gt;&lt;p&gt;在过去，相对于画布的其余部分精确放置一个元素或一组元素并不容易。现在，您可以轻松地捕捉和对齐画布上的一个或一组元素。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/snapping-alignment-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Canvas 面板中的捕捉和对齐的 Gif" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana Canvas 面板中的捕捉和对齐的 Gif" src="https://grafana.com/media/blog/canvas-panel-updates-G11/snapping-alignment-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h4 id="expanded-data-link-support"&gt;扩展的数据链路支持&lt;/h4&gt;&lt;p&gt;在“画布”面板中，现在支持数据链接的元素比以往更多。之前，支持仅限于文本和指标值元素。现在，几乎所有元素都支持数据链接。数据链接使您能够链接其他仪表板和外部资源，并以模板变量和数据的形式包含当前仪表板的上下文。要了解如何在画布中设置数据链接，请参阅我们的&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/canvas/#data-links"&gt;画布面板文档&lt;/a&gt;。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/canvas-panel-updates-G11/data-link-support-grafana-canvas-panel.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="Grafana Cavnas 面板中数据链接支持的 Gif" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="Grafana Cavnas 面板中数据链接支持的 Gif" src="https://grafana.com/media/blog/canvas-panel-updates-G11/data-link-support-grafana-canvas-panel.gif" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="get-started-with-the-canvas-panel-in-grafana"&gt;开始使用 Grafana 中的 Canvas 面板&lt;/h2&gt;&lt;p&gt;今天想查看 Grafana 中的 Canvas 面板吗？您可以&lt;a href="https://play.grafana.org/d/adl8u6nt2mfwgc/g11-canvas-demo?orgId=1&amp;amp;from=now-6h&amp;amp;to=now&amp;amp;refresh=5s" rel="noopener noreferrer" target="_blank"&gt;使用 play.grafana.org 上的演示仪表板&lt;/a&gt;探索本博客中概述的所有内容。&lt;/p&gt;&lt;p&gt;通过将所有这些令人兴奋的更新结合在一起，Canvas 面板正在发展成为 Grafana 中功能强大、多功能的可视化工具，使您能够将数据与适合您的具体用例的自定义可视化效果联系起来。&lt;/p&gt;&lt;h2 id="learn-more-about-grafana-11"&gt;了解有关 Grafana 11 的更多信息&lt;/h2&gt;&lt;p&gt;Grafana 11 已正式发布，并包含许多新功能，使 Grafana 更易于使用、操作和扩展。了解有关新功能的更多信息，包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://grafana.com/blog/2024/05/14/how-to-explore-metrics-without-promql-queries-in-grafana/"&gt;如何在不编写任何 PromQL 的情况下探索指标&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/blog/2024/05/14/grafana-transformations-10-new-ways-to-get-more-out-of-your-data/"&gt;通过转换充分利用数据的 10 种方法&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/blog/2024/05/14/grafana-alerting-new-tools-to-resolve-incidents-faster-and-avoid-alert-fatigue/"&gt;Grafana Alerting 中的最新工具可加快事件响应速度&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;要了解所有正在运行的最新功能，请观看 GrafanaCON 2024 的“ &lt;a href="https://youtu.be/8pPJ_X1xPfA?feature=shared" rel="noopener noreferrer" target="_blank"&gt;Grafana 11 Deep Dive&lt;/a&gt; ”会议，现已点播。&lt;/p&gt;&lt;p&gt;有关 Grafana 11 中所有新功能的详细列表，请查看我们的&lt;a href="https://grafana.com/docs/grafana/v11.0/"&gt;Grafana 文档&lt;/a&gt;、Grafana &lt;a href="https://github.com/grafana/grafana/blob/main/CHANGELOG.md" rel="noopener noreferrer" target="_blank"&gt;变更日志&lt;/a&gt;或我们的&lt;a href="https://grafana.com/docs/grafana/v11.0/whatsnew/whats-new-in-v11-0/?pg=blog&amp;amp;plcmt=body-txt"&gt;新增功能文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="upgrade-to-grafana-11"&gt;升级到 Grafana 11&lt;/h2&gt;&lt;p&gt;立即&lt;a href="https://grafana.com/grafana/download/11.0.0?pg=blog&amp;amp;plcmt=body-txt"&gt;下载 Grafana 11&lt;/a&gt;或通过注册&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;体验所有新功能，Grafana Cloud 为每个用例提供了实际有用的免费云套餐和计划。立即注册&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;免费的 Grafana Cloud&lt;/a&gt;帐户。&lt;/p&gt;&lt;p&gt;我们的&lt;a href="https://grafana.com/docs/grafana/latest/upgrade-guide/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 升级指南&lt;/a&gt;还为那些希望从早期版本升级的用户提供分步说明，以确保顺利过渡。&lt;/p&gt;&lt;h2 id="join-the-grafana-labs-community"&gt;加入 Grafana 实验室社区&lt;/h2&gt;&lt;p&gt;我们&lt;a href="https://github.com/grafana/grafana/issues/new?assignees=&amp;amp;labels=&amp;amp;projects=&amp;amp;template=1-feature_requests.md&amp;amp;labels=area/panel/canvas" rel="noopener noreferrer" target="_blank"&gt;欢迎您对 Canvas 提出任何反馈&lt;/a&gt;，并期待与社区就未来的开发进行合作。有兴趣了解 Canvas 的起源吗？查看&lt;a href="https://grafana.com/blog/2023/05/11/use-canvas-panels-to-customize-visualizations-in-grafana/"&gt;我们最初的 Canvas 面板博客文章&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;我们还邀请您参与&lt;a href="https://community.grafana.com/?pg=blog&amp;amp;plcmt=body-txt" rel="noopener noreferrer" target="_blank"&gt;Grafana Labs 社区论坛&lt;/a&gt;。分享您使用新功能的体验，讨论最佳实践，并探索将这些更新集成到您的工作流程中的创造性方法。&lt;/p&gt;&lt;h2 id="a-special-thanks-to-our-community"&gt;特别感谢我们的社区&lt;/h2&gt;&lt;p&gt;我们向&lt;a href="https://grafana.com/blog/2023/12/12/the-story-of-grafana-documentary-the-community-behind-the-code/"&gt;Grafana 社区&lt;/a&gt;表示衷心的感谢！&lt;/p&gt;&lt;p&gt;您的贡献，从拉取请求到有价值的反馈，对于不断增强 Grafana 至关重要。您的热情和奉献精神激励我们 Grafana Labs 不断创新并提升 Grafana 平台。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Tue, 14 May 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/14/canvas-panel-in-grafana-create-custom-visualizations-with-all-the-latest-features/</guid></item><item><title>【Grafana Alerting: new tools to resolve incidents faster and avoid alert fatigue】Grafana Alerting：更快解决事件并避免警报疲劳的新工具</title><link>https://grafana.com/blog/2024/05/14/grafana-alerting-new-tools-to-resolve-incidents-faster-and-avoid-alert-fatigue/</link><description>&lt;p&gt;警报策略的成熟度直接影响基础设施和应用程序的可靠性。它还会对工程生产力产生重大影响。因此，无论您是在谈论更快地解决事件还是避免警报疲劳，警报都应该始终处于首要位置。&lt;/p&gt;&lt;p&gt;借助&lt;a href="https://grafana.com/products/cloud/alerting/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Alerting&lt;/a&gt; ，无论数据存储在何处，您都可以针对日志和指标发出警报，这使其成为整合和自动化观察系统方式的强大工具。近几个月来，我们努力让创建、管理和分类警报变得更加容易。我们还致力于满足企业用户的需求，这些用户希望围绕代码部署实现可扩展性，并支持在同一环境中工作的多个团队。&lt;/p&gt;&lt;p&gt;在这篇博文中，我们将回顾在&lt;a href="https://grafana.com/blog/2024/04/09/grafana-11-release-all-the-new-features/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 11&lt;/a&gt;的道路上所做的一些令人兴奋的更新，该版本现已普遍可用。这些升级可以帮助您更快地识别和解决问题，并提高在凌晨 3 点出现问题时收到通知的工程师的生活质量&lt;/p&gt;&lt;p&gt;要深入了解 Grafana 警报的最新功能，您还可以查看 GrafanaCON 2024 的“ &lt;a href="https://grafana.com/about/events/grafanacon/2024/grafana-alerting-tips-and-tricks-and-roadmap/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 警报的演变&lt;/a&gt;”会议，该会议可供点播观看。&lt;/p&gt;&lt;h2 id="dynamic-alert-routing-simplified"&gt;简化动态警报路由&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;可用性：&lt;/strong&gt; Grafana Cloud、Grafana Enterprise、Grafana OSS&lt;/p&gt;&lt;p&gt;您已经可以向 Grafana 警报中的通知策略添加标签，以将警报路由到不同的接收者（电子邮件、Slack、Grafana OnCall 等），以便修改警报的发送位置。这种动态功能非常强大，但对于不熟悉这种独特方法的用户以及不需要设置动态路由树的用户来说，通常会感到困惑。虽然一些用户喜欢这个功能，但其他用户发现自己要么制造了比他们解决的问题更多的问题，要么干脆完全绕过了它。&lt;/p&gt;&lt;p&gt;通过简化的路由，我们采用了相同的功能并将其抽象化，这&lt;a href="https://grafana.com/blog/2024/04/02/simplified-routing-in-grafana-alerting-easy-secure-and-powerful/?pg=blog&amp;amp;plcmt=body-txt"&gt;解决了阻止许多用户利用这些功能的复杂性问题&lt;/a&gt;。现在，您只需选择希望警报发送到的联系点，我们就会在后台自动生成该策略。然后，您可以修改策略、静音计时、更改分组等等。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;h2 id="a-new-dashboard-view-designed-to-expedite-triage"&gt; 旨在加快分类速度的新仪表板视图&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;可用性：&lt;/strong&gt; Grafana Cloud、Grafana Enterprise、Grafana OSS&lt;/p&gt;&lt;p&gt;我们重新设计了警报详细信息视图，以更好地促进警报分类。这会将隐藏在 UI 中的重要信息（例如特定警报的查询）汇集在一起​​，并在您首次打开页面时轻松扫描。现在，您将在面包屑导航中找到命名空间和组，您可以使用它们轻松过滤规则。&lt;/p&gt;&lt;p&gt;我们还添加了“历史记录”选项卡，使您可以更轻松地了解发生的情况，提供功能更丰富的实例视图，并改进了布局以使整个体验更加顺畅。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/alerting-latest-11/signal-to-noisepng.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="信噪比仪表板" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="信噪比仪表板" src="https://grafana.com/media/blog/alerting-latest-11/signal-to-noisepng.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="tco-reduction-through-updated-rule-evaluations"&gt;通过更新规则评估降低 TCO&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;可用性：&lt;/strong&gt; Grafana Cloud、Grafana Enterprise、Grafana OSS&lt;/p&gt;&lt;p&gt;我们刚刚对规则评估进行了更新，通过消除存储某些历史数据的需要并解决现有的内存泄漏问题，应该为几乎所有 Grafana Alerting 用户提供重大改进。&lt;/p&gt;&lt;p&gt;以前，状态管理器存储多个先前评估的结果，这意味着用户能够编写最终消耗所有可用内存的规则。但由于 Grafana Alerting 仅读取最新的评估，因此我们更新了系统，仅保留我们需要的最新数据。&lt;/p&gt;&lt;p&gt;我们预计 Grafana Alerting 的重度用户将能够通过此修复节省千兆字节的数据存储。即使在具有五个简单规则的基本实例上，此修复也可以将整个 Grafana 内存使用量减少多达 30%！为了说明节省的情况，请查看下图，其中所有三个时间序列都跟踪相同的警报规则。最上面的行是没有修复的内存使用情况，下面的行是有修复的内存使用情况。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/alerting-latest-11/memory-savings.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="时间序列图显示更改前后的内存使用情况" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="时间序列图显示更改前后的内存使用情况" src="https://grafana.com/media/blog/alerting-latest-11/memory-savings.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="keep-last-state-to-reduce-noise"&gt; “保持最后状态”以减少噪音&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;可用性：&lt;/strong&gt; Grafana Cloud、Grafana Enterprise、Grafana OSS&lt;/p&gt;&lt;p&gt;我们很高兴与大家分享，“ &lt;a href="https://grafana.com/docs/grafana/latest/alerting/fundamentals/alert-rules/state-and-health/?pg=blog&amp;amp;plcmt=body-txt#keep-last-state"&gt;保持最后状态&lt;/a&gt;”是一种在我们已弃用的旧版警报中很流行的降噪设置，现在可在当前版本的 Grafana 警报中使用。&lt;/p&gt;&lt;p&gt;您是否曾经遇到过间歇性的&lt;code&gt;NoData&lt;/code&gt;或&lt;code&gt;Error&lt;/code&gt;警报，并且不确定是否要发出警报还是维持现状？此设置为这一困境提供了细致入微的解决方案，体现了这样的概念：来自数据源的这些响应不一定等同于系统状态的更改。&lt;/p&gt;&lt;p&gt;此设置不会仓促下结论，而是维护每个实例的最后已知状态。因此，如果一个区域在遇到&lt;code&gt;NoData&lt;/code&gt;或&lt;code&gt;Error&lt;/code&gt;之前运行正常，它将保持在&lt;code&gt;Normal&lt;/code&gt;状态，而当前有问题的区域将继续&lt;code&gt;Firing&lt;/code&gt; 。这确保警报能够更动态地适应不断变化的条件，而不会过早发出警报或消除潜在问题。&lt;/p&gt;&lt;p&gt;然而，必须注意的是，这并不是万无一失的。长时间的&lt;code&gt;NoData&lt;/code&gt;或&lt;code&gt;Error&lt;/code&gt;响应可能最终会破坏假设最后已知状态的可靠性。对于严格监控至关重要的情况，仅依赖此设置可能并不合适。在这些情况下，请使用不同的设置或添加单独的警报规则，以确保有效地发现长期的数据源问题。&lt;/p&gt;&lt;h2 id="enhanced-security-for-as-code-deployments"&gt;增强代码部署的安全性&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;可用性：&lt;/strong&gt; Grafana Cloud、Grafana Enterprise、Grafana OSS&lt;/p&gt;&lt;p&gt;我们添加了用于角色配置的 RBAC，这允许普通用户更安全地访问 Grafana Alerting 的配置 API。以前，您需要一个服务管理员帐户，因此团队在不同的用户组之间共享访问权限。这可能会产生安全问题，因为它为这些用户提供了服务器范围的设置和资源。&lt;/p&gt;&lt;p&gt;但通过 RBAC，这些用户可以访问 API 来创建或静音警报，并且管理员可以确信访问权限将与他们的&lt;a href="https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 权限&lt;/a&gt;相关联。这对于以代码形式运行警报的团队特别有用，因为您不需要为所有用户提供管理员级别访问权限。&lt;/p&gt;&lt;h2 id="tighter-integration-withgrafana-oncall"&gt;与 Grafana OnCall 更紧密的集成&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;可用性：&lt;/strong&gt; Grafana Cloud、Grafana Enterprise、Grafana OSS&lt;/p&gt;&lt;p&gt; Grafana OnCall &lt;a href="https://grafana.com/docs/oncall/latest/integrations/grafana-alerting/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在是 Grafana Alerting 的一等公民&lt;/a&gt;。 Grafana OnCall 现在是它自己的联系点类型，这使得从一个 UI 启动您的 OnCall 设置或通过下拉选择连接到现有 OnCall 集成变得非常简单。您可以获得大量功能，并且不再需要自定义 Webhook，从而可以轻松识别警报工作流程中的特定 OnCall 集成。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/alerting-latest-11/oncall-integration.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="UI 中新的 Grafana OnCall 集成菜单" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="UI 中新的 Grafana OnCall 集成菜单" src="https://grafana.com/media/blog/alerting-latest-11/oncall-integration.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="distributed-evaluation-intervals-for-more-consistent-performance"&gt;分布式评估间隔以获得更一致的性能&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;可用性：&lt;/strong&gt; Grafana Cloud、Grafana Enterprise、Grafana OSS&lt;/p&gt;&lt;p&gt;当您在 Grafana Alerting 中制定规则并将其添加到不同的评估组时，这些组可能具有不同的评估窗口。然后，这些窗口定义警报命中数据源的频率，以便您可以查看警报是否正在触发。这增加了一些很好的灵活性，但也可能导致问题。&lt;/p&gt;&lt;p&gt;以前，所有规则都是在这些时间间隔开始时进行评估，这会产生大量请求。这导致查询数据源的资源利用率突然飙升，从而降低性能甚至使繁忙的数据库崩溃。通过最近对 Grafana Alerting 的更新，我们将评估分散到整个时间范围内，因此您消耗的资源更少，并且不必担心那些突然的峰值。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/alerting-latest-11/rule-evaluation.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="图表显示评估间隔更改后从大峰值到一致性能的变化" class="lazyload " /&gt; &lt;noscript&gt;&lt;img alt="图表显示评估间隔更改后从大峰值到一致性能的变化" src="https://grafana.com/media/blog/alerting-latest-11/rule-evaluation.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;把它想象成经营票房。如果您安排所有客户同时前来购票，您会收到大量请求，排起长队，并且您必须加倍努力才能满足您的所有请求。但是，如果您将客户分开，那么您就不需要开放那么多的摊位，并且可以用更少的资源满足所有请求。&lt;/p&gt;&lt;h2 id="reduce-noise-with-recovery-threshold-for-alerts"&gt;通过警报恢复阈值减少噪音&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;可用性：&lt;/strong&gt; Grafana Cloud、Grafana Enterprise、Grafana OSS&lt;/p&gt;&lt;p&gt;警报阈值是主动可观察性策略的基础部分。例如，您可以设置在服务器利用率达到 90% 时触发警报，以便您可以在服务器运行温度升高且性能开始下降之前进行必要的调整。这很棒，但它不允许有很多细微差别。更重要的是，它还会导致不断的警报&lt;a href="https://en.wikipedia.org/wiki/Route_flapping" rel="noopener noreferrer" target="_blank"&gt;扑动&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;当触发相同的警报并解决该警报时，就会发生这种情况，但利用率仍然未达到需要的水平。假设同一台服务器的利用率为 85%。警报会得到解决，但很可能很快就会再次触发，您会发现自己陷入警报和解决方案的循环中。&lt;/p&gt;&lt;p&gt;现在，您可以为何时触发警报以及何时解决警报设置不同的阈值。因此，对于相同的 90% 触发规则，您可以将解析规则设置为 70% 利用率。这样，当您对警报进行分类时，您可以更好地了解如何将其降低到您满意的水平。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/alerting-latest-11/threshold.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="UI 中“阈值”菜单的屏幕截图" class="lazyload " /&gt;&lt;noscript&gt;&lt;img alt="UI 中“阈值”菜单的屏幕截图" src="https://grafana.com/media/blog/alerting-latest-11/threshold.png" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="more-grafana-alerting-goodness"&gt;更多 Grafana 警报善良&lt;/h2&gt;&lt;p&gt;我们刚刚完成了 Grafana Alerting 的一些重大更新，但我们还进行了更多更改来改进和简化您的使用方式，包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;将警报资源导出到 Terraform。&lt;/strong&gt;您现在可以将警报规则、联系点、通知策略等导出为 Terraform 资源，以便您可以在代码工具中开始配置资源。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;通过仪表板查看警报。&lt;/strong&gt;我们在仪表板顶部添加了一个警报按钮，它将向您显示与该仪表板相关的所有警报。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;更轻松地评估路由性能。&lt;/strong&gt;我们改进了联系点列表视图，以便更轻松地查看某个联系点是否正在使用、上次运行时间以及完成行程需要多长时间。这应该会简化调试数据源集成的任何性能问题的过程。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;在通知策略中使用新字符。&lt;/strong&gt;我们添加了&lt;a href="https://en.wikipedia.org/wiki/UTF-8" rel="noopener noreferrer" target="_blank"&gt;UTF-8&lt;/a&gt;支持，以便您可以将表情符号和其他字符添加到通知中。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;全面了解警报性能。&lt;/strong&gt;我们为 Grafana Cloud 用户添加了一个见解页面，以便在一个地方查看他们的整个设置。您可以查看哪些警报触发次数最多、评估故障、查看性能统计数据等等。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我们知道警报对于您的可观察性策略有多重要，因此我们将继续添加功能并使 Grafana Alerting 的使用更加容易。与此同时，如果您仍在使用我们的旧版警报，请查看&lt;a href="https://grafana.com/blog/2024/04/04/legacy-alerting-removal-what-you-need-to-know-about-upgrading-to-grafana-alerting/?pg=blog&amp;amp;plcmt=body-txt"&gt;此博文&lt;/a&gt;，其中为您提供了有关如何以及为何立即进行转换所需的一切信息。&lt;/p&gt;&lt;h2 id="learn-more-about-grafana-11"&gt;了解有关 Grafana 11 的更多信息&lt;/h2&gt;&lt;p&gt;Grafana 11 已正式发布，并包含许多新功能，使 Grafana 更易于使用、操作和扩展。了解有关新功能的更多信息，包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://grafana.com/blog/2024/05/14/how-to-explore-metrics-without-promql-queries-in-grafana/"&gt;如何在不编写任何 PromQL 的情况下探索指标&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/blog/2024/05/14/grafana-transformations-10-new-ways-to-get-more-out-of-your-data/"&gt;通过转换充分利用数据的 10 种方法&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://grafana.com/blog/2024/05/14/grafana-alerting-new-tools-to-resolve-incidents-faster-and-avoid-alert-fatigue/"&gt;&lt;/a&gt; &lt;a href="https://grafana.com/blog/2024/05/14/canvas-panel-in-grafana-create-custom-visualizations-with-all-the-latest-features/"&gt;如何使用 Canvas 面板中的最新工具创建自定义可视化效果&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;要了解所有正在运行的最新功能，请观看 GrafanaCON 2024 的“ &lt;a href="https://grafana.com/about/events/grafanacon/2024/grafana-11-deep-dive/"&gt;Grafana 11 Deep Dive&lt;/a&gt; ”会议，现已点播。&lt;/p&gt;&lt;p&gt;有关 Grafana 11 中所有新功能的详细列表，请查看我们的&lt;a href="https://grafana.com/docs/grafana/v11.0/"&gt;Grafana 文档&lt;/a&gt;、Grafana &lt;a href="https://github.com/grafana/grafana/blob/main/CHANGELOG.md" rel="noopener noreferrer" target="_blank"&gt;变更日志&lt;/a&gt;或我们的&lt;a href="https://grafana.com/docs/grafana/v11.0/whatsnew/whats-new-in-v11-0/?pg=blog&amp;amp;plcmt=body-txt"&gt;新增功能文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="upgrade-to-grafana-11"&gt;升级到 Grafana 11&lt;/h2&gt;&lt;p&gt;立即&lt;a href="https://grafana.com/grafana/download/11.0.0?pg=blog&amp;amp;plcmt=body-txt"&gt;下载 Grafana 11&lt;/a&gt;或通过注册&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;体验所有新功能，Grafana Cloud 为每个用例提供了实际有用的免费云套餐和计划。立即注册&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;免费的 Grafana Cloud&lt;/a&gt;帐户。&lt;/p&gt;&lt;p&gt;我们的&lt;a href="https://grafana.com/docs/grafana/latest/upgrade-guide/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 升级指南&lt;/a&gt;还为那些希望从早期版本升级的用户提供分步说明，以确保顺利过渡。&lt;/p&gt;&lt;h2 id="join-the-grafana-labs-community"&gt;加入 Grafana 实验室社区&lt;/h2&gt;&lt;p&gt;我们还邀请您在&lt;a href="https://community.grafana.com/?pg=blog&amp;amp;plcmt=body-txt" rel="noopener noreferrer" target="_blank"&gt;Grafana Labs 社区论坛&lt;/a&gt;中与其他 Grafana 用户互动。分享您使用新功能的体验，讨论最佳实践，并探索将这些更新集成到您的工作流程中的创造性方法。&lt;/p&gt;&lt;h2 id="a-special-thanks-to-our-community"&gt;特别感谢我们的社区&lt;/h2&gt;&lt;p&gt;我们向&lt;a href="https://grafana.com/blog/2023/12/12/the-story-of-grafana-documentary-the-community-behind-the-code/"&gt;Grafana 社区&lt;/a&gt;表示衷心的感谢！&lt;/p&gt;&lt;p&gt;您的贡献，从拉取请求到有价值的反馈，对于不断增强 Grafana 至关重要。您的热情和奉献精神激励我们 Grafana Labs 不断创新并提升 Grafana 平台。&lt;/p&gt;</description><pubDate>Tue, 14 May 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/05/14/grafana-alerting-new-tools-to-resolve-incidents-faster-and-avoid-alert-fatigue/</guid></item></channel></rss>