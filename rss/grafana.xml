<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Grafana Labs 上的 Grafana Labs 博客</title><link>https://grafana.com/blog/</link><description>Grafana Labs 上的 Grafana Labs 博客中的最​​新内容</description><lastBuildDate>Sat, 29 Jun 2024 03:05:45 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>【Grafana security update: Grafana Loki and unintended data write attempts to Amazon S3 buckets】</title><link>https://grafana.com/blog/2024/06/27/grafana-security-update-grafana-loki-and-unintended-data-write-attempts-to-amazon-s3-buckets/</link><description>&lt;blockquote&gt;&lt;p&gt;编者注：我们更新了副本，以反映 Google 合作伙伴的更改。 （世界标准时间 6 月 27 日 19:00）&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;em&gt;出于谨慎考虑，我们将此作为安全建议发布。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;您可能读过或听说过 Medium 博客文章“ &lt;a href="https://medium.com/@maciej.pocwierz/how-an-empty-s3-bucket-can-make-your-aws-bill-explode-934a383cb8b1" rel="noopener noreferrer" target="_blank"&gt;空的 S3 存储桶如何让您的 AWS 账单爆炸&lt;/a&gt;”，其中描述了对 Amazon S3 存储桶进行未经授权的写入尝试如何导致 1,300 美元的账单，以及 AWS 随后的新闻对 S3 进行了更改，其中客户未发起的未经授权的请求是免费的。 &lt;a href="https://medium.com/@maciej.pocwierz?source=post_page-----934a383cb8b1--------------------------------" rel="noopener noreferrer" target="_blank"&gt;Maciej Pocwierz&lt;/a&gt;在最初的报告中表示，未经授权的写入是由一个未命名的开源项目在 S3 存储桶中存储备份的默认配置造成的。&lt;/p&gt;&lt;p&gt;所讨论的开源项目是 Grafana Loki，我们的日志聚合工具。部分根本原因是为了方便使用 MinIO，在&lt;a href="https://grafana.com/docs/loki/latest/setup/install/helm/?pg=blog&amp;amp;plcmt=body-txt"&gt;Loki Helm 图表&lt;/a&gt;中使用了默认值&lt;code&gt;chunks&lt;/code&gt; 。当 Maciej 创建名为&lt;code&gt;chunks&lt;/code&gt; AWS 存储桶时，它显示为其他 AWS 客户的有效目标。该存储桶是在没有全局可写权限的情况下创建的，但被拒绝的写入尝试仍会计费。&lt;/p&gt;&lt;p&gt;为了解决这个问题，我们更新了 Loki Helm 图表，删除了默认存储桶名称（使用 MinIO 时除外）。&lt;/p&gt;&lt;p&gt;现在我们的调查已经结束，我们将发布这篇博文。我们要感谢 Maciej 通过我们的&lt;a href="https://app.intigriti.com/programs/grafanalabs/grafanaossbbp/detail" rel="noopener noreferrer" target="_blank"&gt;错误赏金计划&lt;/a&gt;负责任地向我们披露了这个问题。&lt;/p&gt;&lt;h2 id="who-is-impacted"&gt;谁受到影响&lt;/h2&gt;&lt;p&gt;AWS 支持超越组织边界的存储桶命名空间；因此，第三方可以创建一个对其他人和您而言显示为有效目标的存储桶名称。我们已与 AWS 合作，确认这些默认存储桶名称当前由合法实体声明，并且配置方式不允许进行数据收集。出于谨慎考虑，我们建议在 AWS 上部署 Loki 或 Grafana Enterprise Logs (GEL) 的用户升级其 Helm 图表或更改其存储桶的名称，如下面的解决方案和缓解措施部分所述。&lt;/p&gt;&lt;p&gt; Google Cloud 支持全局唯一的存储桶命名空间。我们已与 Google 合作，确认 Google Cloud 用户未受到影响。出于谨慎考虑，我们建议在 Google Cloud 上部署 Loki 或 GEL 的用户升级其 Helm 图表或更改其存储桶的名称，如解决方案和缓解措施部分中所述。&lt;/p&gt;&lt;p&gt; Microsoft Azure 不支持超出组织边界的存储桶命名空间，因此在 Azure 上部署 Loki 或 GEL 的用户&lt;strong&gt;不会受到影响&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt; Grafana Cloud 客户&lt;strong&gt;不受影响&lt;/strong&gt;。&lt;/p&gt;&lt;h2 id="background"&gt;背景&lt;/h2&gt;&lt;p&gt;Loki 将其数据存储在与 S3 兼容的对象存储中。为了方便本地安装，Loki Helm 图表包含本地 MinIO 安装的默认值。&lt;/p&gt;&lt;p&gt; &lt;a href="https://medium.com/@maciej.pocwierz?source=post_page-----934a383cb8b1--------------------------------" rel="noopener noreferrer" target="_blank"&gt;Maciej Pocwierz&lt;/a&gt;是&lt;a href="https://www.semantive.com/" rel="noopener noreferrer" target="_blank"&gt;Semantive&lt;/a&gt;的高级软件工程师，也是《 &lt;a href="https://medium.com/@maciej.pocwierz/how-an-empty-s3-bucket-can-make-your-aws-bill-explode-934a383cb8b1" rel="noopener noreferrer" target="_blank"&gt;空的 S3 存储桶如何让你的 AWS 账单爆炸》一&lt;/a&gt;书的作者，他报告说，他因未经授权的写入尝试而被收取了 1,300 美元的费用。在配置 S3 存储时，他使用了与 Loki Helm 图表默认名称相同的名称。这在 AWS 中创建了一条数据路径，如果这些集群是使用默认存储桶配置通过 Helm 安装的，Loki 集群可以尝试写入该数据路径。根据 Maciej 的说法，他后来将他的存储桶设置为世界可写 30 秒，并收集了大约 10GB 的数据。他联系了这些数据的来源公司，但在他发表博客文章时，还没有收到回复。&lt;/p&gt;&lt;p&gt;此后，AWS &lt;a href="https://aws.amazon.com/about-aws/whats-new/2024/05/amazon-s3-no-charge-http-error-codes/" rel="noopener noreferrer" target="_blank"&gt;宣布对 Amazon S3 进行计费更改&lt;/a&gt;，不再对来自其 AWS 账户或 AWS 组织外部的任何未经授权的 PUT 请求收费。&lt;/p&gt;&lt;p&gt;在此之前，在 AWS 上使用这些默认存储桶名称运行的任何 Loki 或 GEL 部署都没有有效的写入目标。这些集群只能查询本地缓存的数据，这会使集群基本上毫无用处。因此，我们有相对较高的信心，没有人会长期运行未配置的集群，即使是作为试验。&lt;/p&gt;&lt;h2 id="impacted-versions"&gt;受影响的版本&lt;/h2&gt;&lt;p&gt;Grafana Loki 和 Grafana Enterprise Logs 的 Loki Helm 图表从 3.0.0 到 5.47.2，另外还有 6.0.0&lt;/p&gt;&lt;p&gt;作为功​​能检查：Helm 图表中的默认存储桶未配置为全局写入，因此处于此错误配置状态的集群只能返回过去两个小时的数据。因此，返回超过两个小时数据的集群不太可能受到影响。&lt;/p&gt;&lt;h2 id="patched-versions"&gt;修补版本&lt;/h2&gt;&lt;p&gt;Grafana Loki 和 Grafana Enterprise Logs 版本&lt;a href="https://github.com/grafana/helm-charts/releases/download/helm-loki-5.48.0/loki-5.48.0.tgz" rel="noopener noreferrer" target="_blank"&gt;5.48.0&lt;/a&gt;和&lt;a href="https://github.com/grafana/helm-charts/releases/download/helm-loki-6.1.0/loki-6.1.0.tgz" rel="noopener noreferrer" target="_blank"&gt;6.1.0&lt;/a&gt;的 Loki Helm 图表已修补。&lt;/p&gt;&lt;h2 id="solutions-and-mitigations"&gt;解决方案和缓解措施&lt;/h2&gt;&lt;p&gt;有几种解决方案：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;将 Loki Helm 图表升级到版本&lt;a href="https://github.com/grafana/helm-charts/releases/download/helm-loki-5.48.0/loki-5.48.0.tgz" rel="noopener noreferrer" target="_blank"&gt;5.48.0&lt;/a&gt;或&lt;a href="https://github.com/grafana/helm-charts/releases/download/helm-loki-6.1.0/loki-6.1.0.tgz" rel="noopener noreferrer" target="_blank"&gt;6.1.0&lt;/a&gt;或更高版本。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="https://grafana.com/docs/loki/latest/setup/install/helm/configure-storage/"&gt;配置您的存储&lt;/a&gt;：在您的&lt;code&gt;values.yaml&lt;/code&gt;中，将适用于您的实例的所有内容更改为以下内容：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;code&gt;loki.storage.bucketNames.chunks&lt;/code&gt;远离&lt;code&gt;chunks&lt;/code&gt;&lt;/li&gt;&lt;li&gt; &lt;code&gt;loki.storage.bucketNames.ruler&lt;/code&gt;远离&lt;code&gt;ruler&lt;/code&gt;&lt;/li&gt;&lt;li&gt; &lt;code&gt;loki.storage.bucketNames.admin&lt;/code&gt;远离&lt;code&gt;admin&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;上游修复是不再在 Loki Helm 图表中提供默认值。当用户启动 MinIO 实例时，Loki Helm 图表只会配置 MinIO 默认值。&lt;/p&gt;&lt;p&gt;对于签约客户，我们已尽力帮助缓解任何问题。&lt;/p&gt;&lt;h2 id="timeline"&gt;时间线&lt;/h2&gt;&lt;p&gt;所有时间均采用 UTC 时间&lt;/p&gt;&lt;p&gt;2024-04-09 15:34：Maciej Pocwierz 通过我们的错误赏金计划向 Grafana Labs 报告。&lt;br /&gt; 2024-04-09 17:04：报告已分类。&lt;br /&gt; 2024-04-09 17:04：升级至Loki团队进行调查并确认。&lt;br /&gt; 2024-04-09 19:27：事件宣布。&lt;br /&gt; 2024-04-09 20:32：Loki 团队部分复制。&lt;br /&gt; 2024-04-09 22:35：PR 合并到 Loki Helm 图表版本 6.1.0 修复了该问题。&lt;br /&gt; 2024-04-09 22:35：Loki Helm 图表版本 6.1.0 发布。&lt;br /&gt; 2024-04-10 19:01：AWS 与 Google Cloud 取得联系。&lt;br /&gt; 2024-04-11 06:24：AWS 确认除 5xx 之外的所有未经授权的第三方请求都会计费。&lt;br /&gt; 2024-05-03 01:28：Google Cloud 确认失败的请求不会计费。&lt;br /&gt; 2024-05-06 15:43：PR 合并到 Loki Helm 图表版本 5.48.0 修复了该问题。&lt;br /&gt; 2024-05-06 15:43：Loki Helm 图表版本 5.48.0 发布。&lt;br /&gt; 2024-05-08 14:20：Google Cloud 确认这些存储桶由合法实体声明，并且已以阻止数据收集的方式进行配置。&lt;br /&gt; 2024-05-13 17:30：AWS 对 Amazon S3 进行了更改，其中客户未发起的未经授权的请求是免费的。&lt;br /&gt; 2024-05-31 17:43：AWS 确认这些存储桶由合法实体声明，并且配置方式不允许进行数据收集。&lt;br /&gt; 2024-06-27 05:30：此博文的所有云合作伙伴评论已完成。&lt;br /&gt; 2024-06-27 17:00：博客发布。&lt;br /&gt; 2024-06-27 19:00：博客已更新，以反映 Google 合作伙伴的更改。&lt;/p&gt;&lt;h2 id="reporting-security-issues"&gt;报告安全问题&lt;/h2&gt;&lt;p&gt;如果您认为发现了安全漏洞，请访问我们的&lt;a href="https://grafana.com/legal/report-a-security-issue/?pg=blog&amp;amp;plcmt=body-txt"&gt;报告安全问题页面&lt;/a&gt;，了解如何发送安全报告。&lt;/p&gt;&lt;p&gt; Grafana Labs 将向您发送回复，指示处理您的报告的后续步骤。在对您的报告进行初步回复后，安全团队将随时向您通报修复进度和完整公告，并可能要求您提供其他信息或指导。&lt;/p&gt;&lt;p&gt;&lt;em&gt;重要提示：我们要求您在漏洞修复和公布之前不要披露该漏洞，除非您收到 Grafana Labs 安全团队的回复表明您可以这样做。&lt;/em&gt;&lt;/p&gt;&lt;h2 id="security-announcements"&gt;安全公告&lt;/h2&gt;&lt;p&gt;我们在博客上维护一个&lt;a href="https://grafana.com/tags/security/?pg=blog&amp;amp;plcmt=body-txt"&gt;安全类别&lt;/a&gt;，我们将始终在其中发布包含安全修复程序的任何补丁的摘要、修复和缓解详细信息。您还可以订阅我们的&lt;a href="https://grafana.com/tags/security/index.xml"&gt;RSS 源&lt;/a&gt;。&lt;/p&gt;</description><pubDate>Thu, 27 Jun 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/27/grafana-security-update-grafana-loki-and-unintended-data-write-attempts-to-amazon-s3-buckets/</guid></item><item><title>【ObservabilityCON 2024: Register and reserve your spot today!】</title><link>https://grafana.com/blog/2024/06/26/observabilitycon-2024-register-and-reserve-your-spot-today/</link><description>&lt;p&gt;开始传播消息： &lt;a href="https://grafana.com/events/observabilitycon/?pg=blog&amp;amp;plcmt=body-txt"&gt;ObservabilityCON 2024&lt;/a&gt;将于 9 月 24 日至 25 日在纽约市举行，报名现已正式开放！&lt;/p&gt;&lt;p&gt;加入我们的旗舰可观测性活动，探索 Grafana LGTM Stack（用于日志的&lt;a href="https://grafana.com/docs/loki/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Loki&lt;/a&gt; 、用于可视化的&lt;a href="https://grafana.com/docs/grafana/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana&lt;/a&gt; 、用于跟踪的&lt;a href="https://grafana.com/docs/tempo/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Tempo&lt;/a&gt;和用于指标的&lt;a href="https://grafana.com/docs/mimir/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Mimir&lt;/a&gt; ）的所有最新更新，与行业专家联系，并获得可操作的建议，以推进您的组织的发展可观察性策略。&lt;/p&gt;&lt;p&gt;您&lt;a href="https://grafana.com/events/observabilitycon/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在就可以注册&lt;/a&gt;，享受早鸟价，购买标准全价门票可节省 50%。门票数量有限，可享受此折扣 — 并且在纽约几分钟之内就会售空 — 所以今天就预订吧！&lt;/p&gt;&lt;div class="btn-row "&gt; &lt;a class="btn btn--primary " href="https://grafana.com/events/observabilitycon/?pg=blog&amp;amp;plcmt=body-txt" rel="noopener noreferrer"&gt;注册 ObservabilityCON 2024&lt;/a&gt;&lt;/div&gt;&lt;h2 id="observabilitycon-2024-agenda-spotlight-hands-on-workshops"&gt; ObservabilityCON 2024 议程焦点：实践研讨会&lt;/h2&gt;&lt;p&gt;我们为 ObservabilityCON 2024 制定了内容丰富、鼓舞人心且内容丰富的议程。&lt;/p&gt;&lt;p&gt;除了开幕主题演讲、技术深入探讨会议和社区经验教训之外，我们还将在 9 月 24 日举办&lt;a href="https://grafana.com/events/observabilitycon/2024/workshops/?pg=blog&amp;amp;plcmt=body-txt"&gt;实践研讨会&lt;/a&gt;，帮助您提高技术技能、学习如何开始使用 OpenTelemetry 等。&lt;/p&gt;&lt;p&gt;今年的研讨会阵容包括： &lt;/p&gt;&lt;h3 id="introduction-to-observability-with-grafana-cloudhttpsgrafanacomeventsobservabilitycon2024workshopsintro-to-observability-with-grafana-cloudpgblogplcmtbody-txt"&gt; &lt;a href="https://grafana.com/events/observabilitycon/2024/workshops/intro-to-observability-with-grafana-cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud 的可观察性简介&lt;/a&gt;&lt;/h3&gt;&lt;figure class="figure-wrapper w-100p "&gt;&lt;a class="lightbox-link" href="https://grafana.com/events/observabilitycon/2024/workshops/intro-to-observability-with-grafana-cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/events/obscon/registration/Obscon24---intro-to-obs.png"data-srcset="/media/events/obscon/registration/Obscon24---intro-to-obs.png?w=320 320w, /media/events/obscon/registration/Obscon24---intro-to-obs.png?w=550 550w, /media/events/obscon/registration/Obscon24---intro-to-obs.png?w=750 750w, /media/events/obscon/registration/Obscon24---intro-to-obs.png?w=900 900w, /media/events/obscon/registration/Obscon24---intro-to-obs.png?w=1040 1040w, /media/events/obscon/registration/Obscon24---intro-to-obs.png?w=1240 1240w, /media/events/obscon/registration/Obscon24---intro-to-obs.png?w=1920 1920w"
data-sizes="auto"alt="Grafana Cloud 研讨会的会议卡。"
width="1200"
height="628"
/&gt; &lt;noscript&gt;&lt;img
src="/media/events/obscon/registration/Obscon24---intro-to-obs.png"
alt="Grafana Cloud 研讨会的会议卡。"
width="1200"
height="628"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;了解监控现代应用程序的最佳实践，并使用 Grafana Cloud 的可观察性工作流程来快速识别问题、排除故障并找到根本原因。通过指标、日志、跟踪和黑盒监控的组合，您将获得对可观察性技术的实用见解，并有机会观察在 Kubernetes 上运行的现代微服务应用程序。 &lt;/p&gt;&lt;h3 id="introduction-to-opentelemetryhttpsgrafanacomeventsobservabilitycon2024workshopsintro-to-opentelemetrypgblogplcmtbody-txt"&gt; &lt;a href="/events/observabilitycon/2024/workshops/intro-to-opentelemetry/?pg=blog&amp;amp;plcmt=body-txt"&gt;开放遥测简介&lt;/a&gt;&lt;/h3&gt;&lt;figure
class="figure-wrapper w-100p "
style="max-width: 1200px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/events/observabilitycon/2024/workshops/intro-to-opentelemetry/?pg=blog&amp;amp;plcmt=body-txt"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/events/obscon/registration/Obscon24---intro-to-OTel.png"data-srcset="/media/events/obscon/registration/Obscon24---intro-to-OTel.png?w=320 320w, /media/events/obscon/registration/Obscon24---intro-to-OTel.png?w=550 550w, /media/events/obscon/registration/Obscon24---intro-to-OTel.png?w=750 750w, /media/events/obscon/registration/Obscon24---intro-to-OTel.png?w=900 900w, /media/events/obscon/registration/Obscon24---intro-to-OTel.png?w=1040 1040w, /media/events/obscon/registration/Obscon24---intro-to-OTel.png?w=1240 1240w, /media/events/obscon/registration/Obscon24---intro-to-OTel.png?w=1920 1920w"
data-sizes="auto"alt="OpenTelemetry 研讨会的会议卡。"
width="1200"
height="628"
/&gt; &lt;noscript&gt;&lt;img
src="/media/events/obscon/registration/Obscon24---intro-to-OTel.png"
alt="OpenTelemetry 研讨会的会议卡。"
width="1200"
height="628"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;探索 OpenTelemetry 的基础知识（包括信号、术语、工具和最佳实践）以实现现代可观测性，并了解如何通过 Grafana Cloud 快速开始使用这些开放标准。您将逐步了解强大的监控和故障排除工作流程以减少 MTTR，并使用 OpenTelemetry 信号来调试和解决问题。 &lt;/p&gt;&lt;h3 id="introduction-to-grafana-cloud-logs-powered-by-lokihttpsgrafanacomeventsobservabilitycon2024workshopsintro-to-grafana-cloud-logs-powered-by-lokipgblogplcmtbody-txt"&gt; &lt;a href="/events/observabilitycon/2024/workshops/intro-to-grafana-cloud-logs-powered-by-loki/?pg=blog&amp;amp;plcmt=body-txt"&gt;由 Loki 提供支持的 Grafana Cloud Logs 简介&lt;/a&gt;&lt;/h3&gt;&lt;figure
class="figure-wrapper w-100p "
style="max-width: 1200px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/events/observabilitycon/2024/workshops/intro-to-grafana-cloud-logs-powered-by-loki/?pg=blog&amp;amp;plcmt=body-txt"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/events/obscon/registration/Obscon24-intro_gcloudlogs.png"data-srcset="/media/events/obscon/registration/Obscon24-intro_gcloudlogs.png?w=320 320w, /media/events/obscon/registration/Obscon24-intro_gcloudlogs.png?w=550 550w, /media/events/obscon/registration/Obscon24-intro_gcloudlogs.png?w=750 750w, /media/events/obscon/registration/Obscon24-intro_gcloudlogs.png?w=900 900w, /media/events/obscon/registration/Obscon24-intro_gcloudlogs.png?w=1040 1040w, /media/events/obscon/registration/Obscon24-intro_gcloudlogs.png?w=1240 1240w, /media/events/obscon/registration/Obscon24-intro_gcloudlogs.png?w=1920 1920w"
data-sizes="auto"alt="Cloud Logs 研讨会的会议卡。"
width="1200"
height="628"
/&gt; &lt;noscript&gt;&lt;img
src="/media/events/obscon/registration/Obscon24-intro_gcloudlogs.png"
alt="Cloud Logs 研讨会的会议卡。"
width="1200"
height="628"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;了解如何开始使用 Grafana Cloud Logs，这是一个由 Grafana Loki 提供支持的完全托管日志系统。在我们的专家解决方案工程师的指导下，您将学习运输、探索、查询和可视化日志数据的最佳实践和工作流程。您还将体验探索日志应用程序的强大功能，以快速浏览大量日志数据，并了解如何从日志模式中发现有价值的见解。&lt;/p&gt;&lt;p&gt;&lt;em&gt;注意：参加研讨会需要&lt;a href="/events/observabilitycon/2024/workshops/?pg=blog&amp;amp;plcmt=body-txt"&gt;单独的门票&lt;/a&gt;，并且只能与完整的会议门票一起购买。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;想要详细了解 ObservabilityCON 2024 的总体议程吗？敬请关注！我们很快就会为您提供更多详细信息。&lt;/p&gt;&lt;h3 id="justify-your-trip"&gt;证明你的旅行合理&lt;/h3&gt;&lt;p&gt;我们知道您的时间很宝贵 - 这就是为什么您的经理在批准您参加之前可能会询问您将从 ObservabilityCON 2024 中获得什么。&lt;/p&gt;&lt;p&gt;我们相信您在结束活动时会得到实用的建议，您可以将这些建议应用到您的工作中，并在第二天与您的团队分享。除了提高您的技术技能之外，您还将学习可以推动真正业务影响的可观察性策略，帮助提高组织的客户满意度。&lt;/p&gt;&lt;p&gt;但不要相信我们的话——看看&lt;a href="/blog/2023/02/09/inside-observabilitycon-i-picked-up-so-much-practical-information/"&gt;一位工程师对参加 ObservabilityCON 的评价&lt;/a&gt;。如果您需要更多帮助来证明您的旅行合理性，您可以将这封&lt;a href="/events/observabilitycon/2024/justify-your-attendance/?pg=blog&amp;amp;plcmt=body-txt"&gt;准备好的信件&lt;/a&gt;发送给您的经理，其中概述了参加 ObservabilityCON 2024 的成本和收益。&lt;/p&gt;&lt;p&gt;我们迫不及待地想在九月见到您！&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="/about/events/observabilitycon/2024/?pg=blog&amp;amp;plcmt=body-txt"&gt;ObservabilityCON 2024&lt;/a&gt;倒计时已正式开始！我们一定会及时向您通报所有最新动态。如果您想探索其他即将举行的活动（无论是现场活动还是虚拟活动），请查看&lt;a href="/events/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Labs 活动页面&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;</description><pubDate>Wed, 26 Jun 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/26/observabilitycon-2024-register-and-reserve-your-spot-today/</guid></item><item><title>【Grafana 11.1 release: new visualization features, Grafana Alerting updates, and more】</title><link>https://grafana.com/blog/2024/06/25/grafana-11.1-release-new-visualization-features-grafana-alerting-updates-and-more/</link><description>&lt;p&gt;Grafana 11.1 次要版本是在 GrafanaCON 上发布&lt;a href="https://www.youtube.com/watch?v=96ZXShRyMB8" rel="noopener noreferrer" target="_blank"&gt;Grafana 11&lt;/a&gt;之后发布的，但它包含了一些易用性可视化改进、Grafana 警报更新（我发现了一个新的设置页面），以及对 Grafana 整体可访问性的一些有影响力的更改。&lt;/p&gt;&lt;div class="btn-row "&gt; &lt;a class="btn btn--primary " href="https://grafana.com/grafana/download/11.1.0/?pg=blog&amp;amp;plcmt=body-txt-btn" rel="noopener noreferrer"&gt;Grafana 11.1：立即下载！&lt;/a&gt;&lt;/div&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;p&gt;有关此版本中所有更改的更多详细信息，请参阅&lt;a href="https://github.com/grafana/grafana/blob/main/CHANGELOG.md" rel="noopener noreferrer" target="_blank"&gt;更改日志&lt;/a&gt;或&lt;a href="https://grafana.com/docs/grafana/latest/whatsnew/whats-new-in-v11-1/?pg=blog&amp;amp;plcmt=body-txt"&gt;新增功能文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="new-in-grafana-dashboards-and-visualizations"&gt; Grafana 仪表板和可视化中的新增功能&lt;/h2&gt;&lt;h3 id="text-wrapping-in-table-panel"&gt;表格面板中的文本换行&lt;/h3&gt;&lt;p&gt;&lt;em&gt;在所有版本的 Grafana 中提供公共预览版&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Grafana 社区中最受欢迎的功能之一就在这里！我们在&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/table/?pg=blog&amp;amp;plcmt=body-txt"&gt;表格面板&lt;/a&gt;的单元格内启用了文本换行，使复杂的长行文本更易于阅读，而无需滚动屏幕或扩大列大小。&lt;/p&gt;&lt;p&gt;默认情况下，将选择具有最长文本的列进行换行。或者，您可以使用字段覆盖手动配置换行。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;h3 id="customize-percent-change-colors-in-stat-panels"&gt;自定义统计面板中的百分比变化颜色&lt;/h3&gt;&lt;p&gt;&lt;em&gt;在 Grafana 的所有版本中普遍可用&lt;/em&gt;&lt;/p&gt;&lt;p&gt;在&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/stat/?pg=blog&amp;amp;plcmt=body-txt"&gt;统计可视化&lt;/a&gt;中，百分比变化的标准行为是以绿色显示正变化，以红色显示负变化。但是，根据您的用例，我们意识到您可能想要自定义表示百分比变化的颜色。现在，您可以选择&lt;strong&gt;反转&lt;/strong&gt;百分比变化颜色，以红色显示正变化，以绿色显示负变化。您还可以选择&lt;strong&gt;与 value 相同&lt;/strong&gt;，这将使百分比变化统计数据与其关联值的颜色相匹配。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;h3 id="visualize-x-and-y-values-in-the-xy-chart"&gt;在 XY 图表中可视化 x 和 y 值&lt;/h3&gt;&lt;p&gt;&lt;em&gt;在 Grafana 的所有版本中普遍可用&lt;/em&gt;&lt;/p&gt;&lt;p&gt;XY 图表（现已在 Grafana 11.1 中普遍提供）可帮助您在图表中可视化任意 x 和 y 值，以便您可以轻松显示两个变量之间的关系。 XY 图表通常用于创建散点图，但您也可以使用它们来创建气泡图，其中字段值决定每个气泡的大小。&lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;p&gt;要了解有关该面板的更多信息，请参阅&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/xy-chart/?pg=blog&amp;amp;plcmt=body-txt"&gt;我们的 XY 图表文档&lt;/a&gt;。要使用新的 XY 图表可视化效果，您必须首先启用&lt;code&gt;autoMigrateXYChartPanel&lt;/code&gt; &lt;a href="https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/feature-toggles/?pg=blog&amp;amp;plcmt=body-txt"&gt;功能切换&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;您还可以参考我们的&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 可视化&lt;/a&gt;文档以了解有关这些可视化功能的更多信息。&lt;/p&gt;&lt;h2 id="grafana-alerting-new-and-improved-features"&gt; Grafana 警报：新功能和改进功能&lt;/h2&gt;&lt;h3 id="new-holistic-view-of-grafana-managed-alert-instances"&gt;Grafana 管理的警报实例的新整体视图&lt;/h3&gt;&lt;p&gt;&lt;em&gt;在 Grafana 的所有版本中普遍可用&lt;/em&gt;&lt;/p&gt;&lt;p&gt;重新设计的设置页面为您提供了 Grafana 管理的警报实例转发位置的整体视图，这使您可以：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;管理哪些警报管理器从 Grafana 管理的规则接收警报实例，而无需导航和编辑数据源。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;管理内置Alertmanager的版本快照，允许管理员回滚Alertmanager配置中无意的更改或错误。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用视觉差异将历史快照与最新配置进行比较，以查看进行了哪些更改。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/docs/alerting/alert-settings.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/docs/alerting/alert-settings.png"data-srcset="/media/docs/alerting/alert-settings.png?w=320 320w, /media/docs/alerting/alert-settings.png?w=550 550w, /media/docs/alerting/alert-settings.png?w=750 750w, /media/docs/alerting/alert-settings.png?w=900 900w, /media/docs/alerting/alert-settings.png?w=1040 1040w, /media/docs/alerting/alert-settings.png?w=1240 1240w, /media/docs/alerting/alert-settings.png?w=1920 1920w"
data-sizes="auto"alt="警报设置页面"
width="1342"
height="1106"
/&gt; &lt;noscript&gt;&lt;img
src="/media/docs/alerting/alert-settings.png"
alt="警报设置页面"
width="1342"
height="1106"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="alert-templates-for-notification-messages"&gt;通知消息的警报模板&lt;/h3&gt;&lt;p&gt;&lt;em&gt;在 Grafana 的所有版本中普遍可用&lt;/em&gt;&lt;/p&gt;&lt;p&gt;通过在“联系点”表单中添加模板选择器，警报模板选择器使您能够轻松选择要在警报通知消息中使用的模板。&lt;/p&gt;&lt;p&gt;您可以从现有模板中进行选择，也可以根据您的特定需求输入自定义模板。为了让事情变得更容易，您可以在两个选项卡之间切换以访问可用模板列表并将它们复制到自定义版本。&lt;/p&gt;&lt;h3 id="oauth2-authentication-for-alertmanager-or-grafana-mimir"&gt; Alertmanager 或 Grafana Mimir 的 OAuth2 身份验证&lt;/h3&gt;&lt;p&gt;&lt;em&gt;在 Grafana 的所有版本中普遍可用&lt;/em&gt;&lt;/p&gt;&lt;p&gt;在 Grafana 11.1 中，您可以通过用户界面为任何 Alertmanager 或 Mimir 接收器（在 Grafana 中称为“接触点”）配置 OAuth2 身份验证。&lt;/p&gt;&lt;p&gt;&lt;em&gt;注意：Grafana 内置 Alertmanager&lt;strong&gt;未&lt;/strong&gt;实现 OAuth2。&lt;/em&gt;&lt;/p&gt;&lt;h3 id="improved-paused-alert-visibility"&gt;改进了暂停警报的可见性&lt;/h3&gt;&lt;p&gt;&lt;em&gt;在 Grafana 的所有版本中普遍可用&lt;/em&gt;&lt;/p&gt;&lt;p&gt;直接从警报规则列表和详细信息视图暂停和恢复警报规则评估。通过显示“已暂停”作为警报规则状态，有助于提高警报规则何时暂停的可见性。&lt;/p&gt;&lt;h3 id="rule-specific-silences-with-permissions"&gt;具有权限的规则特定沉默&lt;/h3&gt;&lt;p&gt;&lt;em&gt;在 Grafana 的所有版本中普遍可用&lt;/em&gt;&lt;/p&gt;&lt;p&gt;现在，您可以直接从警报规则列表视图或详细信息页面轻松创建警报静音。这些特定于规则的静默保证仅适用于单个规则，并且读取、创建、更新或删除的权限与用户对该规则的权限相关联。&lt;/p&gt;&lt;h3 id="rule-specific-silences-with-rbac"&gt;使用 RBAC 进行规则特定的沉默&lt;/h3&gt;&lt;p&gt;&lt;em&gt;在 Grafana Enterprise 和 Grafana Cloud 中普遍可用&lt;/em&gt;&lt;/p&gt;&lt;p&gt;通过基于角色的访问控制 (RBAC) 管理静默。除了&lt;strong&gt;具有权限的规则特定静默&lt;/strong&gt;中的 Grafana 开源功能外，您还可以使用以下权限选择谁可以创建、编辑和读取静默：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;具有&lt;strong&gt;alert.silences:create 权限&lt;/strong&gt;（范围在文件夹内）的用户能够为该文件夹及其子文件夹中包含的规则创建静默。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;具有&lt;strong&gt;alert.silences:read 权限&lt;/strong&gt;（范围在文件夹内）的用户能够读取该文件夹及其子文件夹中包含的规则的静默以及一般静默。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;具有&lt;strong&gt;alert.silences:write 权限&lt;/strong&gt;（范围在文件夹内）的用户能够使该文件夹及其子文件夹中包含的规则过期并重新创建静默。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="accessibility-improvements-in-grafana"&gt; Grafana 的辅助功能改进&lt;/h2&gt;&lt;p&gt;Grafana 团队致力于改进我们的用户界面和整体体验，以便我们的产品可供每个人使用和访问。在 Grafana 11.1 中，我们很自豪能够在 Grafana 的所有版本中普遍提供以下功能。 &lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;iframe src="https://www.youtube.com/embed/Tc0pTXtCsKQ" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="Youtube 视频"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;h3 id="geomap-keyboard-support"&gt;地理地图键盘支持&lt;/h3&gt;&lt;p&gt;&lt;a href="/docs/grafana/latest/panels-visualizations/visualizations/geomap/?pg=blog&amp;amp;plcmt=body-txt"&gt;地理地图面板&lt;/a&gt;现在可以通过键盘使用！聚焦地图区域，使用箭头键移动并使用&lt;code&gt;+&lt;/code&gt;和&lt;code&gt;-&lt;/code&gt;放大和缩小。&lt;/p&gt;&lt;h3 id="panel-shortcut-keyboard-support"&gt;面板快捷键键盘支持&lt;/h3&gt;&lt;p&gt;我们有&lt;a href="/docs/grafana/latest/dashboards/use-dashboards/?pg=blog&amp;amp;plcmt=body-txt#keyboard-shortcuts"&gt;面板快捷方式&lt;/a&gt;，以前只能在您将鼠标悬停在其上的面板上使用。现在它还考虑了键盘焦点。&lt;/p&gt;&lt;h3 id="heading-improvements"&gt;标题改进&lt;/h3&gt;&lt;p&gt;大多数屏幕阅读器用户&lt;a href="https://webaim.org/projects/screenreadersurvey10/#finding" target="_blank" rel="noopener noreferrer"&gt;使用标题在网页上查找内容&lt;/a&gt;。最近，我们在某些地方添加了缺失的标题并更正了标题级别，尤其是面板标题。&lt;/p&gt;&lt;h3 id="reduced-motion-support"&gt;减少运动支撑&lt;/h3&gt;&lt;p&gt;受到网站上大量动画影响的用户可以配置&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion" target="_blank" rel="noopener noreferrer"&gt;减少运动设置&lt;/a&gt;。 Grafana 现在支持这一点，要么使动画更简单，要么完全删除它们。我们&lt;a href="https://github.com/grafana/grafana/tree/main/packages/grafana-eslint-rules#no-unreduced-motion" target="_blank" rel="noopener noreferrer"&gt;实施了一项规则&lt;/a&gt;，禁止未处理的过渡和动画，确保我们能够持续支持减少运动。&lt;/p&gt;&lt;h2 id="learn-more-about-grafana-111"&gt;了解有关 Grafana 11.1 的更多信息&lt;/h2&gt;&lt;p&gt;有关 Grafana 11.1 中所有新功能的列表，请查看我们的&lt;a href="/docs/grafana/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 文档&lt;/a&gt;、Grafana &lt;a href="https://github.com/grafana/grafana/blob/main/CHANGELOG.md" target="_blank" rel="noopener noreferrer"&gt;变更日志&lt;/a&gt;或我们的&lt;a href="/docs/grafana/latest/whatsnew/whats-new-in-v11-1/?pg=blog&amp;amp;plcmt=body-txt"&gt;新增功能文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="join-the-grafana-labs-community"&gt;加入 Grafana 实验室社区&lt;/h2&gt;&lt;p&gt;我们邀请您参与 Grafana Labs&lt;a href="https://community.grafana.com/" target="_blank" rel="noopener noreferrer"&gt;社区论坛&lt;/a&gt;。分享您使用新功能的体验，讨论最佳实践，并探索将这些更新集成到您的工作流程中的创造性方法。您的见解和用例对于丰富 Grafana 生态系统非常宝贵。&lt;/p&gt;&lt;h2 id="upgrade-to-grafana-111"&gt;升级到 Grafana 11.1&lt;/h2&gt;&lt;p&gt;立即&lt;a href="/grafana/download/11.1.0/?pg=blog&amp;amp;plcmt=body-txt"&gt;下载 Grafana 11.1&lt;/a&gt;或通过注册&lt;a href="/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;来尝试所有新功能，它提供了实际有用的云免费套餐和针对每个用例的计划。立即注册&lt;a href="/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;免费的 Grafana Cloud 帐户&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;我们的&lt;a href="/docs/grafana/latest/upgrade-guide/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana 升级指南&lt;/a&gt;还为那些希望从早期版本升级的用户提供分步说明，以确保顺利过渡。&lt;/p&gt;&lt;h2 id="a-special-thanks-to-our-community"&gt;特别感谢我们的社区&lt;/h2&gt;&lt;p&gt;我们向&lt;a href="/blog/2023/12/12/the-story-of-grafana-documentary-the-community-behind-the-code/"&gt;Grafana 社区&lt;/a&gt;表示衷心的感谢！&lt;/p&gt;&lt;p&gt;您的贡献，从拉取请求到有价值的反馈，对于不断增强 Grafana 至关重要。您的热情和奉献精神激励我们 Grafana Labs 不断创新和提升 Grafana。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的云免费套餐和计划。&lt;a href="/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Tue, 25 Jun 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/25/grafana-11.1-release-new-visualization-features-grafana-alerting-updates-and-more/</guid></item><item><title>【Grafana Cloud updates: new visualization options, performance test analysis, Grafana Alerting improvements, and more】</title><link>https://grafana.com/blog/2024/06/24/grafana-cloud-updates-new-visualization-options-performance-test-analysis-grafana-alerting-improvements-and-more/</link><description>&lt;p&gt;我们不断在 Grafana Cloud 中推出有用的更新和有趣的功能，这是我们完全托管的可观测性平台，由开源 Grafana LGTM Stack（用于日志的&lt;a href="https://grafana.com/oss/loki/?pg=blog&amp;amp;plcmt=body-txt"&gt;Loki&lt;/a&gt; 、用于可视化的&lt;a href="https://grafana.com/oss/grafana/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana&lt;/a&gt; 、用于跟踪的&lt;a href="https://grafana.com/oss/tempo/?pg=blog&amp;amp;plcmt=body-txt"&gt;Tempo&lt;/a&gt;和用于指标的&lt;a href="https://grafana.com/oss/mimir/?pg=blog&amp;amp;plcmt=body-txt"&gt;Mimir&lt;/a&gt; ）提供支持。&lt;/p&gt;&lt;p&gt;如果您错过了，这里汇总了本月 Grafana Cloud 的最新、最精彩的更新。您还可以&lt;a href="https://grafana.com/docs/grafana-cloud/whats-new/?pg=blog&amp;amp;plcmt=body-txt"&gt;在 Grafana Cloud 文档新增功能&lt;/a&gt;中了解我们添加到 Grafana Cloud 的所有功能。&lt;/p&gt;&lt;p&gt;如果您还不是 Grafana Cloud 用户，&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;请&lt;/a&gt;立即注册一个帐户！您可以通过我们慷慨的免费云计划免费尝试这些功能（以及更多）。&lt;/p&gt;&lt;h2 id="data-visualization-enhancements"&gt;数据可视化增强&lt;/h2&gt;&lt;p&gt;我们一直在探索新的、创造性的方法来帮助您可视化数据并从数据中获得有意义的见解。本月，我们很高兴与大家分享我们对 Grafana Cloud 中的数据可视化体验所做的一些小（但有用）更新。&lt;/p&gt;&lt;h3 id="customize-percent-change-colors"&gt;自定义百分比变化颜色&lt;/h3&gt;&lt;p&gt;在&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/stat/"&gt;统计可视化&lt;/a&gt;中，百分比变化的标准行为是以绿色显示正变化，以红色显示负变化。但是，根据您的使用案例，我们意识到您可能想要自定义这些百分比变化颜色。现在，您可以选择反转百分比变化颜色，以红色显示正变化，以绿色显示负变化。您还可以选择让百分比变化颜色与其关联值的颜色相匹配。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/docs/grafana/gif-grafana-11-1-stat-percent-change-color-options.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示颜色变化百分比的 gif。" class="lazyload " height="990" width="1920" /&gt;&lt;noscript&gt;&lt;img alt="显示颜色变化百分比的 gif。" height="990" src="https://grafana.com/media/docs/grafana/gif-grafana-11-1-stat-percent-change-color-options.gif" width="1920" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="wrap-text-within-cells"&gt;在单元格内换行文本&lt;/h3&gt;&lt;p&gt;我们从用户那里听到的最常见的请求之一是在&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/table/"&gt;表格面板&lt;/a&gt;的单元格内启用文本换行。随着 Grafana 11.1 的发布，我们添加了这一期待已久的功能！&lt;/p&gt;&lt;p&gt;默认情况下，将选择具有最长文本的列进行换行。或者，您可以使用字段覆盖手动配置换行。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/docs/grafana/gif-grafana-11-1-text-wrapping.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="" class="lazyload " height="311" width="600" /&gt;&lt;noscript&gt;&lt;img alt="" height="311" src="https://grafana.com/media/docs/grafana/gif-grafana-11-1-text-wrapping.gif" width="600" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="visualize-x-and-y-values-in-the-xy-chart"&gt;在 XY 图表中可视化 x 和 y 值&lt;/h3&gt;&lt;p&gt;XY 图表（我们正式将其从公共预览版升级为通用版本）可帮助您在图表中可视化任意 x 和 y 值，以便您可以轻松显示两个变量之间的关系。 XY 图表通常用于创建散点图，但您也可以使用它们来创建气泡图，其中字段值决定每个气泡的大小。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/docs/grafana/panels-visualizations/screenshot-xy-charts-v11.0.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/docs/grafana/panels-visualizations/screenshot-xy-charts-v11.0.png"data-srcset="/media/docs/grafana/panels-visualizations/screenshot-xy-charts-v11.0.png?w=320 320w, /media/docs/grafana/panels-visualizations/screenshot-xy-charts-v11.0.png?w=550 550w, /media/docs/grafana/panels-visualizations/screenshot-xy-charts-v11.0.png?w=750 750w, /media/docs/grafana/panels-visualizations/screenshot-xy-charts-v11.0.png?w=900 900w, /media/docs/grafana/panels-visualizations/screenshot-xy-charts-v11.0.png?w=1040 1040w, /media/docs/grafana/panels-visualizations/screenshot-xy-charts-v11.0.png?w=1240 1240w, /media/docs/grafana/panels-visualizations/screenshot-xy-charts-v11.0.png?w=1920 1920w"
data-sizes="auto"alt="XY 图表的屏幕截图。"
width="2858"
height="914"
/&gt; &lt;noscript&gt;&lt;img
src="/media/docs/grafana/panels-visualizations/screenshot-xy-charts-v11.0.png"
alt="XY 图表的屏幕截图。"
width="2858"
height="914"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;请参阅我们的技术文档，了解有关&lt;a href="/docs/grafana/latest/panels-visualizations/visualizations/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud 可视化的&lt;/a&gt;更多信息。&lt;/p&gt;&lt;h2 id="streaming-query-results-for-grafana-cloud-traces"&gt; Grafana Cloud Traces 的流式查询结果&lt;/h2&gt;&lt;p&gt;&lt;a href="/products/cloud/traces/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud Traces&lt;/a&gt;用户现在可以在传入 TraceQL 查询时获取部分结果，而不必等待所有结果立即返回。这使您可以立即开始查看与查询匹配的跟踪，从而加快根本原因分析的速度。 &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 600px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/grafana-cloud-updates-june-2024/cloud-traces-streaming-query-results-gif.gif"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/grafana-cloud-updates-june-2024/cloud-traces-streaming-query-results-gif.gif"alt="显示流式查询结果功能的 gif。"
width="600"
height="579"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/grafana-cloud-updates-june-2024/cloud-traces-streaming-query-results-gif.gif"
alt="显示流式查询结果功能的 gif。"
width="600"
height="579"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;要了解有关 Grafana Cloud Traces 的更多信息，请查看我们的&lt;a href="/docs/grafana-cloud/send-data/traces/traces-query-editor/traceql-search/?pg=blog&amp;amp;plcmt=body-txt/#streaming-results"&gt;技术文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="performance-test-analysis-with-cloud-insights-in-grafana-cloud-k6"&gt;在 Grafana Cloud k6 中使用 Cloud Insights 进行性能测试分析&lt;/h2&gt;&lt;p&gt;性能测试的真正价值不在于测试本身，而在于能够从结果中分析并得出结论。然而，鉴于当今的系统日益复杂，这并不总是那么容易。当测试中出现问题时，查找根本原因可能会很困难且耗时。&lt;/p&gt;&lt;p&gt;我们的目标是通过&lt;a href="/products/cloud/k6//?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud k6&lt;/a&gt;中的 Cloud Insights 解决这些挑战。 Cloud Insights 分析测试运行期间生成的遥测数据（例如指标、日志和跟踪），以自动识别您正在测试的系统中的问题并提供修复建议。这可以帮助您和您的团队节省时间并更快地确定根本原因。&lt;/p&gt;&lt;p&gt;要使用 Cloud Insights，请在&lt;strong&gt;测试与合成 &amp;gt; 性能的&lt;/strong&gt;Beta 功能模式窗口中启用它。有关更多信息，请参阅&lt;a href="/docs/grafana-cloud/testing/k6/analyze-results/get-cloud-insights/?pg=blog&amp;amp;plcmt=body-txt"&gt;Cloud Insights 文档&lt;/a&gt;。 &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 600px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/grafana-cloud-updates-june-2024/cloud-insights-grafana-k6-gif.gif"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/grafana-cloud-updates-june-2024/cloud-insights-grafana-k6-gif.gif"alt=""
width="600"
height="338"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/grafana-cloud-updates-june-2024/cloud-insights-grafana-k6-gif.gif"
alt=""
width="600"
height="338"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="logs-filtering-and-pinning-in-grafana-explore"&gt; Grafana 中的日志过滤和固定 Explore&lt;/h2&gt;&lt;p&gt; &lt;a href="/docs/grafana/latest/explore/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Explore&lt;/a&gt;现在支持日志过滤和固定在&lt;a href="/docs/grafana/latest/explore/?pg=blog&amp;amp;plcmt=body-txt/#content-outline"&gt;内容大纲&lt;/a&gt;中，这是一个侧面导航栏，可跟踪您创建的查询和可视化面板。所有日志级别现在都自动在内容大纲中可用。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;过滤日志&lt;/strong&gt;：您现在可以按日志级别进行过滤，目前 Elasticsearch 和 Loki 数据源支持此功能。要选择多个过滤器，请在单击时按住 Mac 上的 Command 键或 Windows 上的 Control 键。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;固定日志&lt;/strong&gt;：您还可以将日志固定到内容大纲，以便在调查期间轻松访问它们以供参考。要固定日志，请将鼠标悬停在日志面板中的日志上，然后单击日志行菜单中的&lt;strong&gt;固定到内容大纲&lt;/strong&gt;图标。单击固定的日志将打开日志上下文模式，显示该日志在上下文中与其他日志一起突出显示。从这里，您还可以以拆分模式打开日志，以保留左窗格中的时间范围，同时在右窗格中保留特定于该日志的时间范围。&lt;/p&gt;&lt;p&gt;您可以在我们的&lt;a href="/docs/grafana/latest/explore/?pg=blog&amp;amp;plcmt=body-txt"&gt;技术文档&lt;/a&gt;中阅读有关 Grafana Explore 的更多信息。&lt;/p&gt;&lt;h2 id="private-source-map-uploads-in-grafana-cloud-frontend-observability"&gt; Grafana Cloud Frontend Observability 中的私有源地图上传&lt;/h2&gt;&lt;p&gt;本月，我们在&lt;a href="/products/cloud/frontend-observability-for-real-user-monitoring/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud Frontend Observability&lt;/a&gt;中引入了私有源地图上传，这是我们用于真实用户监控 (RUM) 的托管服务，可提供有关最终用户体验的可行见解。借助这项新功能，前端可观察性现在可以使用源映射将来自 JavaScript 浏览器错误的堆栈跟踪转换回其原始表示形式。这样，您就可以看到导致问题的确切代码行。&lt;/p&gt;&lt;p&gt;在推出此功能之前，源地图必须在互联网上公开可用，以便 Grafana Cloud 获取它们。对于许多用户来说，这并不理想，因为这意味着他们需要公开他们的一些 IP。现在，前端可观察性为想要缩小错误堆栈跟踪同时保持源映射私有的用户提供了一个选项。&lt;/p&gt;&lt;p&gt;只需将&lt;a href="/docs/grafana-cloud/monitor-applications/frontend-observability/sourcemap-upload-plugins/?pg=blog&amp;amp;plcmt=body-txt"&gt;新发布的 JavaScript 捆绑器插件&lt;/a&gt;包含到您的构建管道中，输入前端可观察性插件应用程序提供的一些配置上下文，您将能够看到完整的错误堆栈跟踪，而无需与应用程序包一起公开托管源映射。&lt;/p&gt;&lt;p&gt;要了解更多信息，请参阅我们的&lt;a href="/docs/grafana-cloud/monitor-applications/frontend-observability/sourcemap-upload-plugins/?pg=blog&amp;amp;plcmt=body-txt"&gt;前端可观察性文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="grafana-alerting-improvements"&gt; Grafana 警报改进&lt;/h2&gt;&lt;p&gt;我们对 Grafana Alerting 进行了多项更新，包括管理静音的新选项以及为警报通知消息选择模板的更简单方法。&lt;/p&gt;&lt;h3 id="rule-specific-silences-with-rbac"&gt;使用 RBAC 进行规则特定的沉默&lt;/h3&gt;&lt;p&gt;您现在可以使用以下权限选择谁可以创建、编辑和阅读静音：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;具有&lt;code&gt;alert.silences:create&lt;/code&gt;权限（范围在文件夹内）的用户能够为该文件夹及其子文件夹中包含的规则创建静默。&lt;/li&gt;&lt;li&gt;具有&lt;code&gt;alert.silences:read&lt;/code&gt;权限（范围在文件夹内）的用户能够读取该文件夹及其子文件夹中包含的规则的静默以及一般静默。&lt;/li&gt;&lt;li&gt;具有&lt;code&gt;alert.silences:write&lt;/code&gt;权限（范围在文件夹内）的用户能够使该文件夹及其子文件夹中包含的规则过期并重新创建静默。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="rule-specific-silences-with-permissions"&gt;具有权限的规则特定沉默&lt;/h3&gt;&lt;p&gt;更轻松地直接从&lt;strong&gt;警报规则列表&lt;/strong&gt;视图或&lt;strong&gt;详细信息&lt;/strong&gt;页面创建静默。这些特定于规则的静默保证仅适用于单个规则，并且读取、创建、更新或删除的权限与用户对该规则的权限相关联。&lt;/p&gt;&lt;h3 id="alerting-template-selector"&gt;警报模板选择器&lt;/h3&gt;&lt;p&gt;现在，您可以通过在&lt;strong&gt;“联系点”&lt;/strong&gt;表单中添加模板选择器来轻松选择要在警报通知消息中使用的模板。从现有模板中进行选择或根据您的特定需求自定义一个模板。您可以在两个选项卡之间切换以访问可用模板列表并将它们复制到自定义版本。&lt;/p&gt;&lt;p&gt;要了解有关在 Grafana Cloud 中设置警报的更多信息，请参阅我们的&lt;a href="/docs/grafana/latest/alerting/?pg=blog&amp;amp;plcmt=body-txt"&gt;技术文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="new-integrations-catchpoint"&gt;新集成：Catchpoint&lt;/h2&gt;&lt;p&gt;您现在可以&lt;a href="/solutions/catchpoint/monitor/?pg=blog&amp;amp;plcmt=body-txt"&gt;轻松监控 Catchpoint&lt;/a&gt; ，这是一个数字体验平台，可在 Grafana Cloud 中实时洞察网站、应用程序和基础设施的性能和可用性。该集成包括&lt;a href="/docs/grafana-cloud/monitor-infrastructure/integrations/integration-reference/integration-catchpoint/?pg=blog&amp;amp;plcmt=body-txt/#alerts"&gt;五个有用的警报&lt;/a&gt;和&lt;a href="/docs/grafana-cloud/monitor-infrastructure/integrations/integration-reference/integration-catchpoint/#dashboards"&gt;三个预构建的仪表板，&lt;/a&gt;以帮助监控和可视化 Catchpoint 指标。&lt;/p&gt;&lt;p&gt;此外，我们还引入了&lt;a href="/docs/plugins/grafana-catchpoint-datasource/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Catchpoint Enterprise 数据源插件&lt;/a&gt;，它允许您从 Grafana 中查询和可视化&lt;code&gt;Tests&lt;/code&gt; 、 &lt;code&gt;RUM&lt;/code&gt;和&lt;code&gt;SLO&lt;/code&gt;数据。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册！&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description><pubDate>Mon, 24 Jun 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/24/grafana-cloud-updates-new-visualization-options-performance-test-analysis-grafana-alerting-improvements-and-more/</guid></item><item><title>【Shorten your feedback loop: Java observability with OpenTelemetry, Grafana Cloud, and Digma.ai】</title><link>https://grafana.com/blog/2024/06/21/shorten-your-feedback-loop-java-observability-with-opentelemetry-grafana-cloud-and-digma.ai/</link><description>&lt;p&gt;&lt;em&gt;Ron Dover 是&lt;a href="http://digma.ai" rel="noopener noreferrer" target="_blank"&gt;Digma.ai&lt;/a&gt;的首席技术官兼联合创始人，Digma.ai 是一个用于代码运行时 AI 分析的 IDE 插件，可帮助加速复杂代码库的开发。 Ron 是循证开发的坚定拥护者，也是软件工程各个方面持续反馈的支持者。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;传统上，软件开发人员依赖简单的日志来了解代码执行和解决问题。指标、跟踪、仪表板和仪表主要属于 IT 和基础设施团队的领域，这使得开发人员对其应用程序性能的了解有限。这种职责划分通常意味着开发人员只能在出现问题时被动地使用可观察性工具。&lt;/p&gt;&lt;p&gt;随着现代可观测性解决方案的出现，情况正在发生变化。 &lt;a href="https://grafana.com/oss/opentelemetry/?pg=blog&amp;amp;plcmt=body-txt"&gt;OpenTelemetry&lt;/a&gt;等工具简化了 Java 应用程序的跟踪，Grafana 等平台提供了更清晰的应用程序性能视图，使可观察性对开发人员更加友好。此外，像&lt;a href="http://digma.ai" rel="noopener noreferrer" target="_blank"&gt;Digma.ai&lt;/a&gt;这样的专业工具正在弥合仪表板和日常编码工作流程之间的差距，使开发人员能够在整个开发生命周期中主动利用可观察性。&lt;/p&gt;&lt;p&gt;但这在实践中是如何运作的呢？如果可观察性所做的只是聚合数据，那么它对任何人都没有任何好处。因此，我们在本博客中的目标将是演示开发人员如何通过&lt;strong&gt;缩短反馈循环&lt;/strong&gt;将可观察性付诸实际应用。具体来说，我们希望缩短从引入错误或问题到开发人员意识到问题及其根源之间的持续时间。&lt;/p&gt;&lt;h2 id="connecting-a-java-app-to-grafana-cloud-and-digmaai"&gt;将 Java 应用程序连接到 Grafana Cloud 和 Digma.ai&lt;/h2&gt;&lt;p&gt;对于我们的示例场景，我们将示例 Spring Boot 应用程序连接到&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt; 。我们还将使用 Digma.ai，这是一种持续反馈工具，可以直接在 IDE 中分析应用程序跟踪。为了让这更有趣，我们将使用一种名为&lt;a href="https://grafana.com/oss/alloy-opentelemetry-collector/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Alloy 的&lt;/a&gt;新技术，这是一种基于组件且易于使用的&lt;a href="https://opentelemetry.io/docs/collector/" rel="noopener noreferrer" target="_blank"&gt;OpenTelemetry Collector 开源发行版。&lt;/a&gt;使用 Alloy 是配置我们要收集哪些数据以及要将数据发送到何处的简单方法。完整的管道将如下所示：&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/java-digma/java-workflow.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/java-digma/java-workflow.png"data-srcset="/media/blog/java-digma/java-workflow.png?w=320 320w, /media/blog/java-digma/java-workflow.png?w=550 550w, /media/blog/java-digma/java-workflow.png?w=750 750w, /media/blog/java-digma/java-workflow.png?w=900 900w, /media/blog/java-digma/java-workflow.png?w=1040 1040w, /media/blog/java-digma/java-workflow.png?w=1240 1240w, /media/blog/java-digma/java-workflow.png?w=1920 1920w"
data-sizes="auto"alt="工作流程图"
width="1462"
height="464"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/java-digma/java-workflow.png"
alt="工作流程图"
width="1462"
height="464"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;此示例的代码位于&lt;a href="https://github.com/doppleware/spring-petclinic-cf" target="_blank" rel="noopener noreferrer"&gt;此 GitHub 存储库&lt;/a&gt;中。&lt;/p&gt;&lt;h2 id="how-to-connect-your-java-app-to-grafana-cloud"&gt;如何将 Java 应用程序连接到 Grafana Cloud&lt;/h2&gt;&lt;p&gt;您需要一个 Grafana Cloud 帐户才能开始。如果您还没有，您可以使用此&lt;a href="/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;链接&lt;/a&gt;注册免费套餐（大约需要五秒钟）。&lt;/p&gt;&lt;p&gt;完成后，我们需要获取大量输入来继续我们的设置并将数据发送到新创建的应用程序可观察性实例！在 Grafana 主页上，单击 OpenTelemetry 框中的&lt;strong&gt;配置&lt;/strong&gt;按钮： &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 502px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/java-digma/otel-configure.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/java-digma/otel-configure.png"data-srcset="/media/blog/java-digma/otel-configure.png?w=320 320w, /media/blog/java-digma/otel-configure.png?w=550 550w, /media/blog/java-digma/otel-configure.png?w=750 750w, /media/blog/java-digma/otel-configure.png?w=900 900w, /media/blog/java-digma/otel-configure.png?w=1040 1040w, /media/blog/java-digma/otel-configure.png?w=1240 1240w, /media/blog/java-digma/otel-configure.png?w=1920 1920w"
data-sizes="auto"alt="OpenTelemetry 配置按钮"
width="502"
height="148"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/java-digma/otel-configure.png"
alt="OpenTelemetry 配置按钮"
width="502"
height="148"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;在 OTel 页面中，我们需要复制稍后需要的一些参数，如下面的屏幕截图所示： &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 926px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/java-digma/otlp-endpoint.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/java-digma/otlp-endpoint.png"data-srcset="/media/blog/java-digma/otlp-endpoint.png?w=320 320w, /media/blog/java-digma/otlp-endpoint.png?w=550 550w, /media/blog/java-digma/otlp-endpoint.png?w=750 750w, /media/blog/java-digma/otlp-endpoint.png?w=900 900w, /media/blog/java-digma/otlp-endpoint.png?w=1040 1040w, /media/blog/java-digma/otlp-endpoint.png?w=1240 1240w, /media/blog/java-digma/otlp-endpoint.png?w=1920 1920w"
data-sizes="auto"alt="OTLP 端点菜单"
width="926"
height="565"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/java-digma/otlp-endpoint.png"
alt="OTLP 端点菜单"
width="926"
height="565"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;ol&gt;&lt;li&gt; &lt;strong&gt;OTLP 端点&lt;/strong&gt;：我们将把所有应用程序可观察性发送到该目的地。&lt;/li&gt;&lt;li&gt; &lt;strong&gt;Grafana 实例 ID&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;创建一个&lt;strong&gt;API 令牌&lt;/strong&gt;，稍后我们将在连接到 Grafana Cloud 实例时使用它。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;将这些值复制到安全的地方；我们将在稍后的设置中使用它们。&lt;/p&gt;&lt;h3 id="start-and-configure-the-grafana-alloy-container"&gt;启动并配置 Grafana Alloy 容器&lt;/h3&gt;&lt;p&gt;Grafana Alloy 容器将充当我们的可观测性“路由器”，在将其传输到 Grafana Cloud 实例和 Digma 之前收集并聚合我们的可观测性数据。&lt;/p&gt;&lt;p&gt;我们将首先在示例应用程序下创建一个“observability”子文件夹。我们将在此处存储与配置可观察性管道相关的所有内容。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;在新的可观测性子文件夹下创建一个名为&lt;code&gt;config.river&lt;/code&gt;的新文件。此合金配置使用受 Terraform 启发的配置语言。粘贴以下文本并保存文件：&lt;/li&gt;&lt;/ol&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button x-data="app_code_snippet()" x-init="init()" @click="copy()"&gt;&lt;img class="code-clipboard__icon" src="/media/images/icons/icon-copy-small-2.svg" alt="将代码复制到剪贴板" width="14" height="13"&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre data-expanded="false"&gt; &lt;code class="language-none"&gt;//Basic authentication otelcol.auth.basic &amp;quot;grafana_auth&amp;quot; { username = env(&amp;quot;GRAFANA_CLOUD_INSTANCE_ID&amp;quot;) password = env(&amp;quot;GRAFANA_CLOUD_API_TOKEN&amp;quot;) } // Define the &amp;#39;Receiver&amp;#39; ingesting the data sent out from our app otelcol.receiver.otlp &amp;quot;default&amp;quot; { // configures the default grpc endpoint &amp;quot;0.0.0.0:4317&amp;quot; grpc { } // configures the default http/protobuf endpoint &amp;quot;0.0.0.0:4318&amp;quot; http { } output { traces = [otelcol.processor.batch.default.input] } } //The &amp;#39;processor&amp;#39; optimizes the network throughput by batching the output otelcol.processor.batch &amp;quot;default&amp;quot; { output { traces = [otelcol.exporter.otlp.digma.input,otelcol.exporter.otlphttp.grafana_cloud.input] } } //Our two exporters will send the data both to Digma (to analytize our code observability, and to our Grafana cloud instance otelcol.exporter.otlp &amp;quot;digma&amp;quot; { // Send traces to Digma without TLS enabled. client { endpoint = env(&amp;quot;DIGMA_OTLP_ENDPOINT&amp;quot;) tls { insecure = true } } } otelcol.exporter.otlphttp &amp;quot;grafana_cloud&amp;quot; { client { endpoint = env(&amp;quot;GRAFANA_CLOUD_OTLP_ENDPOINT&amp;quot;) auth = otelcol.auth.basic.grafana_auth.handler } }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;在此文件中，我们将可观察性管道定义为具有以下结构的代码： &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1116px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/java-digma/otlp-workflow.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/java-digma/otlp-workflow.png"data-srcset="/media/blog/java-digma/otlp-workflow.png?w=320 320w, /media/blog/java-digma/otlp-workflow.png?w=550 550w, /media/blog/java-digma/otlp-workflow.png?w=750 750w, /media/blog/java-digma/otlp-workflow.png?w=900 900w, /media/blog/java-digma/otlp-workflow.png?w=1040 1040w, /media/blog/java-digma/otlp-workflow.png?w=1240 1240w, /media/blog/java-digma/otlp-workflow.png?w=1920 1920w"
data-sizes="auto"alt="OTLP工作流程"
width="1116"
height="486"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/java-digma/otlp-workflow.png"
alt="OTLP工作流程"
width="1116"
height="486"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt; &lt;strong&gt;OTLP 接收器&lt;/strong&gt;。该组件将接收我们的 Java 应用程序发出的跟踪。&lt;/li&gt;&lt;li&gt; &lt;strong&gt;OTLP 处理器&lt;/strong&gt;。这将用于使用批处理策略来优化我们的输出，以将跟踪一起发送而不是逐个发送。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;出口商&lt;/strong&gt;。这些将发送痕迹以进行存储和处理。我们将把跟踪发送到两个目的地：我们的 Grafana Cloud 实例和 Digma，我们将用它来分析我们的代码。&lt;/li&gt;&lt;/ul&gt;&lt;ol start="2"&gt;&lt;li&gt;创建一个新的“docker-compose.yaml”文件。该文件将定义 Alloy 容器并挂载我们的配置文件。&lt;/li&gt;&lt;/ol&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button x-data="app_code_snippet()" x-init="init()" @click="copy()"&gt;&lt;img class="code-clipboard__icon" src="/media/images/icons/icon-copy-small-2.svg" alt="将代码复制到剪贴板" width="14" height="13"&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre data-expanded="false"&gt; &lt;code class="language-none"&gt;version: &amp;quot;3.6&amp;quot; services: grafana-agent: image: grafana/agent:latest restart: always command: - run - --server.http.listen-addr=0.0.0.0:12345 - /etc/agent/config.river volumes: - ./config.river:/etc/agent/config.river ports: - &amp;quot;12345:12345&amp;quot; - &amp;quot;4317:4317&amp;quot; extra_hosts: - &amp;quot;host.docker.internal:host-gateway&amp;quot; environment: - AGENT_MODE=flow - OTLP_EXPORTER_DIGMA_COLLECTOR_API=host.docker.internal:5050 - GRAFANA_CLOUD_OTLP_ENDPOINT=--REPLACE_WITH_GRAFANA_ENDPOINT-- - GRAFANA_CLOUD_API_TOKEN=${GRAFANA_CLOUD_API_TOKEN} - GRAFANA_CLOUD_INSTANCE_ID=--REPLACE_WITH_GRAFNA_INSTANCE_ID--&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;使用从 Grafana Cloud 收集的信息替换“环境”元素下的值。我们希望将 API 令牌设置为参数，以避免将其本地存储在任何文件中。&lt;/p&gt;&lt;p&gt;运行 Docker Compose 文件，如下所示：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button x-data="app_code_snippet()" x-init="init()" @click="copy()"&gt;&lt;img class="code-clipboard__icon" src="/media/images/icons/icon-copy-small-2.svg" alt="将代码复制到剪贴板" width="14" height="13"&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre data-expanded="false"&gt; &lt;code class="language-none"&gt;cd observability docker compose up -e GRAFANA_CLOUD_API_TOKEN=--REPLACE_WITH_TOKEN--&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt; Grafana Alloy 包含一个用于调试管道状态的 UI，可从此&lt;a href="http://localhost:12345" target="_blank" rel="noopener noreferrer"&gt;URL&lt;/a&gt;访问。从那里，我们可以看到管道每个组件的状态和配置，还有一个很好的图表向我们展示了管道不同组件之间的关系。 &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1198px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/java-digma/relationship-graph.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/java-digma/relationship-graph.png"data-srcset="/media/blog/java-digma/relationship-graph.png?w=320 320w, /media/blog/java-digma/relationship-graph.png?w=550 550w, /media/blog/java-digma/relationship-graph.png?w=750 750w, /media/blog/java-digma/relationship-graph.png?w=900 900w, /media/blog/java-digma/relationship-graph.png?w=1040 1040w, /media/blog/java-digma/relationship-graph.png?w=1240 1240w, /media/blog/java-digma/relationship-graph.png?w=1920 1920w"
data-sizes="auto"alt="关系图"
width="1198"
height="795"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/java-digma/relationship-graph.png"
alt="关系图"
width="1198"
height="795"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="install-the-digma-plugin"&gt;安装 Digma 插件&lt;/h3&gt;&lt;p&gt;现在我们需要安装 Digma 插件以立即开始从 Java 应用程序收集数据。您可以从 IDE 中的 IntelliJ 市场安装它： &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1452px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/java-digma/digma-cf.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/java-digma/digma-cf.png"data-srcset="/media/blog/java-digma/digma-cf.png?w=320 320w, /media/blog/java-digma/digma-cf.png?w=550 550w, /media/blog/java-digma/digma-cf.png?w=750 750w, /media/blog/java-digma/digma-cf.png?w=900 900w, /media/blog/java-digma/digma-cf.png?w=1040 1040w, /media/blog/java-digma/digma-cf.png?w=1240 1240w, /media/blog/java-digma/digma-cf.png?w=1920 1920w"
data-sizes="auto"alt="IntelliJ 市场中的 Digma 持续反馈插件"
width="1452"
height="879"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/java-digma/digma-cf.png"
alt="IntelliJ 市场中的 Digma 持续反馈插件"
width="1452"
height="879"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;接下来，配置 Digma 插件以将本地跟踪发送到我们在前面的步骤中创建的 Alloy 容器。进入IntelliJ IDE的&lt;strong&gt;Settings&lt;/strong&gt;页面，搜索“Digma”，弹出Digma插件配置页面： &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1451px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/java-digma/digma-plugin-2.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/java-digma/digma-plugin-2.png"data-srcset="/media/blog/java-digma/digma-plugin-2.png?w=320 320w, /media/blog/java-digma/digma-plugin-2.png?w=550 550w, /media/blog/java-digma/digma-plugin-2.png?w=750 750w, /media/blog/java-digma/digma-plugin-2.png?w=900 900w, /media/blog/java-digma/digma-plugin-2.png?w=1040 1040w, /media/blog/java-digma/digma-plugin-2.png?w=1240 1240w, /media/blog/java-digma/digma-plugin-2.png?w=1920 1920w"
data-sizes="auto"alt="Digma 插件形式"
width="1451"
height="890"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/java-digma/digma-plugin-2.png"
alt="Digma 插件形式"
width="1451"
height="890"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;编辑“运行时可观察性后端 URL”字段并将其设置为&lt;a href="http://localhost:4317" target="_blank" rel="noopener noreferrer"&gt;http://localhost:4317&lt;/a&gt; 。这是 Alloy 收集器使用的默认端口。&lt;/p&gt;&lt;h3 id="run-your-code-and-validate-that-everything-works-as-expected"&gt;运行您的代码并验证一切是否按预期工作！&lt;/h3&gt;&lt;p&gt;安装 Digma 后，您的代码将被自动检测。&lt;/p&gt;&lt;p&gt;您可以在 IDE 中打开 Digma 可观察性面板来验证一切是否正常。该面板将始终反映最新捕获的可观测性数据。 &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1403px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/java-digma/grafana-cloud-traces.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/java-digma/grafana-cloud-traces.png"data-srcset="/media/blog/java-digma/grafana-cloud-traces.png?w=320 320w, /media/blog/java-digma/grafana-cloud-traces.png?w=550 550w, /media/blog/java-digma/grafana-cloud-traces.png?w=750 750w, /media/blog/java-digma/grafana-cloud-traces.png?w=900 900w, /media/blog/java-digma/grafana-cloud-traces.png?w=1040 1040w, /media/blog/java-digma/grafana-cloud-traces.png?w=1240 1240w, /media/blog/java-digma/grafana-cloud-traces.png?w=1920 1920w"
data-sizes="auto"alt="痕迹仪表板"
width="1403"
height="619"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/java-digma/grafana-cloud-traces.png"
alt="痕迹仪表板"
width="1403"
height="619"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="how-to-use-observability-data-when-developing-code"&gt;开发代码时如何使用可观测性数据&lt;/h2&gt;&lt;p&gt;当您工作（运行、调试或运行测试）时，Digma 插件会忙于分析可观测性数据、查找问题并创建有用的使用分析。然后，它将该数据集成到 IDE 中。数据还将紧密集成到代码本身中，因此您将能够在跟踪和相应的代码行之间快速跳转。&lt;/p&gt;&lt;p&gt;您可以在三个主要区域看到正在运行的数据：&lt;/p&gt;&lt;h3 id="the-observability-panel"&gt;可观察性面板&lt;/h3&gt;&lt;p&gt;当我们对数据管道进行健康检查时，我们已经审查了这个领域。在这里，您将能够快速跳转以查看最近操作的跟踪或导航到相关端点。&lt;/p&gt;&lt;h3 id="the-insights-panel"&gt;见解面板&lt;/h3&gt;&lt;p&gt;该面板致力于对每个代码位置、资产、数据库查询端点等进行更深入的分析。它与 IDE 中的代码交互，可以将您带到相关的代码位置或显示见解（问题和分析） ）与当前选定的代码相关。 &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 559px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/java-digma/digma-insights.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/java-digma/digma-insights.png"data-srcset="/media/blog/java-digma/digma-insights.png?w=320 320w, /media/blog/java-digma/digma-insights.png?w=550 550w, /media/blog/java-digma/digma-insights.png?w=750 750w, /media/blog/java-digma/digma-insights.png?w=900 900w, /media/blog/java-digma/digma-insights.png?w=1040 1040w, /media/blog/java-digma/digma-insights.png?w=1240 1240w, /media/blog/java-digma/digma-insights.png?w=1920 1920w"
data-sizes="auto"alt="Digma 见解面板"
width="559"
height="800"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/java-digma/digma-insights.png"
alt="Digma 见解面板"
width="559"
height="800"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="code-annotations"&gt;代码注释&lt;/h3&gt;&lt;p&gt;安装插件后，您将能够看到 CodeLens 覆盖在代码本身上，指示运行时使用情况、死代码和关键见解： &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1088px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/java-digma/code-sample.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/java-digma/code-sample.png"data-srcset="/media/blog/java-digma/code-sample.png?w=320 320w, /media/blog/java-digma/code-sample.png?w=550 550w, /media/blog/java-digma/code-sample.png?w=750 750w, /media/blog/java-digma/code-sample.png?w=900 900w, /media/blog/java-digma/code-sample.png?w=1040 1040w, /media/blog/java-digma/code-sample.png?w=1240 1240w, /media/blog/java-digma/code-sample.png?w=1920 1920w"
data-sizes="auto"alt="代码示例"
width="1088"
height="591"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/java-digma/code-sample.png"
alt="代码示例"
width="1088"
height="591"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h3 id="bonus-open-the-tracing-visualization-in-grafana-cloud-from-your-ide"&gt;奖励：从 IDE 打开 Grafana Cloud 中的跟踪可视化&lt;/h3&gt;&lt;p&gt;正如我们在上一节中看到的，我们可以在 IDE 中看到跟踪可视化。但是，我们还可以将 Digma 与 Grafana Cloud 连接起来，直接在您的实例中打开跟踪。 &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 700px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/java-digma/digma-plugin.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/java-digma/digma-plugin.png"data-srcset="/media/blog/java-digma/digma-plugin.png?w=320 320w, /media/blog/java-digma/digma-plugin.png?w=550 550w, /media/blog/java-digma/digma-plugin.png?w=750 750w, /media/blog/java-digma/digma-plugin.png?w=900 900w, /media/blog/java-digma/digma-plugin.png?w=1040 1040w, /media/blog/java-digma/digma-plugin.png?w=1240 1240w, /media/blog/java-digma/digma-plugin.png?w=1920 1920w"
data-sizes="auto"alt="Digma 插件报名表"
width="700"
height="478"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/java-digma/digma-plugin.png"
alt="Digma 插件报名表"
width="700"
height="478"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;要启用此行为：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;打开 Digma 设置页面。&lt;/li&gt;&lt;li&gt;将 Digma IntelliJ 插件的“Jaeger 链接模式”设置更改为外部&lt;/li&gt;&lt;li&gt;更改“Jaeger URL”设置以指向您的 Grafana Cloud Tracese 页面。您可以使用以下 URL 模板（并替换 [Your_Account]）：&lt;br /&gt;&lt;br /&gt; https://[YOUR_ACCOUNT].grafana.net/explore?left=%7B%22range%22%3A%7B%22from%22%3A%22now-5m%22%2C%22to%22%3A%22now%22 %7D%2C%22datasource%22%3A%22grafanacloud-traces%22%2C%22queries%22%3A%5B%7B%22query%22%3A% &lt;code&gt;{TRACE_ID}&lt;/code&gt; %22%2C%22queryType%22%3A%22traceql %22%7D%5D%7D&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;现在，在 IntelliJ 的 Digma Observability 视图中，如果单击跟踪按钮，您将在&lt;a href="/products/cloud/traces/"&gt;Grafana Cloud Traces&lt;/a&gt;中看到跟踪可视化。&lt;/p&gt;&lt;h2 id="code-with-feedback"&gt;带反馈的代码&lt;/h2&gt;&lt;p&gt;现在一切都已启动并运行，您可以开始尝试&lt;a href="https://digma.ai/continuous-feedback/" target="_blank" rel="noopener noreferrer"&gt;持续反馈&lt;/a&gt;(CF) 的新开发实践，它提供即时代码反馈和分析。作为开发人员，我们注意到可以轻松收集有关代码运行时的大量有用数据；然而，使这些数据有用完全是另一回事。这就是为什么将代码可观察性集成到更接近开发周期可以加速代码发布并帮助比以前更早地发现问题。观看&lt;a href="https://www.youtube.com/watch?v=3wgQl69WSvw" target="_blank" rel="noopener noreferrer"&gt;此视频&lt;/a&gt;了解 CF 的工作原理。&lt;/p&gt;&lt;p&gt;通过&lt;a href="https://continuous-feedback.slack.com/ssb/redirect" target="_blank" rel="noopener noreferrer"&gt;Slack 频道&lt;/a&gt;联系我们，让我们了解您的里程变化情况以及您能够利用的反馈类型！&lt;/p&gt;</description><pubDate>Fri, 21 Jun 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/21/shorten-your-feedback-loop-java-observability-with-opentelemetry-grafana-cloud-and-digma.ai/</guid></item><item><title>【How the DoD is embracing OSS and DevSecOps modernization with Grafana】</title><link>https://grafana.com/blog/2024/06/20/how-the-dod-is-embracing-oss-and-devsecops-modernization-with-grafana/</link><description>&lt;p&gt;当谈到可观察性时，我们相信开源最终会获胜。这是广大用户的共同看法，无论他们从事&lt;a href="https://grafana.com/blog/2023/09/25/how-to-monitor-slos-with-grafana-grafana-loki-prometheus-and-pyrra-inside-the-daimler-truck-observability-stack/"&gt;汽车制造&lt;/a&gt;、 &lt;a href="https://grafana.com/blog/2022/11/28/how-banco-itau-tracks-1.5b-daily-metrics-on-prem-and-in-aws-with-grafana-and-observability/"&gt;银行业&lt;/a&gt;还是&lt;a href="https://grafana.com/blog/2024/03/22/how-shipping/third-party-logistics-companies-reduce-mttr-and-increase-uptime-with-the-grafana-lgtm-stack/"&gt;航运业&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;美国联邦政府是另一个证明这一点的行业，表明即使是那些在最严格的安全和合规要求下运营的企业也将 OSS 视为他们的首选方法。在这篇博文中，我们将简要介绍国防部如何优先考虑开源，作为更广泛推动软件开发现代化的一部分，以及 Grafana 如何支持这些努力。&lt;/p&gt;&lt;h2 id="oss-and-software-factories"&gt; OSS 和软件工厂&lt;/h2&gt;&lt;p&gt;国防部几十年来一直&lt;a href="https://dodcio.defense.gov/Open-Source-Software-FAQ/#q-does-the-dod-already-use-open-source-software" rel="noopener noreferrer" target="_blank"&gt;广泛使用开源&lt;/a&gt;，但它越来越成为国防软件项目的起点，作为减少依赖性、避免供应商锁定以及部署为云和微服务构建的工具的手段。在&lt;a href="https://dodcio.defense.gov/portals/0/documents/library/softwaredev-opensource.pdf" rel="noopener noreferrer" target="_blank"&gt;2022 年的一份备忘录&lt;/a&gt;中，国防部首席信息官约翰·谢尔曼 (John Sherman) 写道，该部门更喜欢“在购买专有产品之前采用现有的政府或 OSS 解决方案”，并补充说“OSS 构成了软件定义世界的基石，对于更快地交付软件至关重要。”&lt;/p&gt;&lt;p&gt;去年，国防部公开发布了一项&lt;a href="https://dodcio.defense.gov/Portals/0/Documents/Library/SW-Mod-I-PlanExecutiveSummary.pdf" rel="noopener noreferrer" target="_blank"&gt;软件现代化计划&lt;/a&gt;，该计划不仅优先考虑速度，还优先考虑软件开发和管理中更好的质量和保护。这种转变的一个重要部分是推动创建 &lt;a href="https://en.wikipedia.org/wiki/Software_factory" rel="noopener noreferrer" target="_blank"&gt;软件工厂&lt;/a&gt;生态系统，该生态系统创建一个工具和流程框架来自动化开发人员使用的许多底层组件。对于国防部来说，这意味着创建一个以 DevSecOps 原则为基础的持续开发管道。&lt;/p&gt;&lt;blockquote class="pullquote en "&gt;&lt;div class="pullquote__content"&gt;&lt;p&gt; OSS 构成了软件定义世界的基石，对于更快地交付软件至关重要。&lt;/p&gt;&lt;p&gt;美国国防部首席信息官约翰·谢尔曼&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;软件工厂提供商联盟已经开始出现，重点是&lt;a href="https://coalition.dso.mil/about-us/" rel="noopener noreferrer" target="_blank"&gt;构建开放的生态系统&lt;/a&gt;。其中一个提供商&lt;a href="https://p1.dso.mil/" rel="noopener noreferrer" target="_blank"&gt;Platform One&lt;/a&gt;托管 CI/CD DevSecOps 管道，并提供用于托管微服务的安全 Kubernetes 平台。 Platform One 的核心产品包括 Big Bang，这是一个可定制的平台，旨在加速国防部内的软件开发和部署。它提供了一套全面的工具和服务，包括基础设施配置、CI/CD 管道和安全扫描，目前正被空军、陆军和海军等国防部部门使用。&lt;/p&gt;&lt;p&gt;去年，第一平台&lt;a href="https://docs-bigbang.dso.mil/latest/blog/big-bang-2-0/" rel="noopener noreferrer" target="_blank"&gt;推出了Big Bang 2.0&lt;/a&gt; ，降低准入门槛，默认平台免费开放。该版本的一个重要部分是包含了三个 Grafana Labs 开源项目：用于日志的&lt;a href="https://grafana.com/oss/loki/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Loki&lt;/a&gt; 、用于可视化的&lt;a href="https://grafana.com/oss/grafana?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana&lt;/a&gt;和用于跟踪的&lt;a href="https://grafana.com/oss/tempo/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Tempo&lt;/a&gt; 。&lt;/p&gt;&lt;p&gt; Big Bang 的默认堆栈已从 Elasticsearch、Fluentbit 和 Kibana 的组合切换为 Promtail、Loki 和 Grafana，Platform One 表示用户的资源成本较低，并且无需核心功能的许可证要求。作为这一转变的一部分，Big Bang 2.0 还将追踪从 Jaeger 转移到 Tempo，因为它与其堆栈集成得更好。&lt;/p&gt;&lt;h2 id="how-dod-software-factories-can-rely-on-grafana"&gt;国防部软件工厂如何依赖 Grafana&lt;/h2&gt;&lt;p&gt; Grafana 非常适合现代软件开发，无论哪个行业。它是一个集中式可观察平台，聚合来自不同来源的数据，包括基础设施、应用程序和网络设备。这使得软件工厂能够在单一管理平台中全面了解整个生态系统，从而能够主动检测和解决问题。&lt;/p&gt;&lt;p&gt;开发人员可以使用定制的、基于角色的仪表板来立即了解关键绩效指标 (KPI)，例如构建和部署指标、系统正常运行时间和资源利用率。他们还可以使用 Grafana 通过识别交付流程中的瓶颈和低效率来提高系统可靠性。&lt;/p&gt;&lt;p&gt;要详细了解 Grafana 如何帮助 DoD 团队提供更快、更可靠的部署，请发送电子邮件至&lt;a href="mailto:federal@grafana.com"&gt;Federal@grafana.com&lt;/a&gt;&lt;a href="https://grafana.com/blog/federal@grafana.com"&gt;&lt;/a&gt; 。请查看我们的&lt;a href="https://grafana.com/blog/2021/09/29/the-u.s.-department-of-defense-formally-authorizes-grafana-grafana-enterprise-and-loki-for-its-100000-developers/"&gt;其他博客文章，&lt;/a&gt;重点介绍&lt;a href="https://grafana.com/blog/2022/02/04/a-look-at-how-the-u.s.-department-of-defense-deploys-the-grafana-stack/?pg=blog&amp;amp;plcmt=body-txt"&gt;DoD 如何部署 Grafana&lt;/a&gt; 。&lt;/p&gt;</description><pubDate>Thu, 20 Jun 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/20/how-the-dod-is-embracing-oss-and-devsecops-modernization-with-grafana/</guid></item><item><title>【Translate Datadog metrics into OTLP with the OpenTelemetry Collector and Grafana Alloy】</title><link>https://grafana.com/blog/2024/06/18/translate-datadog-metrics-into-otlp-with-the-opentelemetry-collector-and-grafana-alloy/</link><description>&lt;p&gt;&lt;em&gt;编者注： &lt;a href="https://grafana.com/docs/alloy/v1.2/"&gt;Grafana Alloy v1.2.0&lt;/a&gt;于 2024 年 6 月 26 日发布。此博客已更新以反映这一变化。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;今天，我们很高兴地宣布，我们将以开源方式发布&lt;a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/datadogreceiver" rel="noopener noreferrer" target="_blank"&gt;OpenTelemetry Datadog 接收器&lt;/a&gt;的新代码。此代码允许用户将 Datadog 指标格式转换为本机 OTLP 格式。然后，这些指标可以发送到任何与 OpenTelemetry 兼容的指标系统，无论是 Prometheus、 &lt;a href="https://grafana.com/oss/mimir/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Mimir&lt;/a&gt;还是其他后端数据库。&lt;/p&gt;&lt;p&gt; Grafana Labs 的核心价值观是拥抱&lt;a href="https://grafana.com/blog/2022/11/01/watch-grafana-labs-ceo-co-founder-raj-dutt-discuss-why-companies-need-observability/"&gt;“大帐篷”理念&lt;/a&gt;，过去当我们作为&lt;a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/1852#issuecomment-1403663819" rel="noopener noreferrer" target="_blank"&gt;Datadog 接收器的审阅者和代码共同所有者以获取 OTel 社区提出的跟踪时&lt;/a&gt;，或者当我们构建&lt;a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/18635" rel="noopener noreferrer" target="_blank"&gt;Loki 接收器&lt;/a&gt;时，就证明了这一点。我们相信让我们的用户能够在他们的可观察性策略中做出自己的选择。我们优先考虑互操作性和减少供应商锁定，并且我们坚信开源的价值。&lt;/p&gt;&lt;p&gt;我们的 OpenTelemetry Datadog 接收器代码最初是一个支持大客户迁移的项目。本着尽快将工作代码交到尽可能多的人手中的精神，我们从今天开始在&lt;a href="https://github.com/grafana/alloy" rel="noopener noreferrer" target="_blank"&gt;Grafana Alloy&lt;/a&gt;中提供它，这是我们的 OpenTelemetry Collector 发行版，它为 OpenTelemetry 和 Prometheus 格式提供了独特的本机管道。基于此代码库，我们已向&lt;a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/33631" rel="noopener noreferrer" target="_blank"&gt;OpenTelemetry 提交了第一个 PR&lt;/a&gt; ，并将通过正常渠道合并我们的所有工作。由于我们预计此代码会根据社区审查和反馈进行更改，因此此功能在 Grafana Alloy 中被标记为实验性的。一旦我们的代码被合并到 OpenTelemetry 的上游主分支中，我们也将在 Grafana Alloy 中更新并发布它。&lt;/p&gt;&lt;h2 id="translate-datadog-metrics-to-otlp-how-it-works"&gt;将 Datadog 指标转换为 OTLP：它是如何工作的&lt;/h2&gt;&lt;p&gt;&lt;em&gt;编者注：Datadog、Prometheus 和 OpenTelemetry 对指标类型使用不同的术语。在本博客中，除非另有说明，我们使用 OpenTelemetry 术语。&lt;/em&gt;&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/opentelemetry-datadog-receiver/datadog-otlp-metrics-chart.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/opentelemetry-datadog-receiver/datadog-otlp-metrics-chart.png"data-srcset="/media/blog/opentelemetry-datadog-receiver/datadog-otlp-metrics-chart.png?w=320 320w, /media/blog/opentelemetry-datadog-receiver/datadog-otlp-metrics-chart.png?w=550 550w, /media/blog/opentelemetry-datadog-receiver/datadog-otlp-metrics-chart.png?w=750 750w, /media/blog/opentelemetry-datadog-receiver/datadog-otlp-metrics-chart.png?w=900 900w, /media/blog/opentelemetry-datadog-receiver/datadog-otlp-metrics-chart.png?w=1040 1040w, /media/blog/opentelemetry-datadog-receiver/datadog-otlp-metrics-chart.png?w=1240 1240w, /media/blog/opentelemetry-datadog-receiver/datadog-otlp-metrics-chart.png?w=1920 1920w"
data-sizes="auto"alt="Datadog 指标如何转换为 OTLP 格式的图表"
width="1200"
height="628"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/opentelemetry-datadog-receiver/datadog-otlp-metrics-chart.png"
alt="Datadog 指标如何转换为 OTLP 格式的图表"
width="1200"
height="628"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt; Datadog 的&lt;a href="https://docs.datadoghq.com/metrics/types/?tab=count" target="_blank" rel="noopener noreferrer"&gt;官方文档&lt;/a&gt;提供了有关其指标类型的完整信息：计数、计量、速率、直方图和分布。&lt;/p&gt;&lt;p&gt;转换 Count、Gauge 和 Rate 指标类型的过程相对简单，因为它们都可以相当直接地映射到&lt;a href="https://opentelemetry.io/docs/specs/otel/metrics/data-model/#point-kinds" target="_blank" rel="noopener noreferrer"&gt;OpenTelemetry 指标格式&lt;/a&gt;。 Datadog Gauge 指标可以映射到 OpenTelemetry Gauge 指标，Count 和 Rate 指标可以映射到 OpenTelemetry Sum 指标（通过调整 Rate 指标的值来考虑间隔）。&lt;/p&gt;&lt;p&gt; Datadog Distribution 指标类型可以最接近地映射到 OpenTelemetry 的指数直方图指标类型。由于两个系统中定义桶边界的方式不同，这是一个更具挑战性的转换。实施了尽力翻译，以最大程度地减少生成的指数直方图的准确性损失。&lt;/p&gt;&lt;p&gt;有关技术实现的更多详细信息将在未来的博客文章中介绍。&lt;/p&gt;&lt;h2 id="from-datadog-metrics-to-prometheus-metrics"&gt;从 Datadog 指标到 Prometheus 指标&lt;/h2&gt;&lt;p&gt;一旦启用 Datadog 接收器，收集器将有效地使用来自 Datadog 检测应用程序的 OpenTelemetry 指标。您可以从各种收集器导出器中进行选择，将这些指标写入特定后端。但是，我们建议您使用&lt;a href="https://opentelemetry.io/docs/languages/sdk-configuration/otlp-exporter/" target="_blank" rel="noopener noreferrer"&gt;默认的 OTLP 导出器&lt;/a&gt;，以使您的管道尽可能成为 OTel 原生管道。&lt;/p&gt;&lt;p&gt;值得注意的是，OpenTelemetry 规范定义了&lt;a href="https://opentelemetry.io/docs/specs/otel/metrics/data-model/#temporality" target="_blank" rel="noopener noreferrer"&gt;两种不同的时间性&lt;/a&gt;。如果您打算写入 Prometheus、Mimir OSS 或 Grafana Cloud，则需要处理器在这些时间性之间进行转换。&lt;/p&gt;&lt;p&gt;对于此类用例，我们构建并贡献了一个开源处理器，称为&lt;a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/deltatocumulativeprocessor" target="_blank" rel="noopener noreferrer"&gt;deltatocumulative 处理器&lt;/a&gt;。一旦 OTLP 指标从 Datadog 接收器发出并通过该处理器，它们就可以通过 OTLP HTTP 导出器导出到 Prometheus 的本机 OTLP 端点或其他系统，例如 Grafana Cloud。&lt;/p&gt;&lt;p&gt;我们计划将来发布有关 deltatocumulative 处理器的技术深度博客。&lt;/p&gt;&lt;h2 id="how-to-get-started-translating-datadog-metrics-to-otlp"&gt;如何开始将 Datadog 指标转换为 OTLP&lt;/h2&gt;&lt;p&gt;我们预计上游审核过程将需要几周时间，因为我们会与 OpenTelemetry 社区进行协调。同时，我们希望您今天就能尝试一下，因此我们在&lt;a href="/docs/alloy/v1.2/"&gt;Grafana Alloy v1.2.0&lt;/a&gt;中包含了接收器和处理器。 &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1200px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/opentelemetry-datadog-receiver/datadog-opentelemetry-architecture-diagram.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/opentelemetry-datadog-receiver/datadog-opentelemetry-architecture-diagram.png"data-srcset="/media/blog/opentelemetry-datadog-receiver/datadog-opentelemetry-architecture-diagram.png?w=320 320w, /media/blog/opentelemetry-datadog-receiver/datadog-opentelemetry-architecture-diagram.png?w=550 550w, /media/blog/opentelemetry-datadog-receiver/datadog-opentelemetry-architecture-diagram.png?w=750 750w, /media/blog/opentelemetry-datadog-receiver/datadog-opentelemetry-architecture-diagram.png?w=900 900w, /media/blog/opentelemetry-datadog-receiver/datadog-opentelemetry-architecture-diagram.png?w=1040 1040w, /media/blog/opentelemetry-datadog-receiver/datadog-opentelemetry-architecture-diagram.png?w=1240 1240w, /media/blog/opentelemetry-datadog-receiver/datadog-opentelemetry-architecture-diagram.png?w=1920 1920w"
data-sizes="auto"alt="Grafana Alloy 配置中使用的 OpenTelemetry Datadog 接收器架构"
width="1200"
height="628"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/opentelemetry-datadog-receiver/datadog-opentelemetry-architecture-diagram.png"
alt="Grafana Alloy 配置中使用的 OpenTelemetry Datadog 接收器架构"
width="1200"
height="628"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;这是合金配置示例：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button x-data="app_code_snippet()" x-init="init()" @click="copy()"&gt;&lt;img class="code-clipboard__icon" src="/media/images/icons/icon-copy-small-2.svg" alt="将代码复制到剪贴板" width="14" height="13"&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre data-expanded="false"&gt; &lt;code class="language-none"&gt;otelcol.processor.deltatocumulative “example” { max_stale = “5m” max_streams = 10000 output { metrics = [otelcol.processor.batch.example.input] } } otelcol.processor.batch “example” { output { metrics = [otelcol.exporter.otlp.default.input] } } otelcol.receiver.datadog “example” { endpoint = “localhost:4444” output { metrics = [otelcol.processor.deltatocumulative.example.input] } }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="how-to-configure-datadog-agent-to-send-data-to-alloy"&gt;如何配置 Datadog Agent 将数据发送到 Alloy&lt;/h3&gt;&lt;p&gt;您可以设置 Datadog Agent 以将 Datadog 指标同时转发到 Alloy 和 Datadog。我们向当前想要尝试此方法的 Datadog 用户推荐此方法。&lt;/p&gt;&lt;p&gt;将以下环境变量添加到您的 datadog-agent 安装中，其中 port 是之前为 Datadog 接收器配置的端口。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button x-data="app_code_snippet()" x-init="init()" @click="copy()"&gt;&lt;img class="code-clipboard__icon" src="/media/images/icons/icon-copy-small-2.svg" alt="将代码复制到剪贴板" width="14" height="13"&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre data-expanded="false"&gt; &lt;code class="language-none"&gt;DD_ADDITIONAL_ENDPOINTS=&amp;#39;{&amp;quot;http://&amp;lt;alloy_endpoint&amp;gt;:&amp;lt;port&amp;gt;&amp;quot;: [&amp;quot;grafana-labs&amp;quot;]}&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;您还可以通过更新配置 yaml 中的 Datadog URL 来设置 Datadog Agent 将所有指标转发到 Alloy：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button x-data="app_code_snippet()" x-init="init()" @click="copy()"&gt;&lt;img class="code-clipboard__icon" src="/media/images/icons/icon-copy-small-2.svg" alt="将代码复制到剪贴板" width="14" height="13"&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre data-expanded="false"&gt; &lt;code class="language-none"&gt;dd_url: http://&amp;lt;alloy_endpoint&amp;gt;:&amp;lt;port&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;或者通过环境变量：&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button x-data="app_code_snippet()" x-init="init()" @click="copy()"&gt;&lt;img class="code-clipboard__icon" src="/media/images/icons/icon-copy-small-2.svg" alt="将代码复制到剪贴板" width="14" height="13"&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre data-expanded="false"&gt; &lt;code class="language-none"&gt;DD_DD_URL=http://&amp;lt;alloy_endpoint&amp;gt;:&amp;lt;port&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;如需分步指南，请查看我们的&lt;a href="/docs/alloy/v1.2/tasks/configure-alloy-to-use-datadog-receiver/"&gt;合金文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 id="tell-us-what-you-think"&gt;告诉我们你的想法！&lt;/h2&gt;&lt;p&gt;一如既往，欢迎并感谢社区反馈！请将您在接收器中发现的任何问题提交到 GitHub 的上游&lt;a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/" target="_blank" rel="noopener noreferrer"&gt;opentelemetry-collector-contrib 存储库&lt;/a&gt;中。&lt;/p&gt;&lt;p&gt;除了这个用于 Datadog 指标摄取的新解决方案之外，Grafana Labs 还可以帮助客户自动将仪表板、警报和 SLO 从 Datadog 迁移到 Grafana Cloud。这些迁移由我们专门的专业服务团队领导，可以大大缩短将在 Datadog 上投入大量资金的组织迁移到 Grafana Cloud 所需的时间。要了解更多信息，请联系&lt;a href="/contact?about=grafana-plugins&amp;amp;topic=enterprise-plugin&amp;amp;pg=blog&amp;amp;plcmt=body-txt&amp;amp;value=Datadog"&gt;客户支持&lt;/a&gt;。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪、仪表板等的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Tue, 18 Jun 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/18/translate-datadog-metrics-into-otlp-with-the-opentelemetry-collector-and-grafana-alloy/</guid></item><item><title>【How to use OpenTelemetry resource attributes and Grafana Cloud Application Observability to accelerate root cause analysis】</title><link>https://grafana.com/blog/2024/06/17/how-to-use-opentelemetry-resource-attributes-and-grafana-cloud-application-observability-to-accelerate-root-cause-analysis/</link><description>&lt;p&gt;让我们想象一个场景：您使用 OpenTelemetry，并且您的可观察性后端在多个主机上运行。您收集有关应用程序延迟的数据，并注意到您想要调查的最近的增长。但是您如何知道哪个主机导致了性能下降呢？&lt;/p&gt;&lt;p&gt;这正是&lt;a href="https://opentelemetry.io/docs/languages/js/resources/" rel="noopener noreferrer" target="_blank"&gt;OpenTelmetry 资源的&lt;/a&gt;用武之地。&lt;/p&gt;&lt;p&gt;在 OpenTelemetry 的上下文中，&lt;em&gt;资源&lt;/em&gt;表示生成遥测数据的实体，例如容器、主机、进程、服务或操作系统。创建&lt;code&gt;TraceProvider&lt;/code&gt;或&lt;code&gt;MetricProvider&lt;/code&gt;时，资源将与其关联，因此，其&lt;code&gt;Tracer&lt;/code&gt;和&lt;code&gt;Meter&lt;/code&gt;生成的所有范围和指标也将与其关联。&lt;/p&gt;&lt;p&gt;每个资源都有自己的一组&lt;em&gt;属性&lt;/em&gt;。例如，主机具有有关其 ID、映像、名称、类型、IP 和 CPU 的属性。有了这些信息，您就可以过滤并缩小导致问题的主机范围。您甚至可以比较属性以注意模式。例如，您可能会注意到一种模式，其中特定类型的所有主机都具有更好的延迟，然后可以使用该信息对其余主机进行更改以匹配具有更好性能的主机。&lt;/p&gt;&lt;p&gt;有关资源的信息是通过 OpenTelemetry &lt;em&gt;&lt;a href="https://opentelemetry.io/docs/languages/php/resources/#resource-detection" rel="noopener noreferrer" target="_blank"&gt;资源检测器&lt;/a&gt;&lt;/em&gt;收集的，但并非所有资源检测器都默认启用。&lt;/p&gt;&lt;p&gt;让我们仔细看看如何使用资源检测器收集资源属性，以及如何使用&lt;a href="https://grafana.com/products/cloud/application-observability/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud Application Observability&lt;/a&gt;从这些属性中获取有意义的见解。&lt;/p&gt;&lt;h2 id="how-to-collect-resource-attributes"&gt;如何收集资源属性&lt;/h2&gt;&lt;p&gt;大多数 OpenTelemetry SDK 都提供了可供您使用的资源检测器列表。最常见的是主机、云提供商、服务、进程、进程运行时、操作系统、容器和 Kubernetes。每个特定于语言的 SDK 都有自己的方式来设置其资源检测器。&lt;/p&gt;&lt;p&gt;您可以查看相应的文档，了解有关如何设置每种语言和资源检测器类型的更多详细信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;strong&gt;Java&lt;/strong&gt; ： &lt;a href="https://github.com/open-telemetry/opentelemetry-java-contrib/tree/main/aws-resources" rel="noopener noreferrer" target="_blank"&gt;AWS&lt;/a&gt; 、 &lt;a href="https://github.com/open-telemetry/opentelemetry-java-contrib/tree/main/gcp-resources" rel="noopener noreferrer" target="_blank"&gt;GCP&lt;/a&gt; 、 &lt;a href="https://github.com/open-telemetry/opentelemetry-java-contrib/tree/main/resource-providers" rel="noopener noreferrer" target="_blank"&gt;提供商&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;.NET&lt;/strong&gt; ： &lt;a href="https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.AWS" rel="noopener noreferrer" target="_blank"&gt;AWS&lt;/a&gt; 、 &lt;a href="https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.Azure" rel="noopener noreferrer" target="_blank"&gt;Azure&lt;/a&gt; 、 &lt;a href="https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.Container" rel="noopener noreferrer" target="_blank"&gt;容器&lt;/a&gt;、 &lt;a href="https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.Gcp" rel="noopener noreferrer" target="_blank"&gt;GCP&lt;/a&gt; 、 &lt;a href="https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.Host" rel="noopener noreferrer" target="_blank"&gt;主机&lt;/a&gt;、 &lt;a href="https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.Process" rel="noopener noreferrer" target="_blank"&gt;进程&lt;/a&gt;、 &lt;a href="https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.ProcessRuntime" rel="noopener noreferrer" target="_blank"&gt;运行时&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; ： &lt;a href="https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/detectors/node/opentelemetry-resource-detector-alibaba-cloud" rel="noopener noreferrer" target="_blank"&gt;阿里巴巴&lt;/a&gt;、 &lt;a href="https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/detectors/node/opentelemetry-resource-detector-aws" rel="noopener noreferrer" target="_blank"&gt;AWS&lt;/a&gt; 、 &lt;a href="https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/detectors/node/opentelemetry-resource-detector-azure" rel="noopener noreferrer" target="_blank"&gt;Azure&lt;/a&gt; 、 &lt;a href="https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/detectors/node/opentelemetry-resource-detector-container" rel="noopener noreferrer" target="_blank"&gt;容器&lt;/a&gt;、 &lt;a href="https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/detectors/node/opentelemetry-resource-detector-gcp" rel="noopener noreferrer" target="_blank"&gt;GCP&lt;/a&gt; 、 &lt;a href="https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/detectors/node/opentelemetry-resource-detector-instana" rel="noopener noreferrer" target="_blank"&gt;Instana&lt;/a&gt; 、 &lt;a href="https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-sdk-node#resourcedetectors" rel="noopener noreferrer" target="_blank"&gt;通用&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;去&lt;/strong&gt;： &lt;a href="https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/detectors/aws" rel="noopener noreferrer" target="_blank"&gt;AWS&lt;/a&gt; 、 &lt;a href="https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/detectors/gcp" rel="noopener noreferrer" target="_blank"&gt;GCP&lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;strong&gt;Python&lt;/strong&gt; ： &lt;a href="https://github.com/open-telemetry/opentelemetry-python-contrib/tree/main/resource/opentelemetry-resource-detector-azure" rel="noopener noreferrer" target="_blank"&gt;Azure&lt;/a&gt; 、 &lt;a href="https://github.com/open-telemetry/opentelemetry-python-contrib/tree/main/resource/opentelemetry-resource-detector-container" rel="noopener noreferrer" target="_blank"&gt;容器&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PHP&lt;/strong&gt; ： &lt;a href="https://github.com/open-telemetry/opentelemetry-php-contrib/tree/main/src/ResourceDetectors/Azure" rel="noopener noreferrer" target="_blank"&gt;Azure&lt;/a&gt; ， &lt;a href="https://github.com/open-telemetry/opentelemetry-php-contrib/tree/main/src/ResourceDetectors/Container" rel="noopener noreferrer" target="_blank"&gt;容器&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在这篇文章的后面，我们将通过一个示例来演示如何在 Node.js 中设置资源检测器。&lt;/p&gt;&lt;blockquote&gt;&lt;h3 id="committed-to-upstream-opentelemetry"&gt;致力于上游 OpenTelemetry&lt;/h3&gt;&lt;p&gt;我们相信有一些资源属性可以对用户有所帮助，例如主机的 ID、名称和版本以及服务。 OpenTelemtry SDK 正在逐步开发，不同的语言可以根据功能开发的顺序定义不同的优先级。使用这些 SDK 的人员数量也各不相同，这意味着某些语言比其他语言发展得更进一步。这就是为什么我们的团队一直在积极致力于在不同语言的 SDK 中实现某些属性的资源检测器，这样我们就可以将它们全部放到同一个地方。&lt;/p&gt;&lt;p&gt;在 Grafana Labs，我们非常重视并&lt;a href="https://grafana.com/blog/2024/01/31/opentelemetry-and-grafana-labs-whats-new-and-whats-next/"&gt;坚定致力于&lt;/a&gt;OpenTelemetry 项目。这意味着我们创建或改进资源检测器的工作是直接在上游完成的，以使所有用户受益，而不仅仅是 Grafana 用户。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="how-to-use-resource-attributes"&gt;如何使用资源属性&lt;/h2&gt;&lt;p&gt;现在，我们将通过一个示例来介绍如何收集有关&lt;code&gt;host.id&lt;/code&gt;和&lt;code&gt;service.instance.id&lt;/code&gt;的信息，这些信息是我们的 OpenTelemetry SDK 团队已经研究过的资源属性的示例。这些属性现在可以由它们自己的资源检测器收集，也可以作为 Node.js、Java、.NET、Go、Python 和 PHP SDK 上云提供商资源检测器的一部分进行收集：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;code&gt;host.id&lt;/code&gt; ：唯一的主机 ID。对于云，这必须是云提供商分配的&lt;code&gt;instance_id&lt;/code&gt; 。对于非容器化系统，这应该是&lt;code&gt;machine-id&lt;/code&gt; 。&lt;/li&gt;&lt;li&gt; &lt;code&gt;service.instance.id&lt;/code&gt; ：服务实例的字符串 ID，格式为 UUID。对于同一&lt;code&gt;service.namespace,service.name&lt;/code&gt;对的每个实例，它必须是唯一的。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;注意：本指南适用于本地开发或评估设置，并将数据直接发送到 Grafana Cloud，无需&lt;a href="https://opentelemetry.io/docs/collector/" rel="noopener noreferrer" target="_blank"&gt;OpenTelemetry Collector&lt;/a&gt;或&lt;a href="https://grafana.com/docs/alloy/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Alloy&lt;/a&gt; 。可以&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/setup/instrument/nodejs/"&gt;在此处&lt;/a&gt;找到制作指南。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;您还可以将数据发送到 Grafana Cloud 或自托管的 Grafana LGTM Stack（查看本&lt;a href="https://github.com/grafana/docker-otel-lgtm/" rel="noopener noreferrer" target="_blank"&gt;指南&lt;/a&gt;）并使用 Grafana 构建您自己的仪表板。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;由于 OpenTelemetry 与供应商无关，因此您还可以针对使用 OTLP 协议接受 OpenTelemetry 数据的任何供应商后端执行此博客文章中的步骤 - 只需忽略 Grafana 特定的部分即可。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;确保本地安装了以下软件： &lt;a href="https://docs.npmjs.com/downloading-and-installing-node-js-and-npm" rel="noopener noreferrer" target="_blank"&gt;Node.js 和 npm&lt;/a&gt; 。&lt;/p&gt;&lt;h3 id="create-a-nodejs-application"&gt;创建 Node.js 应用程序&lt;/h3&gt;&lt;p&gt;如果您已经有应用程序，则可以跳过此步骤。此示例使用基本的&lt;a href="https://expressjs.com/" rel="noopener noreferrer" target="_blank"&gt;Express&lt;/a&gt;应用程序，但您可以使用任何其他框架。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;在开发目录中创建一个空的&lt;code&gt;package.json&lt;/code&gt; 。&lt;/li&gt;&lt;/ol&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;npm init -y&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start="2"&gt;&lt;li&gt;安装 Express 依赖项。&lt;/li&gt;&lt;/ol&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;npm install typescript \ ts-node \ @types/node \ express \ @types/express # initialize typescript npx tsc --init&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start="3"&gt;&lt;li&gt;创建一个&lt;code&gt;app.ts&lt;/code&gt;文件。&lt;/li&gt;&lt;/ol&gt;&lt;div class="code-snippet "&gt;&lt;div class="lang-toolbar"&gt; &lt;span class="lang-toolbar__item"&gt;JavaScript&lt;/span&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;div class="lang-toolbar__border"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="code-snippet "&gt;&lt;pre&gt; &lt;code class="language-javascript"&gt;import express, { Express } from &amp;#39;express&amp;#39;; const PORT: number = parseInt(process.env.PORT || &amp;#39;8080&amp;#39;); const app: Express = express(); function getRandomNumber(min: number, max: number) { return Math.floor(Math.random() * (max - min) + min); } app.get(&amp;#39;/rolldice&amp;#39;, (req, res) =&amp;gt; { res.send(getRandomNumber(1, 6).toString()); }); app.listen(PORT, () =&amp;gt; { console.log(`Listening for requests on http://localhost:${PORT}`); });&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start="4"&gt;&lt;li&gt;运行应用程序并打开&lt;a href="http://localhost:8080/rolldice" rel="noopener noreferrer" target="_blank"&gt;http://localhost:8080/rolldice&lt;/a&gt;以确保其正常工作。&lt;/li&gt;&lt;/ol&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;$ npx ts-node app.ts Listening for requests on http://localhost:8080&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;以下命令安装 Node.js API、SDK 和自动检测工具。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button&gt;&lt;img alt="将代码复制到剪贴板" class="code-clipboard__icon" height="13" src="https://grafana.com/media/images/icons/icon-copy-small-2.svg" width="14" /&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre&gt;&lt;code class="language-none"&gt;npm install --save @opentelemetry/api npm install --save @opentelemetry/auto-instrumentations-node&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="configure-an-application"&gt;配置应用程序&lt;/h3&gt;&lt;p&gt;接下来，我们需要收集身份验证环境变量以连接到 Grafana。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;登录&lt;a href="https://grafana.com/"&gt;Grafana Cloud&lt;/a&gt; （还没有 Grafana Cloud 帐户？&lt;a href="https://grafana.com/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;立即注册一个免费帐户&lt;/a&gt;）。浏览器将导航到 Grafana Cloud Portal 页面： &lt;a href="https://grafana.com/profile/org"&gt;https://grafana.com/profile/org&lt;/a&gt; 。如果帐户有权访问多个 Grafana Cloud 组织，请从左上方的&lt;strong&gt;组织&lt;/strong&gt;下拉列表中选择一个组织。如果组织有权访问多个 Grafana Cloud 堆栈，请从&lt;strong&gt;左侧边栏&lt;/strong&gt;或主&lt;strong&gt;堆栈&lt;/strong&gt;列表导航到堆栈。&lt;/li&gt;&lt;li&gt;选择堆栈后，或在单堆栈场景中，在&lt;strong&gt;管理您的 Grafana Cloud Stack&lt;/strong&gt;下方，单击 OpenTelemetry 部分中的&lt;strong&gt;配置&lt;/strong&gt;。&lt;/li&gt;&lt;/ol&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/otel-reource-attributes/otel-resource-attributes-configure.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/otel-reource-attributes/otel-resource-attributes-configure.png"data-srcset="/media/blog/otel-reource-attributes/otel-resource-attributes-configure.png?w=320 320w, /media/blog/otel-reource-attributes/otel-resource-attributes-configure.png?w=550 550w, /media/blog/otel-reource-attributes/otel-resource-attributes-configure.png?w=750 750w, /media/blog/otel-reource-attributes/otel-resource-attributes-configure.png?w=900 900w, /media/blog/otel-reource-attributes/otel-resource-attributes-configure.png?w=1040 1040w, /media/blog/otel-reource-attributes/otel-resource-attributes-configure.png?w=1240 1240w, /media/blog/otel-reource-attributes/otel-resource-attributes-configure.png?w=1920 1920w"
data-sizes="auto"alt="OpenTelemetry 的“配置”按钮的屏幕截图。"
width="348"
height="163"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/otel-reource-attributes/otel-resource-attributes-configure.png"
alt="OpenTelemetry 的“配置”按钮的屏幕截图。"
width="348"
height="163"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;ol start="3"&gt;&lt;li&gt;在&lt;strong&gt;“密码/API 令牌”&lt;/strong&gt;部分中，单击&lt;strong&gt;“立即生成”&lt;/strong&gt;以创建新的 API 令牌：&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;为 API 令牌命名&lt;em&gt;-&lt;/em&gt;例如&lt;code&gt;test-service&lt;/code&gt; 。&lt;/li&gt;&lt;li&gt;单击&lt;strong&gt;创建令牌。&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;单击&lt;strong&gt;“关闭”&lt;/strong&gt;而不复制令牌。&lt;/li&gt;&lt;li&gt;单击&lt;strong&gt;复制到剪贴板&lt;/strong&gt;将环境变量复制到剪贴板。 &lt;/li&gt;&lt;/ul&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1230px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/otel-reource-attributes/otel-resource-attributes-attributes-env-variables.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/otel-reource-attributes/otel-resource-attributes-attributes-env-variables.png"data-srcset="/media/blog/otel-reource-attributes/otel-resource-attributes-attributes-env-variables.png?w=320 320w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-env-variables.png?w=550 550w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-env-variables.png?w=750 750w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-env-variables.png?w=900 900w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-env-variables.png?w=1040 1040w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-env-variables.png?w=1240 1240w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-env-variables.png?w=1920 1920w"
data-sizes="auto"alt="环境变量的屏幕截图。"
width="1230"
height="298"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/otel-reource-attributes/otel-resource-attributes-attributes-env-variables.png"
alt="环境变量的屏幕截图。"
width="1230"
height="298"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;ol start="4"&gt;&lt;li&gt;选择一个服务名称来标识该服务&lt;em&gt;-&lt;/em&gt;例如&lt;code&gt;test&lt;/code&gt; 。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;现在，更新以下 shell 脚本，以使用上面检索到的信息配置应用程序并启用自动检测。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button x-data="app_code_snippet()" x-init="init()" @click="copy()"&gt;&lt;img class="code-clipboard__icon" src="/media/images/icons/icon-copy-small-2.svg" alt="将代码复制到剪贴板" width="14" height="13"&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre data-expanded="false"&gt; &lt;code class="language-none"&gt;# Authentication environment variables from steps above export OTEL_EXPORTER_OTLP_PROTOCOL=&amp;quot;http/protobuf&amp;quot; export OTEL_EXPORTER_OTLP_ENDPOINT=&amp;quot;https://...&amp;quot; export OTEL_EXPORTER_OTLP_HEADERS=&amp;quot;Authorization=Basic ...&amp;quot; export OTEL_SERVICE_NAME=&amp;lt;Service Name&amp;gt; export OTEL_TRACES_EXPORTER=&amp;quot;otlp&amp;quot; export OTEL_METRICS_EXPORTER=&amp;quot;otlp&amp;quot; export NODE_OPTIONS=&amp;quot;--require @opentelemetry/auto-instrumentations-node/register&amp;quot; # List the resource detectors we want to collect the attributes of export OTEL_NODE_RESOURCE_DETECTORS=&amp;quot;env,host,os,serviceinstance&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;如果您的应用程序使用云提供商，请将其添加到上面环境变量&lt;code&gt;OTEL_NODE_RESOURCE_DETECTORS&lt;/code&gt;上的检测器列表中。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button x-data="app_code_snippet()" x-init="init()" @click="copy()"&gt;&lt;img class="code-clipboard__icon" src="/media/images/icons/icon-copy-small-2.svg" alt="将代码复制到剪贴板" width="14" height="13"&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre data-expanded="false"&gt; &lt;code class="language-none"&gt;# Alibaba Cloud export OTEL_NODE_RESOURCE_DETECTORS=&amp;quot;env,host,serviceinstance,alibaba&amp;quot; # Amazon Web Services export OTEL_NODE_RESOURCE_DETECTORS=&amp;quot;env,host,os,serviceinstance,aws&amp;quot; # Azure export OTEL_NODE_RESOURCE_DETECTORS=&amp;quot;env,host,os,serviceinstance,azure&amp;quot; # Google Cloud Platform export OTEL_NODE_RESOURCE_DETECTORS=&amp;quot;env,host,os,serviceinstance,gcp&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="run-the-application"&gt;运行应用程序&lt;/h3&gt;&lt;p&gt;现在您已完成所有设置，您可以运行您的应用程序。&lt;/p&gt;&lt;div class="code-snippet code-snippet__mini"&gt;&lt;div class="lang-toolbar__mini"&gt; &lt;span class="code-clipboard"&gt;&lt;button x-data="app_code_snippet()" x-init="init()" @click="copy()"&gt;&lt;img class="code-clipboard__icon" src="/media/images/icons/icon-copy-small-2.svg" alt="将代码复制到剪贴板" width="14" height="13"&gt;&lt;span&gt;复制&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class="code-snippet code-snippet__border"&gt;&lt;pre data-expanded="false"&gt; &lt;code class="language-none"&gt;$ npx ts-node app.ts OpenTelemetry automatic instrumentation started successfully OpenTelemetry automatic instrumentation started successfully Listening for requests on http://localhost:8080&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h2 id="observe-the-service-in-application-observability"&gt;在应用程序可观察性中观察服务&lt;/h2&gt;&lt;p&gt;Grafana Cloud 中的开放应用程序可观察性：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;使用&lt;code&gt;https://&amp;lt;your-stack-name&amp;gt;.grafana.net&lt;/code&gt;导航到堆栈。&lt;/li&gt;&lt;li&gt;展开 Grafana 徽标下方的左上方菜单。&lt;/li&gt;&lt;li&gt;单击&lt;strong&gt;“指标”&lt;/strong&gt; ，然后单击&lt;strong&gt;“新指标探索”&lt;/strong&gt; 。&lt;/li&gt;&lt;li&gt;您将能够看到不同的指标图表。&lt;/li&gt;&lt;/ol&gt;&lt;h3 id="identify-problematic-resources"&gt;识别有问题的资源&lt;/h3&gt;&lt;p&gt;指标页面将列出当前发送到 Grafana 实例的所有指标。您还可以按您想要关注的指标进行过滤，例如延迟。 &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1999px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/otel-reource-attributes/otel-resource-attributes-filter-by-metrics.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/otel-reource-attributes/otel-resource-attributes-filter-by-metrics.png"data-srcset="/media/blog/otel-reource-attributes/otel-resource-attributes-filter-by-metrics.png?w=320 320w, /media/blog/otel-reource-attributes/otel-resource-attributes-filter-by-metrics.png?w=550 550w, /media/blog/otel-reource-attributes/otel-resource-attributes-filter-by-metrics.png?w=750 750w, /media/blog/otel-reource-attributes/otel-resource-attributes-filter-by-metrics.png?w=900 900w, /media/blog/otel-reource-attributes/otel-resource-attributes-filter-by-metrics.png?w=1040 1040w, /media/blog/otel-reource-attributes/otel-resource-attributes-filter-by-metrics.png?w=1240 1240w, /media/blog/otel-reource-attributes/otel-resource-attributes-filter-by-metrics.png?w=1920 1920w"
data-sizes="auto"alt="按指标过滤功能的屏幕截图。"
width="1999"
height="919"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/otel-reource-attributes/otel-resource-attributes-filter-by-metrics.png"
alt="按指标过滤功能的屏幕截图。"
width="1999"
height="919"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;然后，您可以通过单击&lt;strong&gt;“选择”&lt;/strong&gt;从列表中选择要进一步分析的图表。&lt;/p&gt;&lt;p&gt;例如，选择&lt;code&gt;traces_spanmetrics_latency_count&lt;/code&gt;的图表，它将打开一个页面，其中列出了您可以进行细分的所有可能的资源。通过单击任何值，您可以看到按所选资源的不同属性值细分的不同图表。您还可以通过单击&lt;strong&gt;“细分”&lt;/strong&gt;选项卡，然后单击任意资源名称来进行此选择。这是选择&lt;code&gt;host_id&lt;/code&gt;时的样子： &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1999px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/otel-reource-attributes/otel-resource-attributes-meta.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/otel-reource-attributes/otel-resource-attributes-meta.png"data-srcset="/media/blog/otel-reource-attributes/otel-resource-attributes-meta.png?w=320 320w, /media/blog/otel-reource-attributes/otel-resource-attributes-meta.png?w=550 550w, /media/blog/otel-reource-attributes/otel-resource-attributes-meta.png?w=750 750w, /media/blog/otel-reource-attributes/otel-resource-attributes-meta.png?w=900 900w, /media/blog/otel-reource-attributes/otel-resource-attributes-meta.png?w=1040 1040w, /media/blog/otel-reource-attributes/otel-resource-attributes-meta.png?w=1240 1240w, /media/blog/otel-reource-attributes/otel-resource-attributes-meta.png?w=1920 1920w"
data-sizes="auto"alt="“细分”选项卡的屏幕截图。"
width="1999"
height="984"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/otel-reource-attributes/otel-resource-attributes-meta.png"
alt="“细分”选项卡的屏幕截图。"
width="1999"
height="984"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;在此示例中，我们可以看到第一个图表比其他图表具有更高的值。如果您已经知道该主机与其他主机相比的差异，则可以帮助您确定导致该特定资源的延迟值较高的原因。如果选择其他资源（例如&lt;code&gt;service_instance_id&lt;/code&gt;等），这将类似地工作。&lt;/p&gt;&lt;h3 id="filter-traces-by-resource-attribute-value"&gt;按资源属性值过滤跟踪&lt;/h3&gt;&lt;p&gt;如果仅了解在上一步中发现的资源属性还不够，您可以在&lt;strong&gt;“跟踪”&lt;/strong&gt;选项卡中获取更多详细信息。为此，请按照下列步骤操作：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;展开 Grafana 徽标下方的左上方菜单。&lt;/li&gt;&lt;li&gt;单击&lt;strong&gt;应用程序&lt;/strong&gt;并选择您选择的应用程序名称。&lt;/li&gt;&lt;li&gt;单击&lt;strong&gt;“痕迹”&lt;/strong&gt;选项卡。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;您会注意到它被&lt;code&gt;{resource.service.name=&amp;quot;test&amp;quot;}&lt;/code&gt;过滤。&lt;/p&gt;&lt;p&gt;选择在 TraceQL 中&lt;strong&gt;编辑&lt;/strong&gt;并添加您收集的任何资源属性，例如：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;要查看来自同一主机 ID 的所有跟踪： &lt;code&gt;{resource.service.name=&amp;quot;test&amp;quot; &amp;amp;&amp;amp; resource.host.id=&amp;quot;5E60C495-B5F9-54CA-B256-30016D15AAE4&amp;quot;}&lt;/code&gt;&lt;/li&gt;&lt;li&gt;要查看来自同一服务实例 ID 的所有跟踪： &lt;code&gt;{resource.service.name=&amp;quot;test-service-id-6&amp;quot; &amp;amp;&amp;amp; resource.service.instance.id=&amp;quot;12098e72-fd23-4927-92d4-65a205014241&amp;quot;}&lt;/code&gt; &lt;/li&gt;&lt;/ol&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1804px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/otel-reource-attributes/otel-resource-attributes-edit-in-traceql.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/otel-reource-attributes/otel-resource-attributes-edit-in-traceql.png"data-srcset="/media/blog/otel-reource-attributes/otel-resource-attributes-edit-in-traceql.png?w=320 320w, /media/blog/otel-reource-attributes/otel-resource-attributes-edit-in-traceql.png?w=550 550w, /media/blog/otel-reource-attributes/otel-resource-attributes-edit-in-traceql.png?w=750 750w, /media/blog/otel-reource-attributes/otel-resource-attributes-edit-in-traceql.png?w=900 900w, /media/blog/otel-reource-attributes/otel-resource-attributes-edit-in-traceql.png?w=1040 1040w, /media/blog/otel-reource-attributes/otel-resource-attributes-edit-in-traceql.png?w=1240 1240w, /media/blog/otel-reource-attributes/otel-resource-attributes-edit-in-traceql.png?w=1920 1920w"
data-sizes="auto"alt="“跟踪”选项卡的屏幕截图。"
width="1804"
height="878"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/otel-reource-attributes/otel-resource-attributes-edit-in-traceql.png"
alt="“跟踪”选项卡的屏幕截图。"
width="1804"
height="878"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;这将列出与您选择的值匹配的跟踪。要获取有关这些痕迹的更多详细信息，您可以：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;单击您感兴趣的跟踪的&lt;strong&gt;跟踪 ID&lt;/strong&gt;列的值。这将在右侧打开一个新区域，其中包含有关跟踪的详细信息。 &lt;/li&gt;&lt;/ol&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1426px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/otel-reource-attributes/otel-resource-attributes-column-trace-id.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/otel-reource-attributes/otel-resource-attributes-column-trace-id.png"data-srcset="/media/blog/otel-reource-attributes/otel-resource-attributes-column-trace-id.png?w=320 320w, /media/blog/otel-reource-attributes/otel-resource-attributes-column-trace-id.png?w=550 550w, /media/blog/otel-reource-attributes/otel-resource-attributes-column-trace-id.png?w=750 750w, /media/blog/otel-reource-attributes/otel-resource-attributes-column-trace-id.png?w=900 900w, /media/blog/otel-reource-attributes/otel-resource-attributes-column-trace-id.png?w=1040 1040w, /media/blog/otel-reource-attributes/otel-resource-attributes-column-trace-id.png?w=1240 1240w, /media/blog/otel-reource-attributes/otel-resource-attributes-column-trace-id.png?w=1920 1920w"
data-sizes="auto"alt="显示跟踪详细信息的屏幕截图。"
width="1426"
height="874"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/otel-reource-attributes/otel-resource-attributes-column-trace-id.png"
alt="显示跟踪详细信息的屏幕截图。"
width="1426"
height="874"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;ol start="2"&gt;&lt;li&gt;单击&lt;strong&gt;“服务和操作”&lt;/strong&gt;部分中的任意行，它将打开有关该范围的详细信息。 &lt;/li&gt;&lt;/ol&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1408px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/otel-reource-attributes/otel-resource-attributes-service-and-ops.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/otel-reource-attributes/otel-resource-attributes-service-and-ops.png"data-srcset="/media/blog/otel-reource-attributes/otel-resource-attributes-service-and-ops.png?w=320 320w, /media/blog/otel-reource-attributes/otel-resource-attributes-service-and-ops.png?w=550 550w, /media/blog/otel-reource-attributes/otel-resource-attributes-service-and-ops.png?w=750 750w, /media/blog/otel-reource-attributes/otel-resource-attributes-service-and-ops.png?w=900 900w, /media/blog/otel-reource-attributes/otel-resource-attributes-service-and-ops.png?w=1040 1040w, /media/blog/otel-reource-attributes/otel-resource-attributes-service-and-ops.png?w=1240 1240w, /media/blog/otel-reource-attributes/otel-resource-attributes-service-and-ops.png?w=1920 1920w"
data-sizes="auto"alt="服务和操作部分的屏幕截图。"
width="1408"
height="1432"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/otel-reource-attributes/otel-resource-attributes-service-and-ops.png"
alt="服务和操作部分的屏幕截图。"
width="1408"
height="1432"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;ol start="3"&gt;&lt;li&gt;单击&lt;strong&gt;资源属性&lt;/strong&gt;或&lt;strong&gt;跨度属性&lt;/strong&gt;，它将列出随该跨度发送的所有值。 &lt;/li&gt;&lt;/ol&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1296px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/otel-reource-attributes/otel-resource-attributes-attributes-dropdown.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/otel-reource-attributes/otel-resource-attributes-attributes-dropdown.png"data-srcset="/media/blog/otel-reource-attributes/otel-resource-attributes-attributes-dropdown.png?w=320 320w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-dropdown.png?w=550 550w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-dropdown.png?w=750 750w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-dropdown.png?w=900 900w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-dropdown.png?w=1040 1040w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-dropdown.png?w=1240 1240w, /media/blog/otel-reource-attributes/otel-resource-attributes-attributes-dropdown.png?w=1920 1920w"
data-sizes="auto"alt="资源属性部分的屏幕截图。"
width="1296"
height="1164"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/otel-reource-attributes/otel-resource-attributes-attributes-dropdown.png"
alt="资源属性部分的屏幕截图。"
width="1296"
height="1164"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;掌握资源属性的值后，您可以决定哪些值最适合您的应用程序，然后调整未按预期执行的部分。&lt;/p&gt;&lt;h2 id="tell-us-what-you-think"&gt;告诉我们你的想法&lt;/h2&gt;&lt;p&gt;我们很想听听您在应用程序可观察性和 OpenTelemetry 方面的体验！请随时访问&lt;a href="https://slack.grafana.com" target="_blank" rel="noopener noreferrer"&gt;https://slack.grafana.com&lt;/a&gt;并加入&lt;a href="https://grafana.slack.com/archives/C05E87XRK3J" target="_blank" rel="noopener noreferrer"&gt;#application-observability&lt;/a&gt;频道来联系我们的 Slack 社区。&lt;/p&gt;&lt;p&gt;此外，有关完整的实施细节和最佳实践，您可以查看我们的&lt;a href="/docs/grafana-cloud/monitor-applications/application-observability/"&gt;应用程序可观察性文档&lt;/a&gt;。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始使用指标、日志、跟踪和仪表板的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册&lt;/a&gt;！&lt;/em&gt;&lt;/p&gt;</description><pubDate>Mon, 17 Jun 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/17/how-to-use-opentelemetry-resource-attributes-and-grafana-cloud-application-observability-to-accelerate-root-cause-analysis/</guid></item><item><title>【How Dell successfully migrated to Grafana Cloud and consolidated its observability in the process】</title><link>https://grafana.com/blog/2024/06/14/how-dell-successfully-migrated-to-grafana-cloud-and-consolidated-its-observability-in-the-process/</link><description>&lt;p&gt;虽然某些监控工具擅长执行特定任务，但当您对系统有整体了解时，可观察性效果最佳。您需要一个能够共同处理所有遥测数据的平台，否则您最终可能会得到一组复杂、低效且昂贵的不一致、孤立的工具。&lt;/p&gt;&lt;p&gt;这是 Dell Technologies 的一个团队去年在转向&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;之前意识到的。&lt;/p&gt;&lt;p&gt;在&lt;a href="https://grafana.com/events/observabilitycon-on-the-road/2024/dallas/how-dell-consolidated-observability-with-grafana-cloud/"&gt;ObservabilityCON On the Road 2024 演示&lt;/a&gt;中，Dell Technologies 的现场可靠性工程师 Brian Murphy 讲述了本地可观测性和 IT 管理平台 SolarWinds 带来的变化，以及他的公司如何在不丢失功能的情况下整合其可观测性工具。&lt;/p&gt;&lt;p&gt;戴尔甚至还在这个过程中获得了有用的工具。现在，他们使用 Grafana Cloud 的&lt;a href="https://grafana.com/blog/2023/05/09/adaptive-metrics-grafana-cloud-announcement/?pg=blog&amp;amp;plcmt=body-txt"&gt;自适应指标&lt;/a&gt;功能来节省资金，并且只捕获他们需要的指标。 “你不必看没有用的垃圾，”墨菲说。 “而且解决起来要容易得多。”&lt;/p&gt;&lt;p&gt;与此同时， &lt;a href="https://grafana.com/docs/oncall/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana OnCall&lt;/a&gt;使 13,000 名工程师更轻松地解决问题，并减少了收件箱的混乱情况。全公司的团队成员（包括高管）都受益于智能、实用的仪表板。&lt;/p&gt;&lt;p&gt;&lt;em&gt;注意：ObservabilityCON on the Road 2024 的 Dell Technologies 会议现已可供点播观看。您可以在下面的 YouTube 上查看完整的会议内容。&lt;/em&gt; &lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;h2 id="a-lot-of-ground-to-cover-and-just-one-tool-to-do-it-with"&gt;需要涵盖的内容很多，只需一种工具即可完成&lt;/h2&gt;&lt;p&gt;Murphy 在戴尔面向内部的基础设施解决方案小组 (ISG) 工作。更具体地说，他在一个名为 Tech Ops 2.0 的团队工作，该团队专注于提高可靠性和 MTTx，并确保他们的合作伙伴“快乐和成功”。他们还拥有大量 IT 资产，包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;该公司的“北极星工具”，包括 Jira、Confluence、GitHub Enterprise、Jenkins 等&lt;/li&gt;&lt;li&gt;构建管道&lt;/li&gt;&lt;li&gt;戴尔分布于全球的数据中心&lt;/li&gt;&lt;li&gt;它的 Kubernetes 集群，加上所有硬件和随之而来的网络&lt;/li&gt;&lt;li&gt;内部云&lt;/li&gt;&lt;li&gt;400 个交换机，由全球 10 个不同地点的几个团队进行监控&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;此前，戴尔使用 SolarWinds 来监控一切。尽管它提供了网络性能监控并具有团队正在使用的功能，但也存在缺点。 “这是非常利基的。它只做一件事，”墨菲解释道。&lt;/p&gt;&lt;p&gt;团队很少使用 SolarWinds（如果有的话）。还有一个问题是，与某个地区的问题相关的警报被发送到数千英里之外的团队。他说，所有这些噪音都是“一个大问题”。 “我们想减少噪音。”&lt;/p&gt;&lt;p&gt;还存在自托管的挑战，以及组合遥测数据的重大障碍。 “它没有与其他任何东西整合，”墨菲解释道。 “我们没有让它与其他任何东西交谈。如果您想做 SolarWinds 中没有的任何操作，则必须切换选项卡。您必须登录其他系统。这是一个筒仓。”&lt;/p&gt;&lt;h2 id="time-for-a-change"&gt;改变的时候了&lt;/h2&gt;&lt;p&gt;戴尔选择不再与 SolarWinds 续签合同。 Murphy 认为这是谈论“可观测性新方向”的绝佳机会，在评估其他产品后，他们决定 Grafana Labs 是最佳选择。他说：“它将把所有东西聚集在一起，打破那些围墙，打破孤岛。”&lt;/p&gt;&lt;p&gt;通过与世界各地的分布式团队交谈，Murphy 的团队能够掌握用例——工程师在 SolarWinds 中做了什么以及他们仍然需要什么。几个月内，他们使用 Grafana 推出新代理并创建仪表板和警报。在进行正式迁移之前，工程师接受了培训并熟悉了新工具，因此大规模部署很快，Murphy 的团队也满足了过渡期限。&lt;/p&gt;&lt;p&gt; “按时完成任务很好，”他说，“但对我来说更重要的是我们没有损失任何东西。我们对硬件和网络的可观察性得以维持。”他团队的合作伙伴或客户都没有注意到这一变化。 “可靠性零差距，没有负面影响。所以对我来说，那是重大的胜利时刻。”&lt;/p&gt;&lt;h2 id="a-new-unified-way-forward-with-grafana-cloud"&gt; Grafana Cloud 的全新、统一的前进方式&lt;/h2&gt;&lt;p&gt;借助 Grafana Cloud，戴尔团队从一个只做一件事的工具转变为一个拥有多种工具、可以做更多事情的平台。&lt;/p&gt;&lt;p&gt; “我们实际上获得了以前无法获得的信息，这很酷，”墨菲说。&lt;/p&gt;&lt;p&gt;他们构建了 SNMP 导出器和代理，并解锁了节点导出器和一些黑匣子导出器。他们还设置了警报、通知、基于角色的仪表板，并开始采用 Grafana Cloud 的更多部分。例如，他们使用自适应指标功能来删除大量未使用的指标。&lt;/p&gt;&lt;p&gt;墨菲表示，他的团队只是编写了一些规则并停止发布未使用的指标。下图来自 Grafana 仪表板，显示了一段时间内的指标。他说，绿线是公司正在节省的资金。 “黄色的是我们正在保存的指标以及我们没有保存的指标。所以黄线是我们正在聚合的东西。”&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/dell-migration/screenshot-dell-migration-graph.png"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/dell-migration/screenshot-dell-migration-graph.png"data-srcset="/media/blog/dell-migration/screenshot-dell-migration-graph.png?w=320 320w, /media/blog/dell-migration/screenshot-dell-migration-graph.png?w=550 550w, /media/blog/dell-migration/screenshot-dell-migration-graph.png?w=750 750w, /media/blog/dell-migration/screenshot-dell-migration-graph.png?w=900 900w, /media/blog/dell-migration/screenshot-dell-migration-graph.png?w=1040 1040w, /media/blog/dell-migration/screenshot-dell-migration-graph.png?w=1240 1240w, /media/blog/dell-migration/screenshot-dell-migration-graph.png?w=1920 1920w"
data-sizes="auto"alt="Grafana 仪表板中的指标图表显示绿线上方有一条黄线"
width="1200"
height="299"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/dell-migration/screenshot-dell-migration-graph.png"
alt="Grafana 仪表板中的指标图表显示绿线上方有一条黄线"
width="1200"
height="299"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;他们还在&lt;a href="/docs/grafana-cloud/testing/synthetic-monitoring/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud Synthetic Monitoring&lt;/a&gt;中使用私有探测器来密切关注其云环境。 “它让我们清楚地了解网络流量的下降情况。当我们确实发现问题时，这些图表会为我们提供帮助。”&lt;/p&gt;&lt;p&gt;最重要的是，Murphy 的团队为“喜欢了解我们生活的世界中事情进展如何”的公司高管以及使用 Grafana OnCall 来解决出现问题的支持团队成员创建了仪表板。 “高管们似乎对自己的外表很满意，”他说。 “团队很乐意使用它们，解决问题，让事情发生。” &lt;/p&gt;&lt;figure
class="figure-wrapper figure-wrapper__lightbox w-100p "
style="max-width: 1584px;"
itemprop="associatedMedia"
itemscope=""
itemtype="http://schema.org/ImageObject"
&gt; &lt;a
class="lightbox-link"
href="/media/blog/dell-migration/screenshot-dell-migration-dashboard-cropped-USE-THIS.png"
itemprop="contentUrl"
&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img
class="lazyload "
data-src="/media/blog/dell-migration/screenshot-dell-migration-dashboard-cropped-USE-THIS.png"data-srcset="/media/blog/dell-migration/screenshot-dell-migration-dashboard-cropped-USE-THIS.png?w=320 320w, /media/blog/dell-migration/screenshot-dell-migration-dashboard-cropped-USE-THIS.png?w=550 550w, /media/blog/dell-migration/screenshot-dell-migration-dashboard-cropped-USE-THIS.png?w=750 750w, /media/blog/dell-migration/screenshot-dell-migration-dashboard-cropped-USE-THIS.png?w=900 900w, /media/blog/dell-migration/screenshot-dell-migration-dashboard-cropped-USE-THIS.png?w=1040 1040w, /media/blog/dell-migration/screenshot-dell-migration-dashboard-cropped-USE-THIS.png?w=1240 1240w, /media/blog/dell-migration/screenshot-dell-migration-dashboard-cropped-USE-THIS.png?w=1920 1920w"
data-sizes="auto"alt="Grafana 仪表板面板的屏幕截图，其中包含一个带有数字百分比的大框、饼图以及绿色、黄色和红色框"
width="1584"
height="906"
/&gt; &lt;noscript&gt;&lt;img
src="/media/blog/dell-migration/screenshot-dell-migration-dashboard-cropped-USE-THIS.png"
alt="Grafana 仪表板面板的屏幕截图，其中包含一个带有数字百分比的大框、饼图以及绿色、黄色和红色框"
width="1584"
height="906"
/&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;墨菲表示，总的来说，Grafana Cloud 已成为戴尔“第一块事件管理平台”。事实上，当有人收到警报时，运行手册说寻找信息的第一个地方是 Grafana 仪表板。 “这样一来，除非必要，否则他们就不会在六种不同的设备之间切换。”他说，他们还利用 OnCall 集成，这意味着不需要接收电子邮件的人收到的电子邮件数量会减少。&lt;/p&gt;&lt;p&gt;减少一项支持和维护服务也让那些“维护、喂养和培育 SolarWinds 实例”的人们能够腾出时间来从事“更酷、更新、更好、更有趣、更有趣”的事情。&lt;/p&gt;&lt;h2 id="whats-next"&gt;下一步是什么&lt;/h2&gt;&lt;p&gt;Murphy 表示，戴尔正在积极将 40 或 50 个其他团队和服务迁移到 Grafana Cloud，包括 Artifactory、JIRA、Confluence、他们的 Kubernetes 和 OpenShift。目标是让每个人都在同一个屋檐下，这样用户就可以摆脱幼稚的警报，并发出“真正智能、合格的警报”。&lt;/p&gt;&lt;p&gt;该公司有一个新团队负责监控数千个其他交换机。 “你猜怎么了？”墨菲说道。 “我们只是为他们提供相同的仪表板，他们就获得了价值。我们刚刚添加了一个数据源选择器。就是这样。这就是我们所要做的一切来制作这些数据，让这些仪表板对他们来说又酷又新。”&lt;/p&gt;&lt;p&gt;他表示，展望未来，他们计划进行更多基于 SLO 的警报（例如，当风扇故障时），以专注于体验。他们还在考虑使用&lt;a href="/oss/beyla-ebpf/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Beyla&lt;/a&gt; ，这是一种基于 eBPF 的开源自动检测工具。继自适应指标取得成功之后，他们渴望尝试目前正在开发中的自适应日志。 “我们发送了很多日志，很多日志，”他说。他们将继续为 Grafana Cloud 引入更多团队和更多服务。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始连续分析、指标、日志、跟踪和仪表板的最简单方法。我们为每个用例提供慷慨的永久免费套餐和计划。&lt;a href="/auth/sign-up/create-user/?pg=blog&amp;amp;plcmt=body-txt"&gt;现在免费注册！&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description><pubDate>Fri, 14 Jun 2024 12:04:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/14/how-dell-successfully-migrated-to-grafana-cloud-and-consolidated-its-observability-in-the-process/</guid></item><item><title>【Improved anomaly detection and faster root cause analysis: the latest features in Grafana Cloud Application Observability】</title><link>https://grafana.com/blog/2024/06/13/improved-anomaly-detection-and-faster-root-cause-analysis-the-latest-features-in-grafana-cloud-application-observability/</link><description>&lt;p&gt;近年来，“我们从客户那里听到的最大需求是更容易地理解他们的可观测性数据，将可观测性扩展到应用程序层，并获得更深入的情境化分析，”CTO Tom Wilkie 说道。 Grafana 实验室，ObservabilityCON 2023。&lt;/p&gt;&lt;p&gt;为此，去年我们推出了&lt;a href="https://grafana.com/products/cloud/application-observability/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud Application Observability&lt;/a&gt; ，这是一种固执己见、开箱即用的解决方案，旨在提高现代应用程序的可靠性。 Grafana Cloud 中的应用程序可观测性以对 OpenTelemetry 和 Prometheus 的本机支持为特色，可帮助开发人员和 SRE 无缝统一应用程序和基础设施洞察，这是加速异常检测和根本原因分析、缩短 MTTR 并推进整体可观测性策略的重要功能。&lt;/p&gt;&lt;p&gt;自从我们去年秋天&lt;a href="https://grafana.com/blog/2023/11/14/announcing-application-observability-in-grafana-cloud-with-native-support-for-opentelemetry-and-prometheus/"&gt;宣布全面推出应用程序可观察性&lt;/a&gt;以来，我们一直在努力开发新功能，以进一步增强用户体验，并使 Grafana Cloud 用户能够更深入地了解应用程序性能。&lt;/p&gt;&lt;p&gt;下面介绍了在应用程序可观察性中使用遥测信号的一些方法，以改进异常检测并更好地了解服务的行为。&lt;/p&gt;&lt;p&gt;&lt;em&gt;注意：要查看应用程序可观察性最新功能的演示，您可以观看下面的 YouTube 视频。&lt;/em&gt; &lt;/p&gt;&lt;div class="shortcode youtube"&gt;&lt;/div&gt;&lt;h2 id="analyze-performance-over-time-with-time-frame-comparison"&gt;通过时间范围比较来分析一段时间内的绩效&lt;/h2&gt;&lt;p&gt;在处理数据时，尤其是随着时间的推移而处理的数据时，总是存在一个令人烦恼的问题：“我看到的是正常值还是异常值？”&lt;/p&gt;&lt;p&gt;为了帮助回答这个问题，我们添加了&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/manual/service/?pg=blog&amp;amp;plcmt=body-txt/#time-frame-comparison"&gt;时间范围比较&lt;/a&gt;，这是对应用程序可观察性用户体验的增强，允许您比较特定服务在一段时间内的指标，例如今天与昨天或当月与前几个月。&lt;/p&gt;&lt;p&gt;想象一下：您的电子商务业务正在进行大规模促销，并且想要了解对&lt;code&gt;productcatalog&lt;/code&gt;服务的请求率是否仍在参数范围内。要在 Grafana 中执行此操作，您需要手动创建一个使用两个不同回溯期的面板。在应用程序可观察性中，您只需切换比较复选框即可查看与当前值相比的一系列预期值。这样，您就可以放心，您的服务仍在运行。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/app-observability-updates/application-observability-updates-timeframe-comparison.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示时间范围比较功能的 gif。" class="lazyload " height="452" width="1024" /&gt;&lt;noscript&gt;&lt;img alt="显示时间范围比较功能的 gif。" height="452" src="https://grafana.com/media/blog/app-observability-updates/application-observability-updates-timeframe-comparison.gif" width="1024" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="identify-anomalies-with-automatic-baselining"&gt;通过自动基线识别异常&lt;/h2&gt;&lt;p&gt;但是等等——季节性怎么样？继续我们上面的例子，如果您是一家电子商务企业，那么您最繁忙的月份可能是下半年。为了考虑到这种季节性，并确保进行同类比较，我们引入了&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/manual/automatic-baseline/?pg=blog&amp;amp;plcmt=body-txt"&gt;自动基线&lt;/a&gt;作为将当前时间范围与时间窗口比较中的基线进行比较的方法。&lt;/p&gt;&lt;p&gt;自动基线使用标准偏差来帮助您了解您所看到的是否是正常模式，或者是否偏离预期计算，以便您可以快速开始排除故障。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/app-observability-updates/application-observability-updates-auto-baselining.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示自动基线功能的 gif。" class="lazyload " height="481" width="1024" /&gt;&lt;noscript&gt;&lt;img alt="显示自动基线功能的 gif。" height="481" src="https://grafana.com/media/blog/app-observability-updates/application-observability-updates-auto-baselining.gif" width="1024" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="narrow-down-problem-dimensions-with-group-by-and-filter-by"&gt;使用分组依据和过滤依据缩小问题维度&lt;/h2&gt;&lt;p&gt;一旦您通过警报或用户界面发现异常，下一步就是缩小问题范围：是否存在可以解释异常的变量？&lt;/p&gt;&lt;p&gt;在 Grafana Cloud 应用程序可观察性中，您可以探索不同的属性及其值如何影响应用程序性能。这些属性是应用程序固有的特征，例如其部署坐标或特定于域的属性（例如部门名称或地理位置）。&lt;/p&gt;&lt;p&gt;假设您通过基线比较发现了异常情况，并且想要分析原因。现在，您可以使用&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/manual/group-filter/?pg=application-observability&amp;amp;plcmt=hero-btn-2/?pg=blog&amp;amp;plcmt=body-txt#group-by"&gt;分组功能&lt;/a&gt;按&lt;code&gt;k8s.cluster.name&lt;/code&gt;等属性来细分面板，并获取托管工作负载的每个集群的速率、错误和持续时间。这可以帮助您了解是否有一个特定位置的性能比其他位置差。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/app-observability-updates/application-observability-updates-groupby.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="显示按功能分组的 gif。" class="lazyload " height="543" width="1024" /&gt;&lt;noscript&gt;&lt;img alt="显示按功能分组的 gif。" height="543" src="https://grafana.com/media/blog/app-observability-updates/application-observability-updates-groupby.gif" width="1024" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;找到异常值后，您可以使用&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/manual/group-filter/?pg=application-observability&amp;amp;plcmt=hero-btn-2#filter-by"&gt;过滤功能&lt;/a&gt;根据属性值管理哪些数据可见。例如，如果您按地理区域对数据进行分组并确定错误仅发生在欧洲区域，则您可以筛选数据以仅可视化欧洲地理区域。然后，您可以重复该步骤以进一步细分数据并确定问题。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/app-observability-updates/application-observability-updates-filterby.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="按功能显示过滤器的 gif。" class="lazyload " height="541" width="1024" /&gt;&lt;noscript&gt;&lt;img alt="按功能显示过滤器的 gif。" height="541" src="https://grafana.com/media/blog/app-observability-updates/application-observability-updates-filterby.gif" width="1024" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="faster-root-cause-analysis-with-in-context-navigation"&gt;通过上下文导航更快地进行根本原因分析&lt;/h2&gt;&lt;p&gt;当看到面板上的图案时，您常常想进一步挖掘，对吗？好吧，现在您可以在应用程序可观察性中进行操作。借助&lt;a href="https://grafana.com/docs/grafana/latest/panels-visualizations/configure-data-links/"&gt;Grafana 数据链接&lt;/a&gt;，现在可以从面板导航到特定时间点的跟踪和日志。&lt;/p&gt;&lt;p&gt;让我们来看另一个示例：假设您看到服务事务的持续时间出现峰值。您想要确定哪些交易需要很长时间才能处理，以及为什么会出现这种情况。只需单击图表，您就可以直接导航到指定时间范围和过滤器内这些交易的踪迹。这可以通过快速查明有问题的痕迹来加速根本原因分析。&lt;/p&gt;&lt;figure class="figure-wrapper figure-wrapper__lightbox w-100p "&gt; &lt;a class="lightbox-link" href="https://grafana.com/media/blog/app-observability-updates/application-observability-updates-incontext-nav.gif"&gt;&lt;div class="img-wrapper w-100p h-auto"&gt;&lt;img alt="在上下文导航中显示的 gif。" class="lazyload " height="541" width="1024" /&gt;&lt;noscript&gt;&lt;img alt="在上下文导航中显示的 gif。" height="541" src="https://grafana.com/media/blog/app-observability-updates/application-observability-updates-incontext-nav.gif" width="1024" /&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;h2 id="get-started-with-application-observability"&gt;应用程序可观察性入门&lt;/h2&gt;&lt;p&gt;如果您尚未尝试过 Grafana Cloud 中的应用程序可观察性，可以通过以下步骤轻松开始：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;选择 Grafana Cloud 指标生成（如果尚未启用）。&lt;/li&gt;&lt;li&gt;使用 OpenTelemetry 检测您的应用程序。&lt;/li&gt;&lt;li&gt;使用&lt;a href="https://grafana.com/docs/alloy/latest/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Alloy&lt;/a&gt;与 OpenTelemetry (OTLP) 集成（推荐）或&lt;a href="https://opentelemetry.io/docs/collector/" rel="noopener noreferrer" target="_blank"&gt;OpenTelemetry Collector&lt;/a&gt;将遥测数据发送到 Grafana Cloud。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;有关完整的实施细节和最佳实践，您还可以参考我们的&lt;a href="https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/?pg=application-observability&amp;amp;plcmt=resources"&gt;应用程序可观察性文档&lt;/a&gt;。&lt;/p&gt;&lt;p&gt; &lt;em&gt;&lt;a href="https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt"&gt;Grafana Cloud&lt;/a&gt;是开始应用程序可观察性的最简单方法。我们有一个慷慨的永久免费套餐，其中包括每月 2232 小时的主机小时数及更多。 &lt;a href="https://grafana.com/auth/sign-up/create-user?pg=blog-application-observability-ga&amp;amp;plcmt=in-txt&amp;amp;redirectPath=application-observability"&gt;现在免费注册！&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description><pubDate>Thu, 13 Jun 2024 00:00:00 GMT</pubDate><guid isPermaLink="true">https://grafana.com/blog/2024/06/13/improved-anomaly-detection-and-faster-root-cause-analysis-the-latest-features-in-grafana-cloud-application-observability/</guid></item></channel></rss>