<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>CNCF - 博客</title><link>https://www.cncf.io/blog/</link><description>CNCF - 博客 - RSSHub 用爱制作(https://github.com/DIYgod/RSSHub)</description><lastBuildDate>Tue, 18 Jun 2024 03:05:46 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>【The trouble with Topology Aware Routing: Sacrificing reliability in the name of cost savings】</title><link>https://www.cncf.io/blog/2024/06/17/the-trouble-with-topology-aware-routing-sacrificing-reliability-in-the-name-of-cost-savings/</link><description>&lt;p&gt;&lt;em&gt;会员帖子最初由 William Morgan 在&lt;a href="https://buoyant.io/blog/the-trouble-with-topology-aware-routing-sacrificing-reliability-to-avoid-cross-zone-traffic"&gt;Buoyant 博客&lt;/a&gt;上发布&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://kubernetes.io/docs/concepts/services-networking/topology-aware-routing/"&gt;拓扑感知路由&lt;/a&gt;是 Kubernetes 的一项功能，可防止一个可用区内的集群流量跨越到另一个可用区。对于部署在多区域集群中的高流量应用程序，这可以显着节省成本：云提供商可以对跨区域边界的流量收费，而这些成本在规模上可能会非常昂贵。&lt;/p&gt;&lt;p&gt;但是，拓扑感知路由旨在&lt;em&gt;始终&lt;/em&gt;禁止跨区域流量，无论整体系统运行状况或性能如何。这意味着，任何位于一个区域的故障、延迟或其他问题都无法通过将流量发送到其他区域来补偿，这违背了多区域集群的初衷！&lt;/p&gt;&lt;p&gt;在这篇博文中，我们深入研究了拓扑感知路由，并展示了它可能容易出现的灾难性故障类型的示例。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;高可用性底漆&lt;/h2&gt;&lt;p&gt;首先，让我们退一步看看为什么拓扑感知路由会存在。&lt;/p&gt;&lt;p&gt;为此，我们需要了解如何构建高可用的系统。与安全性非常相似，可靠性是一种深度防御的练习：系统变得不可用的方式有很多种，并且没有单一的灵丹妙药可以修复所有这些问题。与安全性一样，可靠性也是一种收益递减的过程。随后的每一个“九”的可靠性都更加昂贵。 （ &lt;a href="https://sre.google/sre-book/table-of-contents/"&gt;Google SRE 书籍&lt;/a&gt;是现代可靠性方法的一个很好的起点，特别是在风险量化方面。）&lt;/p&gt;&lt;p&gt;可靠性的一个关键工具是&lt;em&gt;故障域&lt;/em&gt;：哪些组件可能会发生故障，当它们发生故障时，我们能否控制故障“传播”的范围？&lt;/p&gt;&lt;p&gt;在云中构建的系统在宏观层面上具有三个基本层的可用故障域。云提供商本身是第一层。几乎每个提供商还提供两个进一步级别的位置：&lt;em&gt;区域，&lt;/em&gt;通常对应于他们运行数据中心的地理位置（例如“美国东部”或“俄勒冈”或“墨尔本”），以及&lt;em&gt;可用区域（AZ）&lt;/em&gt; ，可能是该区域内的特定数据中心、建筑物、机架或其他东西。 &lt;/p&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="Google Cloud 目前提供不同的区域。这些区域中的大多数都有 3 个可供客户使用的可用区。 （来源）" src="https://cdn.prod.website-files.com/627a84f19cfe42b2c96f2416/66609a4ad23b26f31015cb8e_gcp-regions.png" /&gt;&lt;figcaption class="wp-element-caption"&gt; Google Cloud 目前提供不同的区域。这些区域中的大多数都有 3 个可供客户使用的可用区。 （&lt;a href="https://cloud.google.com/about/locations"&gt;来源&lt;/a&gt;）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;至少在理论上，提供商、区域和专区都是独立的故障域。如果一个提供商出现故障，其他提供商应该不受影响。如果一个区域出现故障，其他区域应该不受影响。最后，如果一个区域出现故障，其他区域应该继续运行。&lt;/p&gt;&lt;p&gt;当然，确切的独立程度永远不会是完美的！关键互联网网络主干的故障可能会同时影响多个提供商的多个区域。数据中心内的网络故障可能会同时影响多个可用区。但至少在初步近似上，区域、地区和提供商可以被视为独立的故障域。&lt;/p&gt;&lt;p&gt;在这三层中，区域有点独特。它们提供的独立性保证比区域更弱，但它们也引入了更少的延迟：区域之间的通信应该很快。&lt;/p&gt;&lt;p&gt;因此，区域在 Kubernetes 中得到特殊对待：虽然&lt;a href="https://www.reddit.com/r/kubernetes/comments/14pe96m/comment/jqj171o/"&gt;并不真正支持&lt;/a&gt;跨提供商或区域，但 Kubernetes&lt;a href="https://kubernetes.io/docs/setup/best-practices/multiple-zones/"&gt;明确支持多区域集群&lt;/a&gt;。例如，一个 Kubernetes 集群可以拥有跨三个区域的节点，如果一个甚至两个区域发生故障，整个集群应该继续运行。由于这些可靠性优势，多区域集群&lt;a href="https://aws.amazon.com/blogs/containers/operating-resilient-workloads-on-amazon-eks/"&gt;被 AWS 等提供商明确推荐为最佳实践&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;多区域集群的问题是，当您的云账单到达时，您发现您的云提供商对跨区域的流量收费！如果您的系统流量相对较低，这可能不是问题。如果您的系统流量很高，那么这笔账单可能会让人大吃一惊。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt; Kubernetes 中跨可用区的流量费用是多少？&lt;/h2&gt;&lt;p&gt;答案取决于您的云提供商。例如，在 AWS 中，跨可用区流量实际上按与跨区域流量相同的费率计费：&lt;a href="https://www.duckbillgroup.com/blog/understanding-data-transfer-in-aws/"&gt;每 TB 20 美元&lt;/a&gt;。谷歌收取一半的费用，每 TB 10.24 美元。 Azure（它混淆地将“区域”定义为与可用区域不同的东西）目前根本不对跨可用区流量收费——尽管在过去，他们声称会这样做。&lt;/p&gt;&lt;p&gt;这项成本对您来说是否重要不仅取决于您的云提供商，还取决于跨区域发送的流量量。例如，如果您在 AWS 中有一个跨 3 个区域的 EKS 集群，那么假设您的流量均匀分布，则平均三分之二的流量将跨区域边界。这意味着您将根据集群上的总流量付费：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; 1 KB/s 平均流量：&lt;strong&gt;每年 40 美分&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;平均 1 MB/s：&lt;strong&gt;每年 401 美元&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;平均 1 GB/s：&lt;strong&gt;每年 410,000 美元&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果您使用 GCP，则可以将这些数字减少一半。如果您使用的是 Azure，则可以完全忽略它们......直到 Azure 决定开始收费。&lt;/p&gt;&lt;p&gt;请注意，这既适用于跨可用区边界的集群内流量，也适用于集群外流量（包括跨集群流量）。换句话说，如果您有两个位于同一区域且都是多可用区的 Kubernetes 集群，并且它们相互通信，则该流量也将跨越区域边界。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;为什么不直接把婴儿切成两半呢？&lt;/h2&gt;&lt;p&gt;拓扑感知路由 (TAR) 可以助您一臂之力。 TAR 以前称为拓扑感知提示，是一项 Kubernetes 功能，旨在准确解决这种跨可用区成本问题。 TAR 通过简单地在网络级别阻止跨区域流量来消除 Kubernetes 集群内的跨区域流量：当 TAR 处于活动状态时，kubeproxy 将筛选与客户端位于同一区域中的目标的端点。&lt;/p&gt;&lt;p&gt;下图展示了&lt;em&gt;未&lt;/em&gt;启用 TAR 时的正常 Kubernetes 负载平衡。服务 A 调用服务 B，服务 B 的所有区域中的所有 Pod 都可供服务 A 使用，并且 Kubernetes 可以对所有这些 Pod 之间的连接进行负载均衡，包括跨区域连接（标记为红色）。 &lt;/p&gt;&lt;figure class="wp-block-image is-resized"&gt;&lt;img alt="多可用区流量集群中两个服务之间的正常流量分布，跨区域流量标记为红色。" src="https://cdn.prod.website-files.com/627a84f19cfe42b2c96f2416/665f80d292f84b27195f797d_d1.png" style="width: 900px; height: auto;" /&gt;&lt;figcaption class="wp-element-caption"&gt;多可用区流量集群中两个服务之间的正常流量分布，跨区域流量标记为红色。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;当 TAR 启用时，我们会看到下图。服务 A 中的 Pod 仅与同一区域内服务 B 的 Pod 保持平衡。他们永远不会看到位于其他区域的 B 的 Pod。所有流量都保持在其区域内。 &lt;/p&gt;&lt;figure class="wp-block-image is-resized"&gt;&lt;img alt="拓扑感知路由处于活动状态的多可用区 Kubernetes 集群中的流量分布。请注意没有跨区域流量。" src="https://cdn.prod.website-files.com/627a84f19cfe42b2c96f2416/665f80e1ab144b257ef4609e_d2.png" style="width: 524px; height: auto;" /&gt;&lt;figcaption class="wp-element-caption"&gt;拓扑感知路由处于活动状态的多可用区 Kubernetes 集群中的流量分布。请注意没有跨区域流量。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;即使您使用带有 TAR 的服务网格，同样的情况仍然成立。例如，Linkerd 用高度复杂的动态 L7 请求平衡器取代了 Kubernetes 的朴素 TCP 连接负载平衡，该平衡器能够根据各个 Pod 的延迟分发各个 HTTP 和 gRPC 请求，透明地将 HTTP/1.1 升级到 HTTP/2 连接，应用重试、超时和熔断等等。尽管如此，当启用 TAR 时，Linkerd 仍会尊重其规则。它只会与客户端位于同一区域中的端点建立连接。&lt;/p&gt;&lt;p&gt;那么：问题解决了，对吧？无论是否存在服务网格，跨区域流量都被阻止，不必要的成本被消除，一切都很好。或者是吗？&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;当出现问题时会发生什么？&lt;/h2&gt;&lt;p&gt;当一切都健康时，TAR 就很棒。但是，如果一个区域遇到问题（Pod 发生故障、速度变慢或流量分布不均匀），该区域将由其自己的设备处理。TAR 会阻止故障区域中的 Pod&lt;em&gt;访问&lt;/em&gt;其他区域中的 Pod 来进行补偿。&lt;/p&gt;&lt;p&gt;这是我们设置的一个简单的三可用区集群的 Grafana 仪表板，用于演示一个特别灾难性的示例。在这个简单的应用程序中，我们有一个九个 Pod 的&lt;strong&gt;订单&lt;/strong&gt;服务，将流量发送到一个九个 Pod 的&lt;strong&gt;仓库&lt;/strong&gt;服务。每个服务均匀分布在三个区域中，即每个区域中有三个 Pod。&lt;/p&gt;&lt;p&gt; TAR 已启用，一开始一切正常。流量保持在同一区域内，系统运行状况良好。但是，如果我们仅禁用一个区域中的&lt;em&gt;仓库&lt;/em&gt;Pod（11:32 左右），我们就会看到灾难：该区域的成功率降至 0%，因为其&lt;em&gt;订单&lt;/em&gt;Pod 无法到达任何其他 Pod——&lt;em&gt;尽管事实上集群中其他地方也有健康的 pod！&lt;/em&gt; &lt;/p&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="拓扑图" src="https://cdn.prod.website-files.com/627a84f19cfe42b2c96f2416/665f8045f56a7abd46cede26_AD_4nXdffIVfmweJ0U7-2_18A5ZTW7dPfCI4ab_SOZy5BoVyHqqfCxwoysgLBEHXIa-ofcYpEKWzXUTy_b99Gl9P9VoavnLpgL_cpIzxQKaCF5S2MOLxuXvbs28tj3dxKgv8CGx_ez6HImUQ8r_UePEswYyew3k0.png" /&gt;&lt;/figure&gt;&lt;p&gt;如果拓扑感知路由未生效，这些 Pod 将能够平衡集群中其他剩余 Pod 的请求。换句话说，通过向系统添加拓扑感知路由，我们为系统引入了一种全新的失败方式！&lt;/p&gt;&lt;p&gt; （如果您想自己尝试一下，我们这里有一个包含所有&lt;a href="https://github.com/BuoyantIO/hazl-orders-playground"&gt;相关代码的&lt;/a&gt;存储库。我们使用&lt;a href="https://github.com/BuoyantIO/bb"&gt;bb&lt;/a&gt;应用程序来生成客户端和服务器，并使用非常酷的&lt;a href="https://github.com/hatoo/oha"&gt;oha 负载生成器&lt;/a&gt;来生成负载。）&lt;/p&gt;&lt;p&gt;拓扑感知路由还存在一些其他问题。还记得我说过我们的“简单”演示设置有 9 个 Pod 吗？这是因为 TAR 不会在任何区域中少于 3 个 Pod 时始终启用自身。 （文档中的确切描述有点令人担忧：“如果每个区域的端点少于 3 个，则 TAR 被禁用的可能性很高（约 50%）。因此它可能会自行启用。也可能不会。 ）&lt;/p&gt;&lt;p&gt;该文档还提供了 TAR 无法工作的条件清单，即在其他功能正常的系统中将自身禁用。最后，TAR 在水平 Pod 自动缩放等功能方面也表现不佳。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;放弃所有希望……？&lt;/h2&gt;&lt;p&gt;我们上面演示的是 TAR 导致灾难性失败的一个极端例子：我们一次性杀死了一个区域中针对一项特定服务的 Pod。这种完全失败在实践中希望很少见，尽管并非不可能，尤其是在有状态服务（例如数据库）的世界中。公平地说，即使在这种情况下，TAR 也&lt;em&gt;有&lt;/em&gt;办法幸存下来：如果我们删除了 pod（或者如果它们未通过运行状况检查并且 Kubernetes 将它们从可用端点集中删除），TAR 实际上会自行禁用一次一个区域中的最小 Pod 数量降至 3 以下，并且允许跨区域流量。&lt;/p&gt;&lt;p&gt;但 TAR 无法允许跨区域流量也体现在其他类型的故障中。单个区域内延迟的任何增加或单个区域内流量水平的任何增加都可能以类似的方式触发故障。在一个充满非常小、细致入微、嗯、故障模式钉子的世界里，完全拒绝所有跨区域流量是一把非常大的锤子。&lt;/p&gt;&lt;p&gt;值得庆幸的是，希望并没有消失。在这篇博文中，我们实际上只探索了两个选项：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;如果没有拓扑感知路由&lt;/strong&gt;：您将获得高度可靠的多可用区集群，但您必须为跨区域流量付费。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;使用拓扑感知路由&lt;/strong&gt;：您不必为跨区域流量付费，但无法通过依赖其他 Pod 从所有区域内故障中恢复（即使它们位于同一集群中）。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;还有第三种选择，在这篇博文的第二部分中，我将描述一种兼具低成本&lt;em&gt;和&lt;/em&gt;高可用性的方法。但为了做到这一点，我们将不得不放弃简单的 L4 连接平衡的世界，并转向（你猜对了）L7 请求平衡的世界，在这里我们可以明确决定将流量路由到哪里基于系统的健康状况。&lt;/p&gt;&lt;p&gt;第二部分将于下周发布。敬请关注！&lt;/p&gt;&lt;p&gt; &lt;em&gt;（图片来源：&lt;/em&gt; &lt;a href="https://unsplash.com/@davegoudreau?utm_content=creditCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=unsplash"&gt;&lt;em&gt;Dave Goudreau&lt;/em&gt;&lt;/a&gt;&lt;em&gt;在 Unsplash 上&lt;/em&gt;拍摄&lt;a href="https://unsplash.com/photos/man-in-blue-jacket-standing-on-rock-formation-during-daytime-jviblDl60IE?utm_content=creditCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=unsplash"&gt;&lt;em&gt;。）&lt;/em&gt;&lt;/a&gt; &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Sun, 16 Jun 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/06/17/the-trouble-with-topology-aware-routing-sacrificing-reliability-in-the-name-of-cost-savings/</guid></item><item><title>【Introducing our H1 2024 Cloud Native Ambassadors】</title><link>https://www.cncf.io/blog/2024/06/17/introducing-our-h1-2024-cloud-native-ambassadors/</link><description>&lt;p&gt;我们很高兴欢迎最新一批 CNCF 大使！这些充满热情和奉献精神的个人因其对云原生社区的杰出贡献而受到认可。作为 CNCF 大使，他们将在倡导 CNCF 项目、组织社区活动以及分享知识和专业知识以帮助其他人在云原生生态系统中取得成功方面发挥至关重要的作用。&lt;/p&gt;&lt;p&gt;今天，我们很高兴宣布 2024 年上半年任命 179 名新云原生大使！这个多元化的大使群体代表着 53 个国家/地区的 116 家公司——在这里与所有新大使见面！&lt;/p&gt;&lt;p&gt;新计划亮点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;收到 452 份申请&lt;/li&gt;&lt;li&gt;接受 179 名大使（约 40%）&lt;/li&gt;&lt;li&gt;接受 2023 年春季 119 名前任大使&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;由 5 名 CNCF 工作人员组成的委员会审查了 400 多份申请。申请是在加权的基础上进行审查的。&lt;/p&gt;&lt;p&gt;恭喜，欢迎来到 2024 年 H1 等级！我们期待看到我们能够共同完成所有令人兴奋的事情。&lt;/p&gt;&lt;p&gt;您有兴趣成为官方云原生大使吗？下一学期的申请将于 2024 年 8 月开放，学期将于 10 月开始。关注&lt;a href="http://twitter.com/cloudnativefdn"&gt;@CloudNativeFdn&lt;/a&gt;和&lt;a href="https://twitter.com/CNCFAmbassadors"&gt;@CNCFAmbassadors&lt;/a&gt;了解该计划的最新动态。 &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Sun, 16 Jun 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/06/17/introducing-our-h1-2024-cloud-native-ambassadors/</guid></item><item><title>【Why Embrace created span snapshots for mobile observability with OpenTelemetry】</title><link>https://www.cncf.io/blog/2024/06/14/why-embrace-created-span-snapshots-for-mobile-observability-with-opentelemetry/</link><description>&lt;p&gt;&lt;em&gt;Embrace 首席技术官兼联合创始人&lt;a href="https://www.linkedin.com/in/fredricnewberg/"&gt;Fredric Newberg&lt;/a&gt;的会员帖子&lt;/em&gt;&lt;/p&gt;&lt;p&gt;OTel 跨度对于了解移动应用程序的性能非常有用。然而，鉴于 OTel 规范中对跨度的限制，即跨度在完成之前无法导出，因此存在一个盲点，对于移动应用程序尤其重要。&lt;/p&gt;&lt;p&gt;当您需要了解跨度在完成之前已经开始时会发生什么？&lt;/p&gt;&lt;p&gt;如果您主要在后端系统中工作，您可能会好奇未完成的跨度在可观察性方面提供了什么价值。虽然涵盖后端和移动可观察性之间的所有差异超出了本文的范围 - 但您可以&lt;a href="https://dzone.com/articles/8-ways-mobile-observability-is-the-opposite"&gt;查看本文&lt;/a&gt;以了解更多信息 - 我们将在这里简要介绍一些关键差异。&lt;/p&gt;&lt;p&gt;在这篇文章中，我们将介绍以下内容：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;后端应用程序和移动应用程序之间的跨度有何不同&lt;/li&gt;&lt;li&gt;Embrace 如何解决正在进行的跨度问题&lt;/li&gt;&lt;li&gt;拥抱如何创建跨度快照作为解决方案&lt;/li&gt;&lt;/ul&gt;&lt;h2 class="wp-block-heading"&gt;&lt;a&gt;&lt;/a&gt;后端应用程序和移动应用程序之间的跨度有何不同&lt;/h2&gt;&lt;p&gt;后端和移动应用程序之间存在几个关键差异，这些差异使得移动环境中持续跨度的可见性成为比后端环境中更重要的问题。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;a&gt;&lt;/a&gt;移动应用程序在前台和后台状态下运行&lt;/h3&gt;&lt;p&gt;与倾向于在单一操作状态下运行的后端应用程序不同，移动应用程序在两种截然不同的状态下运行：前台和后台。 Android 和 iOS* 中的后台行为均受到限制。本次讨论最关键的是限制后台网络使用的重要性。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;a&gt;&lt;/a&gt;移动应用程序任务跨越前台/后台生命周期边界&lt;/h3&gt;&lt;p&gt;用户在任意时间点后台应用程序，通常会打断应用程序开发人员认为的关键任务。例如，用户可以在后台应用程序发送短信之前加载产品列表，然后返回以完成购买。尽管加载产品列表的任务通常可能不会花那么长时间，但应用程序中每天有数百万个会话，应用程序中的大多数关键任务不可避免地会被中断相当多次。&lt;/p&gt;&lt;p&gt;网络请求是通过应用程序开发人员无法控制的网络发出的，因此即使是微不足道的请求也可能需要几秒钟才能为部分用户完成。在移动应用程序中可能需要一段时间的关键任务的其他一些示例包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;上传视频&lt;/li&gt;&lt;li&gt;清理缓存数据&lt;/li&gt;&lt;li&gt;在低端设备上渲染复杂视图&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;除了覆盖低级功能（例如网络请求）的跨度之外，包含这些跨度的父跨度通常也会跨生命周期边界存在。在后端服务中，这不是常见的行为，其中与 API 请求相关的所有任务都将在发送对请求的响应时完成。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="图像" class="wp-image-112795" height="140" src="https://www.cncf.io/wp-content/uploads/2024/06/image-3.png" width="468" /&gt;&lt;/figure&gt;&lt;p&gt;考虑到网络使用限制，从设备安全传送 OTel span 数据的时间仅限于应用程序位于前台或进入后台后不久。** 因此，与后端应用程序不同的是，在后端应用程序中，由于没有生态系统来强制执行这些类型的限制，移动可观测性供应商在何时可以提供跨度数据方面受到限制。&lt;/p&gt;&lt;p&gt;现在您可能会想：“问题出在哪里？”毕竟，似乎有两种主要情况需要应对：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;如果应用程序在前台完成所有跨度，则 SDK 可以将这些跨度发送到 OTel 收集器。&lt;/li&gt;&lt;li&gt;如果应用程序的跨度未在前台会话中完成，则 SDK 可以等待它们在后续前台会话中完成，然后将这些跨度发送到 OTel 收集器。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;第二个要点涉及移动和后端可观测性数据之间的另一个关键区别。在后端可观察性中，您以指标、跟踪和日志等单独信号的形式收集遥测数据。在移动可观测性中，当您单独收集这些相同的信号时，您还以用户会话的形式收集遥测数据。&lt;/p&gt;&lt;p&gt;由于 OpenTelemetry 目前没有会话的概念（除了信号的高基数属性之外），每个供应商对其的定义都不同。在 Embrace，我们将会话定义为应用程序位于前台时发生的情况。当应用程序在后台运行时，我们将技术和行为数据（包括关联的跨度数据）作为此会话负载的一部分传递到后端。除了对于大多数应用程序来说是一种及时且高效地传输数据的实用方法之外，我们发现前台会话的概念很好地映射了大多数开发人员如何理解和调试其应用程序。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;&lt;a&gt;&lt;/a&gt; Embrace 如何解决正在进行的跨度问题&lt;/h2&gt;&lt;p&gt;要全面了解会话中发生的情况，包括正在进行的任务非常重要。如果使用跨度监控这些任务，我们如何实现这一目标？为了解决这个问题，我们考虑了以下选项：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;忽略正在进行的跨度并在结束时报告它们&lt;/strong&gt;- 我们拒绝了这种方法，因为我们认为失去对会话中已开始但未完成的事件的可见性是不可接受的。我们的一些客户遇到了崩溃，因为用户在将应用程序置于后台之前在前台启动了大量数据上传，并且操作系统在上传完成之前终止了应用程序进程。让客户对此类问题视而不见是不能容忍的。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;发送没有结束时间的跨度&lt;/strong&gt;– 我们希望我们的 SDK 发出的跨度符合 OTel 规范。虽然我们可以让后端系统解决缺失的跨度问题，但我们会损害 OTel 提供的可移植性，因此该选项被拒绝。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;将结束时间设置为发送的时间&lt;/strong&gt;- 这是一个糟糕的主意，我不会尝试列举所有原因，但足以说明，在完成过程中获得具有多个结束时间的相同跨度将这让开发处理和分析这些数据的系统的人们质疑为什么他们要使用这样做的 SDK。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;拍摄正在进行的跨度的快照并将其与已完成的跨度分开交付&lt;/strong&gt;– 为了确保我们保持与 OTel 规范的兼容性，同时还提供显示完整会话所需的数据，我们制作了正在进行的跨度的副本 – 跨度快照– 不包括跨度的结束时间。该数据可以与常规的、完整的跨度分开传送。当这些正在进行的跨度结束时，它们将作为符合 OTel 的跨度进行交付。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;考虑到这篇文章的标题，最后一个选项是我们最终选择的路径，这一点不会让任何人感到惊讶。我们能够让我们的 SDK 向 OTel 收集器提供符合 OTel 要求的跨度，并且能够使用跨度快照数据来增强发送到后端的数据，从而更清晰地了解移动设备上发生的情况。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;&lt;a&gt;&lt;/a&gt;拥抱如何创建跨度快照作为解决方案&lt;/h2&gt;&lt;p&gt;您可以查看我们如何在&lt;a href="https://github.com/embrace-io/embrace-android-sdk"&gt;Android&lt;/a&gt;和&lt;a href="https://github.com/embrace-io/embrace-apple-sdk"&gt;iOS&lt;/a&gt; SDK 中捕获跨度快照的代码。我们的跨度快照格式源自&lt;a href="https://opentelemetry.io/docs/concepts/signals/traces/#spans"&gt;OTel Span Primitive，&lt;/a&gt;并进行了以下更改：&lt;/p&gt;&lt;ol start="1"&gt;&lt;li&gt; endTime 预计为零或不存在&lt;/li&gt;&lt;li&gt;状态字段也应该为零、不存在或明确“未设置”&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;由于我们将跨度快照作为会话的一部分提供，因此如果它们跟踪的操作跨越多个会话边界，我们可能会多次上传快照。这意味着如果将跨度存储在数据库中，普通的（TraceId，SpanId）元组不足以充当主键。相反，需要使用元组（SessionId、TraceId、SpanId）。我们不会将快照数据用于聚合目的——只有完成的跨度才会参与聚合——这简化了我们处理和存储这些数据的方式。我们仅使用快照为各个会话提供额外的上下文。&lt;/p&gt;&lt;p&gt;同样重要的是要记住，跨度快照就是跨度时间的快照。快照和最终非快照版本之间的属性、事件和链接可能会发生变化。&lt;/p&gt;&lt;p&gt;我们还使用快照方法在发生崩溃时恢复正在进行的跨度。应用程序崩溃时持续存在跨度是一种常见情况，我们不想丢失此跨度信息，因为它可能提供有关崩溃发生原因的有用上下文。拥有快照意味着我们可以在下次应用程序启动时轻松恢复这些正在进行的跨度，并在导出之前将这些快照转变为失败的跨度。&lt;/p&gt;&lt;p&gt;我们希望跨度快照概念最终能够被考虑纳入 OpenTelemetry 规范中。这样，可观测性供应商就可以更好地可视化跨多个前台和后台用户体验的技术细节。&lt;/p&gt;&lt;p&gt;在这篇文章中，我们想分享我们如何在遵守 OpenTelemetry 规范的同时克服独特的移动可观测性挑战。我们很乐意听到有关我们的&lt;a href="https://github.com/embrace-io?q=&amp;amp;type=public"&gt;开源存储库&lt;/a&gt;的反馈，或者如果您想了解更多信息，可以&lt;a href="https://embraceio-community.slack.com/"&gt;加入我们的 Slack 社区&lt;/a&gt;。&lt;/p&gt;&lt;p&gt; * 某些类型的应用程序可以免除这些限制，但绝大多数应用程序都没有这些限制。由于我们最终无法控制应用程序运行的环境，因此我们必须为最坏的情况做好准备。&lt;/p&gt;&lt;p&gt; ** iOS 在这方面尤其严格，如果应用程序不遵守所施加的限制，则会受到更严格的限制。  一旦应用程序进入后台，它就会受到操作系统的支配 - 无论是线程调度、GC，还是在需要回收资源时简单地杀死应用程序，当您的应用程序处于后台时，没有任何保证。这种环境所带来的敌意意味着“等待它完成”根本不够好。 &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Thu, 13 Jun 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/06/14/why-embrace-created-span-snapshots-for-mobile-observability-with-opentelemetry/</guid></item><item><title>【Answering your top 9 questions about monitoring in Kubernetes】</title><link>https://www.cncf.io/blog/2024/06/10/answering-your-top-9-questions-about-monitoring-in-kubernetes/</link><description>&lt;p&gt;&lt;em&gt;会员帖子最初由 Dexter Garner 在&lt;a href="https://www.fairwinds.com/blog/top-9-questions-kubernetes-monitoring"&gt;Fairwinds 博客&lt;/a&gt;上发布&lt;/em&gt;&lt;/p&gt;&lt;p&gt;您可以在 Kubernetes 中监控很多东西，但您需要了解监控方面什么是关键任务。在&lt;a href="https://webinars.cloudnativenow.com/building-a-kubernetes-platform-the-what-and-why-of-monitoring"&gt;最近的一次网络研讨会中，&lt;/a&gt;我们探讨了您应该在 Kubernetes 平台中监控的内容、要遵循的最佳实践，以及为什么 Kubernetes 监控对于云原生应用程序开发如此重要。最后，我们提出了一些很好的问题，我们希望更广泛地分享答案。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt; 1. 我们如何监控成本？&lt;/h2&gt;&lt;p&gt;重要的是要了解今天每个工作负载给您带来的成本是多少、为什么要花费这么多，以及您可以做出哪些改变来降低这些成本。例如，如果您将给定工作负载的请求设置为一个 CPU，而它实际上只使用了一半的 CPU，那么基本上就有一半的 CPU 被浪费了。在某些情况下，工作负载可能配置不足，从而导致可靠性问题。通过监控工作负载，您可以确定是否有任何工作负载不断超出 CPU 和内存阈值，在这种情况下，您应该相应地&lt;a href="https://www.fairwinds.com/blog/how-to-correctly-set-resource-requests-and-limits"&gt;扩展资源分配&lt;/a&gt;。为了清楚地了解情况，您需要分析已经运行一段时间的运行工作负载的成本。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt; 2、监控工具应该如何选择？&lt;/h2&gt;&lt;p&gt; &lt;a href="https://prometheus.io/"&gt;Prometheus&lt;/a&gt; 、 &lt;a href="https://grafana.com/"&gt;Grafana&lt;/a&gt; 、 &lt;a href="https://www.datadoghq.com/"&gt;Datadog&lt;/a&gt;和&lt;a href="https://www.fairwinds.com/insights"&gt;Fairwinds Insights&lt;/a&gt;可以很好地互补。本质上，Prometheus、Grafana 和 Datadog 执行第一层监控。他们会告诉您您的房子现在是否着火。如果您的应用程序正在崩溃，或者即将崩溃，这些工具将向您显示当前问题所在。 Fairwinds Insights 将向您展示是否需要修复漏洞、调整过度配置的工作负载、修复配置问题以及其他类似的事情。它是对其他监控工具的补充。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt; 3. Kubernetes 中最佳的可观察性框架是什么？&lt;/h2&gt;&lt;p&gt;您可以使用多种框架。在内部，我们将 Datadog 用于我们的应用程序，因为它开箱即用，运行良好。还有开放标准，例如&lt;a href="https://opentelemetry.io/"&gt;Open Telemetry&lt;/a&gt; ，它是 API、SDK 和工具的集合，可用于检测、生成、收集和导出遥测数据以分析软件性能和行为。开放遥测包括开源和付费解决方案。 Prometheus 和 Grafana 是 Kubernetes 内可观察性的绝佳堆栈，但您的选择取决于您想要如何平衡易用性、成本以及社区对平台的理解程度与可能提供不同功能的新平台。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt; 4. 谁拥有针对不同指标和日志的指标和仪表板警报的应用程序工具？&lt;/h2&gt;&lt;p&gt;您希望有一个平台或 SRE 团队拥有节点本身、运行 Kubernetes 本身的服务、控制平面、您运行的任何附加组件（例如证书管理器或 NGINX Ingress）的核心指标，以及支持在 Kubernetes 中运行的应用程序的任何其他东西。另一方面，如果您的应用程序本身在 Kubernetes 中运行，那么这些应用程序发出的日志（包括为这些应用程序启动的作业和扩展事件）应该由应用程序团队拥有。当应用程序返回 500 个错误和类似问题时，他们将具有上下文来理解日志消息的含义。&lt;/p&gt;&lt;p&gt;遇到扩展问题或内存不足和 CPU 耗尽的应用程序之间也存在一些灰色区域，解决问题可能需要应用程序团队或 SRE 团队来解决，具体取决于问题的根本原因。您需要在两个团队之间进行一些协作。通常，如果平台团队正在监控这些事情并且无法从他们的一端找出明显的原因，他们会向应用程序团队开一张票，表明应用程序正在红线，并要求他们解决它。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt; 5. 在采用自适应黄金信号跟踪之前我们如何确定基线？&lt;/h2&gt;&lt;p&gt;制定基线很困难，部分原因是它始终是一个持续的过程。您不可能&lt;a href="https://www.fairwinds.com/blog/building-a-kubernetes-platform-what-you-need-to-monitor-and-why"&gt;设置一次监控&lt;/a&gt;就可以完成；您必须不断改进从可观察性角度跟踪的内容、从监控角度改进仪表板中显示的内容以及发出警报的内容。这是一个持续改进的飞轮。&lt;/p&gt;&lt;p&gt;首先，请确保您跟踪&lt;a href="https://sre.google/sre-book/monitoring-distributed-systems/"&gt;四个黄金信号&lt;/a&gt;（延迟、流量、错误和饱和度）并查看正常行为。如果您今天要启动应用程序，请开始查看这些内容，看看应用程序生命周期第一周的正常行为是什么样的。您需要在早期不断检查仪表板，因为您还不知道正常情况是什么样子（而且您也不知道危险是什么样子）。&lt;/p&gt;&lt;p&gt;一开始，您实际上是在试验并弄清楚基线是什么样子。一旦您对应用程序在正常情况下的行为有了良好的直觉，您就可以开始设置这些阈值并说：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;这是我的应用程序的正常频段&lt;/li&gt;&lt;li&gt;这就是我想提醒大家的地方&lt;/li&gt;&lt;li&gt;这些是我一遍又一遍地审视的事情&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;然后制作一个仪表板，将这些内容显示在前面和中间。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt; 6. 命名空间应遵循哪些最佳实践？&lt;/h2&gt;&lt;p&gt;第一个最佳实践是&lt;strong&gt;使用命名空间&lt;/strong&gt;。我们见过一些公司，基本上每个应用程序（以及其他所有内容）都部署到相同的默认命名空间中。这会造成很多头痛。一切都混合在一起，特定团队不可能将事物分开或以不同的方式许可事物。命名空间提供隔离，以确保应用程序团队 A 无法访问应用程序团队 B 的内容，反之亦然。例如，您可以为命名空间 A 应用不适用于命名空间 B 的策略。&lt;/p&gt;&lt;p&gt;至少，按团队或应用程序分隔命名空间是一个非常好的实践。还有分层命名空间的概念，您可以在其中创建命名空间，然后在其中创建子命名空间。因此，您可以为所有应用程序使用一个命名空间，然后为每个单独的应用程序或子命名空间团队使用一个子命名空间，然后为这些团队管理的每个应用程序使用一个子命名空间。&lt;/p&gt;&lt;p&gt;这个概念的第二次迭代是为工作负载添加标签，无论是团队、所有者还是成本中心。这提供了额外的方法来跟踪资源或将资源归属于业务部门或个人。您还可以使用标签来查看命名空间中的相似事物。例如，您可能有标记为登台与生产的应用程序，这可以帮助您向团队发出良好的信号，让他们知道什么更重要。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt; 7. 为什么监控在 Kubernetes 平台中至关重要？&lt;/h2&gt;&lt;p&gt;无论您是否使用 Kubernetes，&lt;strong&gt;&lt;em&gt;监控都至关重要。&lt;/em&gt;&lt;/strong&gt;如果您不监控应用程序环境内部发生的情况，则您将面临中断的风险。监控显示您的一般健康指标以及您的应用程序是否运行正常。&lt;/p&gt;&lt;p&gt;最糟糕的情况可能是严重中断。您的用户无法访问该应用程序。你每分钟都在损失收入。&lt;/p&gt;&lt;p&gt;但是，当出现问题但没有发生全面中断时该怎么办？也许 10% 的用户在使用该应用程序时遇到困难，他们收到错误消息，并且该平台已饱和。如果您的所有用户都遇到了降级的体验，并且您无法看到它，因为您没有正确的指标来显示延迟已经达到顶峰或您的数据库面临压力（例如），那么糟糕的用户体验可能会持续数小时或数天，直到您的团队中有人注意到。这可能比您知道的（并且可以采取措施解决）更快的严重中断更糟糕。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt; 8. 你们有备份系统来导出整个集群或部分节点吗？&lt;/h2&gt;&lt;p&gt;有一个名为&lt;a href="https://velero.io/"&gt;Velero 的&lt;/a&gt;开源解决方案可以执行类似的操作。一般来说，我们建议客户将所有内容存储为&lt;a href="https://www.fairwinds.com/blog/why-infrastructure-as-code-scanning-matters-for-kubernetes-configuration"&gt;基础设施即代码&lt;/a&gt;。我们&lt;a href="https://www.fairwinds.com/managed-kubernetes"&gt;管理的&lt;/a&gt;每个集群都完全作为基础设施即代码来完成。这意味着，如果其中一个集群消失，我们可以通过将所有基础设施作为代码并将其重新应用到一个全新的集群，在几分钟内重新创建它。这就是您应该如何考虑备份策略：您的所有状态都必须在某个地方的 Git 存储库中进行管理，这样，如果您的集群死亡、消失或完全失败，就可以使用该基础设施作为代码从头开始重新创建它。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt; 9. Datadog 还是 Splunk 来衡量指标？&lt;/h2&gt;&lt;p&gt;我们对其中之一没有硬性推荐，但我们在内部使用&lt;a href="https://www.fairwinds.com/blog/prevent-risk-monitor-kubernetes-fairwinds-datadog"&gt;Datadog&lt;/a&gt; 。它在获取我们所有的日志并通过 Datadog 提供它们方面做得很好，我们可以在其中索引它们，决定保留它们多长时间，以及其他类似的事情。它立即获取所有 Kubernetes 指标；您只需安装 Datadog 代理即可运行。 Splunk 可能有非常相似的东西，因此请尝试使用示例集群或小型 Kubernetes 集群来启动，看看您更喜欢哪一个。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;确保您正在 Kubernetes 中进行监控&lt;/h2&gt;&lt;p&gt;Kubernetes 以其复杂性而闻名，但不进行监控会使这种复杂性更难以管理。确保您正在收集有关集群事件、日志和跟踪的指标。监控将帮助您了解当前的情况、您的应用程序和基础设施的健康状况以及如何进行改进。仅仅进行监控是不够的，您还需要发出警报，以便在出现问题时您会收到警报并能够快速解决问题。&lt;/p&gt;&lt;p&gt;如果您需要监控和警报方面的帮助，&lt;a href="https://www.fairwinds.com/fairwinds-managed-kubernetes-request"&gt;请联系&lt;/a&gt;。我们的团队拥有 Kubernetes 专业知识，可确保您的 Kubernetes 基础设施快速、安全且稳定。&lt;/p&gt;&lt;p&gt; &lt;a href="https://www.fairwinds.com/cs/c/?cta_guid=a58809a8-1c48-4877-8e0a-d853159168f5&amp;amp;signature=AAH58kF20sdfd288lfZPsSL5OyoZIqgLcg&amp;amp;portal_id=2184645&amp;amp;pageId=166875249703&amp;amp;placement_guid=998a8edf-9002-4f8c-ba38-4f744659f622&amp;amp;click=cae31fae-2b85-4139-a648-6fe8b2cee1c4&amp;amp;redirect_url=APefjpHTh5_3z7kOn-huLk4OBOCd2O3YHEFuy9zLYvbJd_H9GrRJMtxqOcTaxJ_sNDcoelYaerS0sx9gszUFe5wwASRQFVIlC32jRpNFH5A6EQ1kV-ePXmrzkG1Zkia2Q3h7i9UHOZvA&amp;amp;hsutk=4a55ec2cc4507b04717468a4eba6a723&amp;amp;canon=https%3A%2F%2Fwww.fairwinds.com%2Fblog%2Ftop-9-questions-kubernetes-monitoring&amp;amp;__hstc=91154437.4a55ec2cc4507b04717468a4eba6a723.1717678363374.1717678363374.1717678363374.1&amp;amp;__hssc=91154437.1.1717678363374&amp;amp;__hsfp=3106203602&amp;amp;contentType=blog-post"&gt;探索托管 Kubernetes&lt;/a&gt; &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Sun, 09 Jun 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/06/10/answering-your-top-9-questions-about-monitoring-in-kubernetes/</guid></item><item><title>【Kubernetes is ten years old!】</title><link>https://www.cncf.io/blog/2024/06/07/kubernetes-is-ten-years-old/</link><description>&lt;p&gt;2014 年 6 月 6 日，Joe Beda &lt;a href="https://github.com/kubernetes/kubernetes/commit/2c4b3a562ce34cddc3f8218a2c4d11c7310e6d56"&gt;首次&lt;/a&gt;致力于 Kubernetes，突然一场运动诞生了。过去十年，Kubernetes 改变了世界。 &lt;/p&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p&gt; “我认为我们中没有人期望 Kubernetes 会变成现在这样。”&lt;/p&gt;&lt;cite&gt;乔·贝达&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p&gt; “有这个啊哈！当他们看到自己的工作负载正在运行的那一刻，他们就会与之联系起来。这只花了一两分钟。我们来自一个需要数小时或数天才能获得这些的世界。”&lt;/p&gt; &lt;cite&gt;Lachlan Evenson（微软首席项目经理）&lt;/cite&gt; &lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p&gt; “围绕 Kubernetes 发生了一场运动。这不仅仅是技术。这是它周围的社区。”&lt;/p&gt; &lt;cite&gt;Bassam Tabbara（Upbound 首席执行官/创始人）&lt;/cite&gt; &lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p&gt; “我认为我从未在任何其他空间看到过类似的事情。”&lt;/p&gt;&lt;cite&gt;米歇尔·达纳尼 (Michelle Dhanani)（费米扬科技公司创始成员）&lt;/cite&gt; &lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p&gt; “今天的 Kubernetes 实际上已经无处不在了。”&lt;/p&gt; &lt;cite&gt;Tim Hockin（Google Cloud 杰出软件工程师）&lt;/cite&gt;&lt;/blockquote&gt;&lt;p&gt; Kubernetes 10 岁生日快乐！请&lt;a href="https://youtu.be/nAT9U1vJ8x0"&gt;观看整个视频，&lt;/a&gt;与我们一起庆祝！&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;&lt;strong&gt;我们是如何到达这里的&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;2016 年 3 月 10 日， &lt;a href="https://www.cncf.io/announcements/2016/03/10/cloud-native-computing-foundation-accepts-kubernetes-as-first-hosted-project-technical-oversight-committee-elected/"&gt;Kubernetes 加入 CNCF&lt;/a&gt; 。 &lt;a href="https://www.cncf.io/announcements/2016/05/09/cloud-native-computing-foundation-accepts-prometheus-as-second-hosted-project/"&gt;几个月后，&lt;/a&gt;普罗米修斯加入了。&lt;/p&gt;&lt;p&gt; Kubernetes 作为 CNCF 的一部分&lt;a href="https://www.cncf.io/blog/2016/07/21/happy-1st-birthday-kubernetes/"&gt;庆祝了它的一周年&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;第二年，Kubernetes&lt;a href="https://www.cncf.io/blog/2017/07/27/happy-second-birthday-kubernetes-retrospective/"&gt;庆祝了两周岁&lt;/a&gt;，Joe Beda&lt;a href="https://www.cncf.io/blog/2017/11/07/joe-beda-explains-inner-workings-kubernetes/"&gt;解释了它的内部运作方式&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;到 2018 年，可以肯定地说 Kubernetes 已经进入（龙）主流，嗯， &lt;a href="https://www.cncf.io/blog/2018/02/22/winter-not-delayed-hbo-uses-kubernetes-bring-us-game-thrones/"&gt;至少对于权力的游戏粉丝来说是主流&lt;/a&gt;！同年晚些时候，Kubernetes 成为&lt;a href="https://www.forbes.com/sites/janakirammsv/2018/03/07/kubernetes-becomes-the-first-project-to-graduate-from-the-cloud-native-computing-foundation/?sh=54df75854b8f"&gt;第一个从 CNCF 毕业的项目&lt;/a&gt;，其次是 Prometheus。&lt;a href="https://www.cncf.io/blog/2018/08/07/helm-the-package-manager-for-kubernetes/"&gt;包管理器 Helm&lt;/a&gt;也加入了进来。&lt;/p&gt;&lt;p&gt;在接下来的几年里，Kubernetes 的采用持续增长，到 2020 年，对&lt;a href="https://www.cncf.io/blog/2020/12/14/kubernetes-101-an-introduction/"&gt;Kubernetes 101 教程的&lt;/a&gt;需求非常强劲。到 2022 年，96% 的受访组织表示&lt;a href="https://www.cncf.io/announcements/2022/02/10/cncf-sees-record-kubernetes-and-container-adoption-in-2021-cloud-native-survey/"&gt;正在使用或评估 Kubernetes&lt;/a&gt; 。&lt;/p&gt;&lt;p&gt;到 2023 年，可以肯定地说，无论是关于安全、平台工程、可观察性还是存储，Kubernetes 都会成为每个对话的一部分。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;&lt;strong&gt;从数字来看&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;自从加入 CNCF 以来，Kubernetes 体验到了云原生协作的力量：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; 74、680 多个贡献者&lt;/li&gt;&lt;li&gt;314、188+ 代码提交&lt;/li&gt;&lt;li&gt;263、906+ 拉取请求&lt;/li&gt;&lt;li&gt;340万+贡献&lt;/li&gt;&lt;li&gt;7, 812+ 贡献公司&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如今，Kubernetes 已成为拥有全球社区的最大开源项目之一。但再次强调，不要只相信我们的话。&lt;a href="https://youtu.be/nAT9U1vJ8x0"&gt;观看视频&lt;/a&gt;或&lt;a href="https://www.cncf.io/kubertenes/"&gt;查找您附近的现场活动&lt;/a&gt;- 它们将持续到六月底。 &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Thu, 06 Jun 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/06/07/kubernetes-is-ten-years-old/</guid></item><item><title>【Kubestronaut in Orbit: Khushboo Khatter】</title><link>https://www.cncf.io/blog/2024/06/07/kubestronaut-in-orbit-khushboo-khatter/</link><description>&lt;h2 class="wp-block-heading"&gt;了解库什布&lt;/h2&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="Khushboo Khatter 谈 Kubestronaut 在轨道上的情况" class="wp-image-112088" height="1024" src="https://www.cncf.io/wp-content/uploads/2024/06/Kubestronaut-in-Orbit-1-1.jpg" width="1950" /&gt;&lt;/figure&gt;&lt;p&gt; Khushboo Khatter 是一位 IT 专业人士，拥有超过 8 年的经验，其中 6 年从事 Kubernetes 工作。她对云技术充满热情，并喜欢探索尖端的 CNCF 工具。她对 Kubernetes 有特殊的热情，并且喜欢深入研究它的复杂性。&lt;/p&gt;&lt;p&gt;如果您想成为像 Khushboo 一样的 Kubetronaut，请在&lt;a href="https://www.cncf.io/training/kubestronaut/"&gt;CNCF Kubetronaut&lt;/a&gt;页面上获取更多详细信息。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;您什么时候开始使用 kubernetes——您的第一个项目是什么？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt; 2018 年，我踏上了 Kubernetes 之旅，渴望探索它在云原生计算方面的潜力。我的早期项目之一涉及使用 Kubernetes 将单体应用程序迁移到微服务。&lt;/p&gt;&lt;p&gt;从头开始安装 Kubernetes 是一个挑战，但它教会了我在恢复能力和解决问题方面的宝贵经验。&lt;/p&gt;&lt;p&gt;随着我们的进步，事实证明 Kubernetes 在编排容器化工作负载和优化资源利用率方面不可或缺。这个项目点燃了我对云原生技术的热情，为该领域的进一步探索和创新奠定了基础。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;您现在从事或使用的主要 CNCF 项目是什么？  在您的职业生涯中，您最喜欢哪些项目？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我工作或经常使用的主要 CNCF 项目包括 Kubernetes、 &lt;a href="https://github.com/prometheus"&gt;Prometheus&lt;/a&gt; 、 &lt;a href="https://github.com/istio"&gt;Istio&lt;/a&gt; 、 &lt;a href="https://github.com/helm/helm"&gt;Helm&lt;/a&gt; 、 &lt;a href="https://github.com/fluent/fluentd"&gt;Fluentd&lt;/a&gt;和&lt;a href="https://github.com/open-telemetry"&gt;OpenTelemetry&lt;/a&gt; 。这些项目在我的职业生涯中发挥了至关重要的作用，使我能够构建可扩展且有弹性的应用程序。其中，Kubernetes 脱颖而出，最具影响力，它彻底改变了我们部署和管理容器化应用程序的方式。&lt;/p&gt;&lt;p&gt;此外，Prometheus、Istio、Helm、Fluentd 和 OpenTelemetry 通过提供高级监控、网络、包管理、日志记录和可观察性解决方案，进一步增强了我的能力。这些项目共同构成了云原生基础设施和应用程序的支柱，使组织能够采用现代软件实践并提供创新的解决方案。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;是什么促使您获得所有 Kubernetes 证书？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在职业抱负和个人成长的推动下，我追求了 Kubernetes 认证。认识到 Kubernetes 在现代技术中至关重要，我寻求加深我的专业知识并验证我在云原生技术方面的技能。获得这些认证不仅增强了我的职业前景，而且激发了我持续学习和掌握变革性技术的热情。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;这些证书对您的职业生涯有何帮助？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt; Kubernetes 认证验证了我的专业知识、开辟了新的工作机会并扩展了我的技能组合，极大地促进了我的职业生涯。他们提高了我解决问题的能力，并将我与充满活力的专业网络联系起来。总的来说，它们对推动我在云原生技术领域的职业生涯发挥了重要作用。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;您为想要使用 k8s 的人推荐了哪些其他书籍/网站/课程？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;以下是我推荐的一些用于入门和了解更多信息的资源：&lt;/p&gt;&lt;p&gt;图书：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; 《Kubernetes Up &amp;amp; Running》作者：Kelsey Hightower、Brendan Burns 和 Joe Beda：这本书全面介绍了 Kubernetes 概念、架构和实际用例。&lt;/li&gt;&lt;li&gt; Nigel Poulton 所著的《The Kubernetes Book》：一本涵盖 Kubernetes 基础知识、部署和操作的易于理解的指南，适合初学者和经验丰富的从业者。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在线课程：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; Kubernetes.io 上的 Kubernetes 基础知识：本免费课程涵盖 Kubernetes 的基础知识，包括安装、架构和核心概念。&lt;/li&gt;&lt;li&gt; Pluralsight 上的 Kubernetes 开发人员：专注于 Kubernetes 部署、管理和应用程序开发的中级课程。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;网站：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; Kubernetes 文档 (kubernetes.io)：官方文档提供了用于学习 Kubernetes 概念和最佳实践的全面指南、教程和参考。&lt;/li&gt;&lt;li&gt; &lt;a href="https://www.cncf.io/training/courses/?_sft_lf-project=kubernetes"&gt;CNCF 培训：&lt;/a&gt;云原生计算基金会 (CNCF) 提供各种培训资源，包括研讨会、网络研讨会和交互式实验室，涵盖 Kubernetes 和相关技术。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;动手实验室：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; KillerCoda：一个交互式学习平台，提供 Kubernetes 实践实验室，允许用户在沙盒环境中练习部署、管理 Kubernetes 集群并排除故障。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;你在空闲时间做什么？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在空闲时间，我一头扎进不断发展的技术世界，热切地探索最新的进步并尝试新的工具和功能。&lt;/p&gt;&lt;p&gt;与行业脉搏保持联系对我来说是一种乐趣。我通过阅读技术博客、收听富有洞察力的播客以及在论坛和社交媒体上与其他开发人员进行热烈讨论来保持自己的最新状态。&lt;/p&gt;&lt;p&gt;但生活不仅仅只有屏幕和键盘！我在户外的简单乐趣中找到了巨大的乐趣。无论是在美丽的大自然中徒步旅行，沿着风景优美的路线骑自行车，还是只是在公园的宁静中沐浴，我都珍惜与周围世界联系的时刻。&lt;/p&gt;&lt;p&gt;对我来说，在对技术的热情和户外活动的恢复活力之间找到和谐至关重要。正是这种平衡激发了我的创造力，并确保了全面而充实的生活方式。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;如您所知，Kubernetes 今年已满 10 岁了，您对 Kubernetes 未来 10 年最兴奋的是什么？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在 Kubernetes 庆祝其非凡的 10 年历程之际，我对这一突破性技术在下一个十年的发展充满了期待。&lt;/p&gt;&lt;p&gt;最让我兴奋的一方面是 Kubernetes 作为容器编排事实上的标准的持续发展。随着它变得更加成熟和强大，我预计 Kubernetes 在塑造云原生计算的未来方面将发挥越来越核心的作用。&lt;/p&gt;&lt;p&gt;此外，我渴望见证 Kubernetes 在传统 IT 领域之外的扩散。&lt;/p&gt;&lt;p&gt;此外，我预计随着新工具、技术和最佳实践的出现，Kubernetes 生态系统将取得重大进步，进一步简化和增强容器化应用程序的部署和管理。&lt;/p&gt;&lt;p&gt;此外，我对 Kubernetes 在机器学习、人工智能和数据分析等领域推动下一波创新浪潮中所发挥的作用感到兴奋。通过提供一个可扩展且灵活的平台来运行这些工作负载，Kubernetes 将使组织能够释放有价值的见解并推动变革。&lt;/p&gt;&lt;p&gt;总体而言，我相信 Kubernetes 将继续走在云原生革命的最前沿，为世界各地的组织开创敏捷性、可扩展性和效率的新时代。未来十年将是一段激动人心的创新和发现之旅，我迫不及待地想成为其中的一部分。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;您会对刚刚开始 K8s 认证之旅的人说些什么？有什么提示或技巧吗？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;对于任何踏上 Kubernetes 认证之旅的人来说，请记住以下一些提示：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;掌握基础知识&lt;/strong&gt;：深入了解 Kubernetes 核心概念，例如 Pod、部署和服务。它们是您旅程的基石。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;亲自动手&lt;/strong&gt;：卷起袖子，动手实践！设置您自己的集群、部署应用程序，并让自己沉浸在 Kubernetes 的现实挑战中。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;探索文档&lt;/strong&gt;：使用 Kubernetes 官方文档进行深入学习。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;社区连接&lt;/strong&gt;：融入广泛的 Kubernetes 社区。寻求建议、分享经验并享受与其他爱好者的友情。在一起，我们更强大！&lt;/li&gt;&lt;li&gt;&lt;strong&gt;掌握脉搏&lt;/strong&gt;：掌握 Kubernetes 的脉搏。关注最新活动，收听富有洞察力的播客，并通过最新更新保持领先地位。旅程在不断发展，你也是！&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;如今，云原生生态系统的意义远不止 Kubernetes。您是否计划获得 CNCF 的其他云原生认证？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;是的，我正在考虑&lt;a href="https://www.cncf.io/training/certification/pca/"&gt;Prometheus&lt;/a&gt; 、 &lt;a href="https://www.cncf.io/training/certification/ica/"&gt;Istio&lt;/a&gt; 、 &lt;a href="https://www.cncf.io/training/certification/cca/"&gt;Cilium&lt;/a&gt; 、 &lt;a href="https://www.cncf.io/training/certification/cgoa/"&gt;GitOps&lt;/a&gt;和&lt;a href="https://www.cncf.io/training/certification/capa/"&gt;Argo&lt;/a&gt;的认证。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;您是如何涉足云原生和 Kubernetes 的？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我对云原生技术和 Kubernetes 的着迷始于在快速发展的 IT 环境中对知识和创新的追求。出于对容器化和编排前景的兴趣，我踏上了探索云原生架构变革潜力的旅程。&lt;/p&gt;&lt;p&gt;在我的技术之旅中，我发现自己被充满活力的 Kubernetes 社区所吸引。我与其他爱好者一起参与论坛、聚会，并为开源项目做出了贡献。社区的协作精神激励我分享知识、寻求指导并拥抱持续学习。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;还有其他想法吗？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt; CNCF 社区始终如一地提供出色的工作，促进云原生领域的创新和协作。他们的活动提供了宝贵的学习和交流机会，汇聚了来自世界各地的行业专家和爱好者。通过 KubeCon 和 CloudNativeCon 等举措，CNCF 社区展示了云原生技术的最新进展和最佳实践，激励开发人员突破可能的界限。凭借多样化的项目和充满活力的生态系统，CNCF 继续引领塑造云原生计算的未来。&lt;/p&gt;&lt;p&gt;如果您想成为像 Khushboo 一样的 Kubestronaut，请在&lt;a href="https://www.cncf.io/training/kubestronaut/"&gt;CNCF Kubestronaut&lt;/a&gt;页面上获取更多详细信息。 &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Thu, 06 Jun 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/06/07/kubestronaut-in-orbit-khushboo-khatter/</guid></item><item><title>【An improved OpenTelemetry continuous profiling agent】</title><link>https://www.cncf.io/blog/2024/06/07/an-improved-opentelemetry-continuous-profiling-agent/</link><description>&lt;p&gt;&lt;em&gt;Elastic 的 Abhishek Singh、Christos Kalkanis、Alexander Wert 和 Bahubali Shetti 发表的会员博客文章&lt;/em&gt;&lt;/p&gt;&lt;p&gt;2023 年 3 月，OpenTelemetry 通过合并分析数据模型 OTEP 并致力于稳定的规范和实现，朝着这一目标迈出了一大步。今天，通过&lt;a href="https://www.elastic.co/observability-labs/blog/elastic-donation-proposal-to-contribute-profiling-agent-to-opentelemetry"&gt;Elastic 的连续分析代理&lt;/a&gt;的捐赠，OpenTelemetry 分析在将分析作为 OpenTelemetry 中的第四个遥测信号方面又迈出了一大步。 SRE 现在可以从这些功能中受益：快速识别性能瓶颈、最大限度地提高资源利用率、减少碳足迹以及优化云支出。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;什么是连续分析？&lt;/h2&gt;&lt;p&gt;分析是一种通过收集有关软件应用程序执行的信息来了解软件应用程序行为的技术。这包括跟踪函数调用的持续时间、内存使用情况、CPU 使用情况和其他系统资源。&lt;/p&gt;&lt;p&gt;然而，传统的分析解决方案具有显着的缺点，限制了在生产环境中的采用：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;代码检测导致显着的成本和性能开销&lt;/li&gt;&lt;li&gt;中断服务重新启动&lt;/li&gt;&lt;li&gt;无法了解第三方库&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;与通常仅在特定开发阶段或受控测试条件下完成的传统分析不同，连续分析在后台运行，开销最小。这提供了实时、可操作的见解，而无需在单独的环境中复制问题。 SRE、DevOps 和开发人员可以了解代码如何影响性能和成本，从而更轻松地改进代码和基础设施。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;生产级功能的贡献&lt;/h2&gt;&lt;p&gt;Elastic 的持续分析代理&lt;a href="https://ebpf.io/"&gt;基于 eBPF&lt;/a&gt; ，是一个始终在线的完整系统解决方案，可观察代码和第三方库、内核操作以及您不拥有的其他代码。它消除了对代码插装（运行时/字节码）、重新编译或服务重新启动的需要，并且生产环境中的开销、CPU (~1%) 和内存使用率较低。&lt;/p&gt;&lt;p&gt;分析代理有助于识别非最佳代码路径，发现“未知的未知因素”，并提供对所有应用程序的运行时行为的全面可见性。 Elastic 的连续分析代理提供对各种运行时和语言的支持，例如 C/C++、Rust、Zig、Go、Java、Python、Ruby、PHP、Node.js、V8、Perl 和 .NET。&lt;/p&gt;&lt;p&gt;此外，组织可以通过最大限度地减少计算浪费来实现可持续发展目标，确保与其战略&lt;a href="https://en.wikipedia.org/wiki/Environmental,_social,_and_corporate_governance"&gt;ESG&lt;/a&gt;目标无缝衔接。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;对 OpenTelemetry 社区的好处&lt;/h2&gt;&lt;p&gt;这一贡献促进了可观察性连续分析的标准化，并加速了分析作为 OTel 中第四个关键信号的实际采用。客户现在可以使用与供应商无关的方法来收集分析数据并实现与现有信号（例如跟踪、指标和日志）的关联。&lt;/p&gt;&lt;p&gt;基于 OTel 的连续分析为用户带来了以下可能性：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;改善客户体验：通过持续分析提供一致的服务质量和性能，确保客户拥有性能最佳、保持响应且可靠的应用程序。&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;毛利率最大化：企业可以通过减少运行应用程序所需的计算资源来优化其云支出并提高盈利能力。整个系统的持续分析是在可能跨越多个云提供商的不同环境中识别最昂贵的功能（精确到代码行）的一种方法。在云环境中，节省的每个 CPU 周期都意味着节省资金。&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;最大限度地减少对环境的影响：与计算相关的能源消耗日益受到关注（来源：&lt;a href="https://energy.mit.edu/news/energy-efficient-computing/"&gt;麻省理工学院能源倡议&lt;/a&gt;）。更高效的代码意味着更低的能源消耗，有助于减少碳 (CO2) 足迹。&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;加速工程工作流程：持续分析提供详细的见解，帮助更快地解决复杂问题、指导开发并提高整体代码质量。&lt;/li&gt;&lt;li&gt;改善供应商中立性并提高效率：基于 OTel eBPF 的分析代理无需使用专有的 APM 代理，并提供更有效的方式来收集分析遥测数据。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;凭借这些优势，客户现在可以在云上管理整个应用程序的效率，同时确保其工程团队对其进行优化。&lt;/p&gt;&lt;p&gt;展望未来，Elastic 将继续与 OTel Profiling 和 Collector SIG 密切合作，以确保分析代理在更广泛的 OTel 生态系统中无缝集成。 &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Thu, 06 Jun 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/06/07/an-improved-opentelemetry-continuous-profiling-agent/</guid></item><item><title>【Generative AI for Kubernetes: meet K8sGPT open source project】</title><link>https://www.cncf.io/blog/2024/06/07/generative-ai-for-kubernetes-meet-k8sgpt-open-source-project/</link><description>&lt;p&gt;&lt;em&gt;大使帖子最初由 Dotan Horovits 发布在&lt;a href="https://logz.io/blog/k8sgpt-generative-ai-for-kubernetes/?utm_medium=referral&amp;amp;utm_source=cncf"&gt;Logz.io 博客&lt;/a&gt;上&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Kubernetes 环境中的故障​​排除可能是一项艰巨的任务。如果我们能有一个神奇的人工智能顾问，它可以收集有关系统运行情况的所有数据，并告诉我出了什么问题，甚至如何解决它。这不是很好吗？&lt;/p&gt;&lt;p&gt; K8sGPT 是一个年轻的开源项目，它使用生成式 AI 为每个人赋予 Kubernetes 超能力。它最近刚刚成立一年，现在是&lt;a href="https://logz.io/blog/fireside-chat-with-cncf-cto-opentelemetry-more/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;云原生计算基金会&lt;/a&gt;(CNCF) 的一部分。&lt;/p&gt;&lt;p&gt;这个开源项目是否超越了 Gen AI 的炒作，让我们更接近用简单的英语诊断和分类问题？我在最近一集的 OpenObservability Talks 中与 K8sGPT 的核心维护者、CNCF 大使&lt;a href="https://www.linkedin.com/in/ACoAACkX6_kBZph6m08Zz9rFg0IQ_TAzfDXaDoQ?lipi=urn%3Ali%3Apage%3Ad_flagship3_search_srp_content%3BLLn8zWFpSY6vHih3dyHHgA%3D%3D" rel="noreferrer noopener" target="_blank"&gt;Thomas Schuetz&lt;/a&gt;坐在一起，聆听了所有相关内容。 Thomas 也是 Kapsch TrafficCom AG 的首席云架构师，并在奥地利应用科学大学任教，专注于云原生技术。 &lt;/p&gt;&lt;h2 class="wp-block-heading" id="m_8811500558216708561gmail-the-promise-of-generative-al-for-kubernetes"&gt;生成式 AI 对 Kubernetes 的承诺&lt;/h2&gt;&lt;p&gt;&lt;a href="https://logz.io/blog/completing-kubernetes-monitoring-puzzle/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;Kubernetes 管理员面临的挑战&lt;/a&gt;是多方面的，而且经常反复出现。简单的错误配置（例如缺少服务帐户或没有端点的服务）可能会导致部署失败，这可能是 DevOps 和 SRE 的噩梦。&lt;/p&gt;&lt;p&gt;传统上，SRE 会手动搜索日志、事件和配置文件，试图找出问题的根本原因。然而，这个过程可能非常耗时且容易出错，通常会导致解决延迟和运营中断。这些痛苦促使 Alex Jones 创建了 K8sGPT，后来 Thomas 加入作为第二个维护者。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="m_8811500558216708561gmail-how-k8sgpt-works"&gt; K8sGPT 的工作原理&lt;/h2&gt;&lt;p&gt;&lt;a href="https://k8sgpt.ai/" rel="noreferrer noopener" target="_blank"&gt;K8sGPT&lt;/a&gt;的功能非常类似于经验丰富的 SRE，持续监控 Kubernetes 集群是否存在异常和问题。它分析相关数据，识别潜在问题，并利用外部人工智能引擎提供见解和建议。&lt;/p&gt;&lt;p&gt;该旅程从数据收集开始，K8sGPT 有选择地从 Kubernetes 集群收集相关信息。与误解相反，K8sGPT 不会不加区别地向 AI 提供商提供原始集群数据。相反，它采用有针对性的方法，过滤掉无关信息并对收集的数据进行匿名化以保护隐私和安全。&lt;/p&gt;&lt;p&gt;一旦收集到相关数据，K8sGPT 就会利用人工智能算法来分析和解释信息，这与 SRE 的方式非常相似。例如，它会识别 Pod 未运行等问题，并检查事件流是否存在潜在原因，例如缺少服务帐户的副本集。有了这个，就可以提示生成人工智能模型来解释问题。&lt;/p&gt;&lt;p&gt;有时，这些见解甚至会让经验丰富的 SRE 感到惊讶，例如 Alex 和 Thomas 自己：“有一次，我们为某些资源编写了一个分析器，Alex 运行它并说是的，这不可能是正确的，但最终它是正确的。”&lt;/p&gt;&lt;h2 class="wp-block-heading" id="m_8811500558216708561gmail-bring-your-own-gen-al-provider"&gt;带来您自己的新一代人工智能提供商&lt;/h2&gt;&lt;p&gt;K8sGPT 连接到各种 AI 提供商进行分析。目前，K8s 提供与 OpenAI、Azure、Cohere、Amazon Bedrock、Amazon Sagemaker、Google Gemini 和 Vertex 的开箱即用集成。&lt;/p&gt;&lt;p&gt;需要强调的是，在发送提示之前，K8sGPT 首先会对 Pod 名称等信息进行匿名处理。 K8sGPT 还可以连接到本地模型，这对于无法将信息发送给外部提供商的组织非常有用。&lt;/p&gt;&lt;p&gt; K8sGPT 功能的关键在于它能够生成描述性问题摘要和实用的解决方案。 Thomas 强调了该项目的重点如何超越基本的问题场景，发展到涵盖各种问题，包括外部集成。&lt;/p&gt;&lt;p&gt; K8sGPT 最初是一个 CLI，被触发以一次性方式提供这些诊断。然后，该项目演变成一个自动化的 SRE 助手，添加了一个在集群中运行的 Kubernetes Operator，它不断地查找问题并将其打印到资源中。&lt;br /&gt;持续监督不仅可以避免管理员在出现问题时调用 CLI，还可以在管理员或最终用户注意到问题之前主动检测情况何时开始变得不正常。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="m_8811500558216708561gmail-growing-excitement-and-adoption"&gt;日益增长的兴奋度和采用率&lt;/h2&gt;&lt;p&gt;K8sGPT 项目的采用突显了其在 Kubernetes 生态系统中日益增长的重要性。 Thomas 分享了该项目在发布一两周后如何在&lt;a href="https://github.com/k8sgpt-ai/k8sgpt" rel="noreferrer noopener" target="_blank"&gt;GitHub 存储库&lt;/a&gt;上获得了大约 1,000 个 star，并且该项目的第一个 fork 在发布后的第一天就完成了。迄今为止，该项目已经拥有约 5,000 个 GitHub star 和 500 多个分支。&lt;/p&gt;&lt;p&gt;除了星级排名之外，Kubermatic、SpectroCloud 和 Nethopper 等公司还热情地采用了 K8sGPT 功能，将其集成到其基础设施中以简化故障排除流程。 Thomas 呼吁其他采用者伸出援手并分享他们的用例，以便项目维护人员可以根据使用情况更好地引导项目，并支持其在 CNCF 内的成熟。&lt;/p&gt;&lt;p&gt;维护团队也得到了很好的成长。 Thomas 表示，该项目现在有 30 到 40 名贡献者。他还强调，与许多热门项目不同，这个项目背后没有公司，也没有商业计划。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="m_8811500558216708561gmail-k8sgpt-joins-the-cncf-sandbox"&gt; K8sGPT 加入 CNCF 沙箱&lt;/h2&gt;&lt;p&gt;K8sGPT 刚刚成立一周年，标志着一段重要的创新和成长之旅。 K8sGPT 最近被 CNCF 沙箱接受，标志着这一旅程的高潮。这一里程碑不仅验证了该项目的技术实力，还为更大程度的协作和采用打开了大门。&lt;/p&gt;&lt;p&gt;托马斯分享了一个有趣的项目路线图。主要重点放在与亚马逊、谷歌等云提供商基础设施的集成上，以更多地发现基础设施层面的问题。他还列出了扫描 CRD 以及与 AI 领域其他工具的集成。&lt;/p&gt;&lt;p&gt;虽然目前与 Slack 集成以发送下游通知，但 Thomas 提到正在考虑与 MS Teams 和 Mattermost 等其他目标集成。&lt;/p&gt;&lt;p&gt;想了解更多吗？查看我的 OpenObservability Talks 播客剧集： &lt;a href="https://podcasters.spotify.com/pod/show/openobservability/episodes/KubeCon-Paris-Highlights-and-AI-Spotlight-on-K8sGPT---OpenObservability-Talks-S4E11-e2ickaj" rel="noreferrer noopener" target="_blank"&gt;&lt;em&gt;KubeCon Paris 亮点和 K8sgpt 上的 AI 聚焦&lt;/em&gt;&lt;/a&gt;。 &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Thu, 06 Jun 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/06/07/generative-ai-for-kubernetes-meet-k8sgpt-open-source-project/</guid></item><item><title>【The voice of Kubernetes experts report 2024: the data trends driving the future of the enterprise】</title><link>https://www.cncf.io/blog/2024/06/06/the-voice-of-kubernetes-experts-report-2024-the-data-trends-driving-the-future-of-the-enterprise/</link><description>&lt;p&gt;&lt;em&gt;客座文章，作者：Rajiv Thakkar，Pure Storage Portworx 产品营销总监 ( &lt;a href="https://www.linkedin.com/in/rajivthakkar1984?utm_source=share&amp;amp;utm_campaign=share_via&amp;amp;utm_content=profile&amp;amp;utm_medium=ios_app"&gt;LinkedIn&lt;/a&gt; )&lt;/em&gt;&lt;/p&gt;&lt;p&gt;今天，6 月 6 日，是 Kubernetes 诞生 10 周年。 Kubernetes 最初是 Google 的一个项目，并于 2014 年 6 月作为开源发布。在过去 10 年里，它已成为容器编排事实上的标准，被世界各地的开发人员和组织用于现代应用程序开发。&lt;/p&gt;&lt;p&gt; Portworx by Pure Storage 与第三方研究公司 Dimensional Research 合作，对拥有 500 名或以上员工的公司的 500 多名在 Kubernetes 上运行数据的参与者进行了调查。调查参与者分布在不同的工作职能中，从平台工程师到副总裁或高管级别的高级管理人员。 56% 的受访者可以被归类为拥有 4 年或以上 Kubernetes 经验的专家，而绝大多数 (91%) 拥有至少两年的经验。&lt;/p&gt;&lt;p&gt;该报告将揭示专家在虚拟化和持久存储方面的一些首要任务，以及平台工程师在管理通常跨越混合和多云环境以及虚拟机和容器环境的复杂 Kubernetes 环境时面临的数据管理挑战。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;&lt;strong&gt;云原生平台是未来的平台&lt;/strong&gt;&lt;/h2&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="条形图显示了受访者如何描述其公司当前总体应用程序足迹的调查结果，36% 的受访者回答“大多数应用程序是云原生的，但有些是传统的”。对于“您如何描述公司未来五年对新应用程序的投资计划”这一问题，53% 的受访者回答“大多数新应用程序将是云原生的，但有些是传统的”" class="wp-image-112541" height="479" src="https://www.cncf.io/wp-content/uploads/2024/06/unnamed-7.jpg" width="1329" /&gt;&lt;/figure&gt;&lt;p&gt;专家表示：云原生平台将主导未来。在已经采用 Kubernetes 的组织中，41% 已经在云原生平台上构建大部分新应用程序。未来五年，这个数字将翻倍，其中 80% 计划在云原生上构建大部分新应用程序。&lt;/p&gt;&lt;p&gt;显而易见的是，Kubernetes 不再仅仅是一项新兴技术。那些在 Kubernetes 上运行数据的人比以往任何时候都更加信任它可以托管数据库、实时分析和 AI/ML 工作负载等关键任务应用程序。这些关键工作负载的不断出现意味着它们的云原生数据平台需要能够提供企业级功能，以便这些应用程序高效、安全地运行。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;&lt;strong&gt;平台工程的重要性与日俱增&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;在这些云原生平台的发展方面，平台工程团队处于主导地位。在接受调查的 527 名参与者中，96% 的人表示他们的组织拥有平台工程职能。&lt;/p&gt;&lt;p&gt;这些团队是推动云原生成功的关键部分，高管们对他们的价值并不陌生。与其他职能部门相比，高管将向平台工程的转变视为晋升的可能性高出 1.8 倍，他们愿意投入时间和资源来提高现有员工的技能 (63%)、与顾问合作 (59%) 以及招聘技术人员工程师（52%）来支持这一日益重要的功能。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;&lt;strong&gt;报告要点&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;这些只是报告中的几个主要亮点。 Kubernetes 专家关于企业数据趋势的其他一些重要观点是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;传统虚拟机基础设施正处于拐点：&lt;/strong&gt; 58% 将使用 KubeVirt 等技术将部分虚拟机迁移到 Kubernetes 管理。在这些组织中，65% 计划在未来两年内迁移其虚拟机，这表明了紧迫性。&lt;/li&gt;&lt;li&gt; &lt;strong&gt;Kubernetes 上的数据加速了应用程序交付：&lt;/strong&gt;几乎所有 (98%) 的受访者都在云原生平台上运行数据密集型工作负载，其中包括数据库 (72%)、分析 (67%) 和 AI/ML 工作负载 (54%) 等关键应用程序）基于 Kubernetes 构建。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;请在此处阅读报告全文： &lt;a href="https://portworx.com/resources/voice-of-kubernetes-expert-report/"&gt;2024 年 Kubernetes 专家之声：推动企业未来的顶级数据趋势&lt;/a&gt;，并了解在 Kubernetes 之旅中走得更远的引领趋势的组织如何规划云原生的未来。 &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Wed, 05 Jun 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/06/06/the-voice-of-kubernetes-experts-report-2024-the-data-trends-driving-the-future-of-the-enterprise/</guid></item><item><title>【Unveiling the 10-Year Kubernetes anniversary logo】</title><link>https://www.cncf.io/blog/2024/06/06/unveiling-the-10-year-kubernetes-anniversary-logo/</link><description>&lt;h3 class="wp-block-heading"&gt;&lt;em&gt;恭喜 Cristher Castro 和 Cuemby 设计获奖标志&lt;/em&gt;&lt;/h3&gt;&lt;p&gt;在庆祝首次 Kubernetes &lt;a href="https://github.com/kubernetes/kubernetes/commit/2c4b3a562ce34cddc3f8218a2c4d11c7310e6d56"&gt;提交&lt;/a&gt;周年纪念日之际，我们很高兴地宣布 Kubernetes 10 周年徽标设计大赛获胜者并揭晓获奖设计。获胜标志是由 Cristher Castro 和她在 Cuemby 的团队设计的。这个特殊徽标将标志着 Kubernetes 项目的一个重要里程碑，并庆祝十年来的创新、协作和云原生开发的巨大变化。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="Kubernetes 十周年徽标" class="wp-image-112539" height="1600" src="https://www.cncf.io/wp-content/uploads/2024/06/image-11.jpeg" width="1002" /&gt;&lt;/figure&gt;&lt;p&gt;我们采访了 Cristher，详细了解了设计背后的灵感、她对云原生社区的参与以及她对 Kubernetes 下一个十年的期望。&lt;/p&gt;&lt;p&gt; &lt;strong&gt;CNCF：是什么促使您参加 Kubernetes 10 周年徽标竞赛？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt; Cristher：这次比赛对于我和我在 Cuemby 的团队来说是一个独特的机会，可以为社区做出创造性的贡献。作为一名非技术人员，我将 Kubernetes 视为一个能够帮助其他项目成长的生态系统，就像社区一样。蛋糕象征着运行在服务器上的容器，这是 Kubernetes 的基础，编排创建分布式系统，同时代表共享和庆祝，这与 Kubernetes 以简单而强大的方式编排解决方案的角色相一致。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;您加入云原生社区多久了？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;自 2018 年我们在麦德林开设聚会章节以来，我一直是这个美丽社区的一员。从那时起，我们公司于 2019 年以银牌会员身份加入 CNCF。从那时起，我一直支持新兴社区和聚会，重点关注信息的可访问性并弥合专家和初学者之间的差距。我的参与更多的是后勤和操作，但每个角色在社区中都很重要。这段旅程使我成为一名大使，塑造了我的个人和职业发展，并激励我做得更多。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;您最喜欢这个社区的哪一部分？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这是跨不同技能组合的归属感和协作感。这个社区的美妙之处在于您不必成为技术专家即可做出贡献。每个人，无论其背景如何，都受到欢迎。从贡献者到维护者，从主要聚会组织者到志愿者，从软件工程师学生到公司和大学，每个人都会产生影响。新的贡献者学习如何成为开源技术的一部分，加入一项为云原生社区提供无限增长机会的运动。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;您有最喜欢的 Kubernetes 时刻或故事吗？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我最喜欢的时刻是在芝加哥举行的 2023 年 KubeCon + CloudNativeCon 北美大会上，我被任命为大使。更重要的是，不断壮大的拉丁美洲社区有机会走到一起。我们分享了我们的故事，交换了想法，并建立了联系，这些联系不断加强我们今天的社区。在图中，我们是大约 30 个 LATAM 社区组织者，包括 KCD 组织者、贡献者、维护者和爱好者，他们以某种方式支持 Kubernetes 社区并创造采用云原生技术的方法。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;有什么事情让你开怀大笑或为你所做的工作感到自豪吗？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在拉丁美洲举办首届现场 KCD 感觉不可能，但我们成功了。从那时起，拉丁美洲社区变得更加强大。我很高兴 CNCF 宣布该地区首个 KubeDay 将于 2024 年 10 月 9 日在哥伦比亚麦德林举行。我对整个社区的努力感到自豪和感激。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;未来几年，您对 Kubernetes 的哪些方面感到兴奋？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我对 Kubernetes 的快速扩张及其背后强大的支持社区感到兴奋。这些技术在新兴地区的日益采用和积极贡献将对专业人士和企业产生深远的影响。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;恭喜！&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;获奖徽标由 Kubernetes 专家和设计专业人士组成的小组选出，其中包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; Tim Hockin，Google Cloud 杰出软件工程师和 Kubernetes 原始徽标的设计者&lt;/li&gt;&lt;li&gt;Chris Aniszczyk，云原生计算基金会首席技术官&lt;/li&gt;&lt;li&gt;Karen Chu，Fermyon 社区负责人，Phippy 角色设计师&lt;/li&gt;&lt;li&gt;Ashley Willis，GitHub 开发者关系总监，Kubernetes 5 周年纪念徽标设计师&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;根据创意、与主题的相关性和视觉吸引力对提交的作品进行评估。虽然我们收到了 30 多份提交的作品，但获胜的设计因其对细节的关注而脱颖而出，并捕捉到了 KuberTENes 生日活动的场景。祝贺 Cristher 和 Cuemby 团队，并非常感谢所有花时间提交的人。我们对这个社区在过去十年中所取得的成就总是感到惊讶，提交的作品的创造力和深思熟虑也反映了这一点。&lt;/p&gt;&lt;p&gt;喜欢这个设计吗？ CNCF 商店有售一款带有该徽标的特殊 Kubernetes 生日 T 恤； &lt;a href="https://store.cncf.io/collections/kubernetes-10-year-birthday-tee?ls=CZozNfa7_HqFNQVmsfCZv"&gt;立即订购&lt;/a&gt;！&lt;/p&gt;&lt;p&gt;&lt;strong&gt;快来参加庆祝活动吧！&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;官方&lt;a href="https://events.linuxfoundation.org/kuber10es-birthday-bash/"&gt;KuberTENes 生日庆典&lt;/a&gt;将于 6 月 6 日在加利福尼亚州山景城举行。注册获取免费门票，并加入我们参加一个晚上的演讲和小组讨论，其中包括早期 Kubernetes 贡献者和使该项目成为可能的隐藏人物。不在湾区或无法到达？在您所在的地区与您的社区一起庆祝！超过 40 个云原生社区团体将在全球各地举办聚会。请参阅&lt;a href="https://www.cncf.io/kubertenes/"&gt;此处&lt;/a&gt;查看完整列表。我们还将在&lt;a href="https://www.youtube.com/@cncf/streams"&gt;CNCF YouTube 频道&lt;/a&gt;上对湾区活动进行&lt;a href="https://www.youtube.com/live/jYjEWlnY25M"&gt;现场直播&lt;/a&gt;和视频重播。&lt;/p&gt;&lt;p&gt;并参加盐湖城最大的 Kubernetes 爱好者聚会&lt;a href="https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/"&gt;KubeCon + CloudNativeCon North America&lt;/a&gt; ，我们计划在那里继续举办 10 周年庆祝活动。 &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Wed, 05 Jun 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/06/06/unveiling-the-10-year-kubernetes-anniversary-logo/</guid></item></channel></rss>