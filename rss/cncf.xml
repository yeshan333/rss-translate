<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>CNCF - 博客</title><link>https://www.cncf.io/blog/</link><description>CNCF - 博客 - 由 RSSHub 用爱制作(https://github.com/DIYgod/RSSHub)</description><lastBuildDate>Tue, 28 May 2024 16:04:14 GMT</lastBuildDate><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>【Reflecting on the success of Kubernetes Community Days Islamabad 2024】反思 2024 年伊斯兰堡 Kubernetes 社区日的成功</title><link>https://www.cncf.io/blog/2024/05/28/reflecting-on-the-success-of-kubernetes-community-days-islamabad-2024/</link><description>&lt;p&gt;&lt;em&gt;CNCF 大使 Saim Safdar 发布的 KCD 帖子&lt;/em&gt;&lt;/p&gt;&lt;p&gt;2020 年 8 月，我踏上了建立&lt;a href="https://www.youtube.com/@CloudNativeIslamabad"&gt;Cloud Native Islamabad 的&lt;/a&gt;旅程，其愿景是培育当地社区、促进知识共享并弥合国际和当地社区之间的差距，以支持开源的可持续性。认识到 CNCF 等基金会在推动开源创新方面的关键作用，我决心创建一个平台，不仅培养本地人才，还提供与全球基金会合作的机会。&lt;/p&gt;&lt;p&gt;在我们的旅程中，我们在伊斯兰堡云原生上举办了 45 场网络研讨会，深入研究了 CNCF 领域的 23 个著名开源项目。召开会议的想法已经在我们脑海中酝酿了一段时间。这次聚会的重点是分享知识、庆祝成功故事以及促进伊斯兰堡社区内外的联系。由此，KCD 伊斯兰堡诞生了。&lt;/p&gt;&lt;p&gt; &lt;strong&gt;KCD 巴基斯坦落成典礼&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;2023 年 2 月，我们将愿望更进一步，在巴基斯坦举办了首届 KCD 活动。反响热烈，激发了我们追求更高目标、实现更大梦想的决心。现在，当我们开始第二次年度活动时，我很高兴看到我们的愿景得以实现。让我们倒转时钟，重温旅程的兴奋。&lt;/p&gt;&lt;p&gt; &lt;strong&gt;KCD – 为当地社区提供类似 KubeCon 的体验&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;大力赞扬&lt;a href="https://www.linkedin.com/in/audramontenegro/"&gt;Audra Montenegro&lt;/a&gt;致力于培育技术社区，并帮助我们解决像 KCD 那样的开源创新所需的所有附加功能。在 Audra 和全球所有组织者的承诺和辛勤工作下，KCD 计划从 2022 年到 2023 年增长了 100%，仅去年一年就有 32 个全球 KCD，目标是将 KubeCon 体验带到当地社区。&lt;/p&gt;&lt;p&gt; &lt;strong&gt;KCD 伊斯兰堡得到企业和当地社区的大力支持&lt;/strong&gt;&lt;/p&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="图像" src="https://lh7-us.googleusercontent.com/vhZLvVahUJaQEAwVflytMFizqIFVGGYqlyeID86lWBbni72S1UiilkgBEdciqeFXWYd7SY3Kwh7uu8sR15C9OYccCAWv5VIs-6O3uTOkBJQO1Qfm-AFB8a73HjU0I26o73e8mJ51vnaVlFAoW5QWGOY" /&gt;&lt;/figure&gt;&lt;p&gt;伊斯兰堡 Kubernetes 社区日 (KCD) 最近于&lt;a href="https://www.linkedin.com/feed/update/urn:li:activity:7193552660963192832"&gt;5 月 3 日在 System Limited 亚马逊办事处&lt;/a&gt;结束了第二届年度活动，聚集了对云原生技术充满热情的开发人员、平台工程师和 IT 专业人士。这一社区驱动的活动得到了云原生计算基金会 (CNCF) 的支持，成为分享见解和探索云原生生态系统中最新创新和趋势的平台。&lt;/p&gt;&lt;p&gt;感谢&lt;a href="https://www.systemsltd.com/"&gt;System Limited&lt;/a&gt; 、 &lt;a href="http://clouddev.tech/"&gt;Cloud Dev&lt;/a&gt; 、华为、 &lt;a href="https://owb.com.pk/"&gt;Open Ware Business&lt;/a&gt; 、 &lt;a href="https://community.cncf.io/islamabad/"&gt;Cloud Native Islamabad&lt;/a&gt; 、&lt;a href="https://osfp.org.pk/"&gt;巴基斯坦开源基金会&lt;/a&gt;、 &lt;a href="https://kube.careers/"&gt;Kube Career&lt;/a&gt; 、 &lt;a href="https://kube.events/"&gt;Kube Events&lt;/a&gt;和&lt;a href="https://www.youtube.com/@cloudnativefm"&gt;Cloud Native Podcast&lt;/a&gt;等赞助商的慷慨支持，本次活动拥有多元化的会议和演讲嘉宾阵容。&lt;/p&gt;&lt;p&gt; &lt;strong&gt;Action Pack KCD 伊斯兰堡演讲者阵容&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;活动在巴特·法雷尔 (Bart Farrell) 和科特尼·尼克森 (Cortney Nickerson) 的热烈欢迎和开幕致辞中拉开帷幕，为一天充满启发性的讨论和演讲奠定了基础。 Paula Kennedy 题为“平台即产品：我们已经接近实现了吗”的主题演讲吸引了观众，并强调，随着组织越来越多地采用云原生技术，平台即产品的概念变得越来越重要。通过专注于为内部和外部客户提供价值，平台团队可以推动创新并加速数字化转型计划。然而，平台成熟之路仍在继续，仍然存在需要克服的障碍。平台即产品强调了拥抱产品思维和迭代完善平台产品以满足用户不断变化的需求的重要性。从建立明确的所有权和治理结构到培育协作和反馈文化，有许多因素有助于平台计划的成功。&lt;/p&gt;&lt;p&gt;与会者参加了由 Viktor Farcic 主持的各种内容丰富的演讲，涵盖的主题包括使用 Knative、Crossplane、Dapr 和 KEDA 在 Kubernetes 上实现无服务器。 &lt;strong&gt;Daniel Niasoff&lt;/strong&gt;分享了有关优化私有云基础设施以提高成本效率的宝贵见解。跨集群节点部署 eBPF 程序本身就是一个挑战。 &lt;strong&gt;Qasim Sarfaraz&lt;/strong&gt;分享了使用 eBPF 的超能力调试 Kubernetes 和容器工作负载的提示和技巧。 &lt;strong&gt;Robina Mirbahar 的&lt;/strong&gt;演讲强调了云原生技术之间的紧密集成对于解决共享基础设施和应用程序管理需求的重要性，并强调了利用开源解决方案的灵活性、互操作性和成本效益的优势。&lt;/p&gt;&lt;p&gt; &lt;strong&gt;2024 年开源状况&lt;/strong&gt;&lt;/p&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="图像" src="https://lh7-us.googleusercontent.com/TQpQWKawCxp4C8D0g7OMH9Z1WnEKFAcPCA10lJJC1fQ9WqpGJ0rLHDAWNytY_URL1mKuUOSdCVt7q3WMyYkU29wIkrN5TQqKVExyytd0INguWh7_s5iMI_Pi9R85Neui6x8d4G5UeNb0wbEuvuy5pss" /&gt;&lt;/figure&gt;&lt;p&gt; &lt;strong&gt;Cortney Nickerson&lt;/strong&gt;主持了一场关于 2024 年开源状况的小组讨论，其中包括&lt;strong&gt;Paula Paul&lt;/strong&gt; 、 &lt;strong&gt;Michale Cade&lt;/strong&gt;和&lt;strong&gt;Nancy Chauhan&lt;/strong&gt;等行业知名人士。形势发生了巨大变化，带来了新的机遇和挑战。一项显着的变化是开源许可证的复杂性不断增加，特别是随着供应商引入商业支持模型。虽然这种演变强调了开源项目不断增长的商业可行性，但它也带来了必须小心应对的复杂性。您现在可以 &lt;a href="https://www.youtube.com/watch?v=8kR8acMfqRw&amp;amp;list=PLJX7DTVGo63xA2Is4ZgE0CeKCljM--Z7Y"&gt;在 KCD Islamabad YouTube 频道上&lt;/a&gt;&lt;a href="https://www.youtube.com/watch?v=5P5k2ghlLW4"&gt;收听此演讲&lt;/a&gt;并观看此播放列表中的所有演讲。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;非常感谢您——我们的明星扬声器&lt;/strong&gt;&lt;/p&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="图像" src="https://lh7-us.googleusercontent.com/_8PXSeLSwpewtnLjnxoaL4yhIAsiAiTpXBH9o53T3CBdMltFnKTpzJAYhuQWH0keRO2TlXwCLaAx8n3IDnFele4ZGS0ef1I_uFMpRo8lGolWOzZtlpReTuO_RmtyrA_u99T2e2uNHobY9e8QiWgWoJU" /&gt;&lt;/figure&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="图像" src="https://lh7-us.googleusercontent.com/hIS_WtdZdg7u3E1UzmbNMTciwb3P9f6gCVujIq9V4CbWi3ROqZ3RMg9ssRpeNsN993pKnDU3ta8Y-81fOSo8ohAToM7Th_h7wRmSZHPJvO3jx274jWC23ehoSeTEExhvCyjDQ_ZqzVX78tDxvobO2bI" /&gt;&lt;/figure&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="图像" src="https://lh7-us.googleusercontent.com/Ge3T4nA7bTFPOzm5CImFU61nJyq7pbOdBY7gNR-PVQfQyW47A6odxbUlhzMh_BQOnl7XRApZ83R2OhcnpnGISRPSzYoJgAumHFOjMPgtczN0HAVVQ_YFUmcj1WXI7w-BG9oMIe08icG0sFF-dFDa43w" /&gt;&lt;/figure&gt;&lt;p&gt;这次活动是一个很好的机会，可以向所有与社区慷慨分享知识和见解的演讲者所做出的宝贵贡献表示感谢。特别感谢我们当地的演讲者，包括&lt;strong&gt;Yousuf Jawad、Robina Mirbahar、Saleem Rafik、Tariq Rasheed、Ghazi Salahuddin、Shakeel Ahmed、Aftab Ahmed、Sannan Ahmed&lt;/strong&gt;和&lt;strong&gt;Muhammad Mustafa&lt;/strong&gt; 。我们还要向所有虚拟加入我们的演讲者表示最深切的谢意&lt;strong&gt;：Viktor Farcic、Daniel Niasoff、Qasim Sarfraz、Hamza Rashid、Osama Tahir、Sergio Méndez、Mike Ashley Cedric、Nitish Kumar、Paula Kennedy、Paula Paul、Michael Cade&lt;/strong&gt;和&lt;strong&gt;Nancy Chauhan 。&lt;/strong&gt;与我们的与会者分享他们丰富的经验。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;向 KCD 伊斯兰堡组织者大声喊叫&lt;/strong&gt;&lt;/p&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="图像" src="https://lh7-us.googleusercontent.com/oAuFRzBf0Bjz8seQ6YoZlaPTYK8wIYQJuwxprR01v-4jvvvzMs1vLgarksmmwRWR9ZYIyCWQp-joLOE1HyxFE__zx0hoZrvD9lxB-sWsqJPpPKEnA4EmDSGbX-vyu5EgzBiB_JTtsuPk_W3LdlhHvFs" /&gt;&lt;/figure&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="图像" src="https://lh7-us.googleusercontent.com/KyrKt85gQhkkh7e7meze4Kvb0Wptu8Ei6a_KcU1kh4imqz6Iw0KcNTSy3fuvCfDJasH7q0CT3M75H6e0mp3z0WXNIFtzn3VO89re9OTdGKqvYzFpcEuLdPlrsL5Xgp5O5wuO8UzQOGHF4FSSWmbZke4" /&gt;&lt;/figure&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="图像" src="https://lh7-us.googleusercontent.com/uOM7JDk6jQmMBlLhr9l7BTLoCkhWlTtrkr-ylzvJ52IITqMlDxRKVgKXq0YlXpQ2WvU9ZcIZOWv9T7-YNCrTqiGw1e8R45mhUhy0djDMVKDgRJbmQTabzuMcpG99Tvk9FiErARqwwFmFhl9-eCe7lvs" /&gt;&lt;/figure&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="图像" src="https://lh7-us.googleusercontent.com/f2xvV-RScxaQJ-wK0MCA-pMA7SY6U-DzFBb2BdjTtgoloR6uW49zXVLLe0kUcuLKMb_kTTVXQ5CwEtS7kaTRuBMAU4PqxwKtVOieD-6One5lrb60bXftU5Zkw4xXCdX7Qbz2MUFavS4BXW9Dj9skw0M" /&gt;&lt;/figure&gt;&lt;p&gt;最后但并非最不重要的一点是，我们向当地组织者&lt;strong&gt;Danyal Ejaz、Taskeen Fatima、Hamza Shabbir、Hasnaat Iftikhar、Shaista Aman、Muhammad Farhan Ashraf、Usman Hamid&lt;/strong&gt; &lt;strong&gt;、Babar Zahoor、Ali Abdullah&lt;/strong&gt;和&lt;strong&gt;Abid Zahoor&lt;/strong&gt;表示热烈的掌声，他们的不懈努力和坚定不移的承诺在促成这一巨大成功的过程中发挥了关键作用。从精心策划到无缝执行，您真正做到了超越，确保 KCD 伊斯兰堡为所有人带来难忘的体验。我们还向 CNCF 社区和组织者表示最深切的谢意，他们实际上加入了我们的&lt;strong&gt;Salman Iqbal、Faisal Afzal、Bart Farrel&lt;/strong&gt; l 和&lt;strong&gt;Cortney Nickerson&lt;/strong&gt; ，并在每一步中分享了宝贵的见解、想法和专业知识。&lt;/p&gt;&lt;p&gt; &lt;strong&gt;KCD 伊斯兰堡的摇滚明星 Bart 和 Cortney&lt;/strong&gt; &lt;/p&gt;&lt;figure class="wp-block-image"&gt;&lt;img alt="图像" src="https://lh7-us.googleusercontent.com/4WLa0T_VyavpYtTsZ7YSqcK45vSMSfGwrdSKtNsZmaYW8HFGzKAbnTSbp2jN_xWDptQEvTNqNACCJT972SNloYyp3p2q8mkqmmbIsozWqskwRoBDU-2FCVYQneMO2x4bgwWVYVpOdwMBrDydvQ1slGk" /&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href="https://www.linkedin.com/in/bart-farrell/"&gt;巴特·法雷尔&lt;/a&gt;&lt;strong&gt; &lt;/strong&gt;和&lt;a href="https://www.linkedin.com/in/cortney-nickerson-26836413a/"&gt;Cortney Nickerson&lt;/a&gt;对卓越的不懈追求，加上他们对推进 Kubernetes 和云原生社区的热情，对 KCD Islamabad 的成功发挥了重要作用。我们代表整个&lt;strong&gt;KCD 伊斯兰堡社区&lt;/strong&gt;，对巴特·法雷尔和科特尼·尼克森的非凡承诺、领导和贡献表示衷心感谢。您的贡献将在未来的岁月里被珍惜和铭记。 &lt;a href="https://www.linkedin.com/feed/update/urn:li:activity:7192208208189411330"&gt;Bart 10/10 KCD 伊斯兰堡回顾&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;有了协作智慧社区，协作与成长将持续&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;KCD Islamabad 2024 取得了巨大成功，促进了云原生爱好者之间的协作、知识共享和交流。随着社区的不断发展和发展，像 KCD 这样的活动在推动创新和突破云原生技术的界限方面发挥着至关重要的作用。我们期待 KCD 的未来版本以及伊斯兰堡云原生社区的持续成功。 &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Mon, 27 May 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/05/28/reflecting-on-the-success-of-kubernetes-community-days-islamabad-2024/</guid></item><item><title>【KCD Argentina 2024: mastering the Kubernetes tango and scoring goals in container orchestration】KCD 阿根廷 2024：掌握 Kubernetes 探戈并在容器编排中取得进球</title><link>https://www.cncf.io/blog/2024/05/24/kcd-argentina-2024-mastering-the-kubernetes-tango-and-scoring-goals-in-container-orchestration/</link><description>&lt;p&gt;&lt;em&gt;KCD 帖子最初由 Cuemby 首席执行官 Angel Ramirez 在&lt;a href="https://www.linkedin.com/pulse/kcd-argentina-2024-mastering-kubernetes-tango-scoring-angel-ramirez-c4nae/"&gt;Linkedin&lt;/a&gt;上发布 | CNCF 和 OSPO 大使 |公共演讲者 |云计算和 Kubetronaut&lt;/em&gt;&lt;/p&gt;&lt;p id="ember44"&gt;作为&lt;a href="https://www.linkedin.com/company/cloud-native-computing-foundation/"&gt;云原生计算基金会 (CNCF)&lt;/a&gt;和&lt;a href="https://www.linkedin.com/company/todo-group/"&gt;TODO (OSPO) 集团&lt;/a&gt;的大使，我最近很高兴参加&lt;a href="https://www.linkedin.com/company/kcd-argentina/"&gt;KCD 阿根廷&lt;/a&gt;活动。此次活动体现了社区精神和创新精神。我尊敬的同事和大使&lt;a href="https://www.linkedin.com/in/cristhercastro/"&gt;克里斯特·卡斯特罗&lt;/a&gt;和&lt;a href="https://www.linkedin.com/in/adawolfs/"&gt;阿尔文·埃斯特拉达&lt;/a&gt;也加入了我的行列，他们对拉丁美洲社区的发展表现出无条件的支持。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="参赛者在KCD阿根廷横幅前合影" class="wp-image-109530" height="1000" src="https://www.cncf.io/wp-content/uploads/2024/05/image-9.jpeg" width="1333" /&gt;&lt;/figure&gt;&lt;p id="ember48"&gt;我们前往阿根廷支持充满活力的当地社区和出色的组织团队： &lt;a href="https://www.linkedin.com/in/agustincelano/"&gt;Agustin Celano&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/a10o/"&gt;☁️🛡 Alfredo Pardo&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/orsifacundo/"&gt;Facundo Orsi&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/matiasmospan/"&gt;Matías Mospan&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/milagros-zea-c%C3%A1rdenas-56212217/"&gt;Milagros Zea Cárdenas&lt;/a&gt;以及凭借专业精神和奉献精神走出公园的志愿者&lt;a href="https://www.linkedin.com/in/pabloesquerra/"&gt;Pablo Esquerra Veas&lt;/a&gt; （期待 2025 年智利 KCD！）、 &lt;a href="https://www.linkedin.com/in/camilasofiafernandez/"&gt;Camila Sofía Fernández&lt;/a&gt; ，由&lt;a href="https://www.linkedin.com/in/eduardo-spotti/"&gt;Eduardo Spotti&lt;/a&gt;领导，他的奉献精神使该活动取得了巨大成功。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="KCD 阿根廷舞台上的阿根廷社区" class="wp-image-109531" height="748" src="https://www.cncf.io/wp-content/uploads/2024/05/image-31.png" width="1600" /&gt;&lt;/figure&gt;&lt;p id="ember58"&gt;该活动很好地展示了阿根廷社区的热情和专业知识。富有洞察力的演讲和实践研讨会以 Marcos Nils 的精彩开场开始，随后由&lt;a href="https://www.linkedin.com/in/octavio-serpez/"&gt;Octavio Serpez&lt;/a&gt;和&lt;a href="https://www.linkedin.com/in/martin-medina-a06519129/"&gt;Martin Medina&lt;/a&gt;介绍了 K8s Security； &lt;a href="https://www.linkedin.com/in/julianommartins/"&gt;Juliano Martins&lt;/a&gt;和 Marcelo Quadros 进行了关于 Kubernetes 采用的精彩演讲， &lt;a href="https://www.linkedin.com/in/adawolfs/"&gt;Alvin Estrada&lt;/a&gt;介绍了内核空间中的 eBPF， &lt;a href="https://www.linkedin.com/in/roxsross/"&gt;Rossana Suarez&lt;/a&gt;和&lt;a href="https://www.linkedin.com/in/axelglabruna/"&gt;Axel Gabriel Labruna&lt;/a&gt;介绍了如何利用 KubeChaos 让自己坚不可摧，然后与&lt;a href="https://www.linkedin.com/in/mferreyra/"&gt;Mauricio&lt;/a&gt;进行了有趣的 GenAI 小组讨论&lt;a href="https://www.linkedin.com/in/mferreyra/"&gt;Ferreyra&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/ulisesmartins/"&gt;Ulises Martins&lt;/a&gt;和&lt;a href="https://www.linkedin.com/in/pcasas/"&gt;Pablo Casas&lt;/a&gt;在&lt;a href="https://www.linkedin.com/in/eduardo-spotti/"&gt;Eduardo Spotti&lt;/a&gt;的带领下， &lt;a href="https://www.linkedin.com/in/igor-eulalio-morgado-lopes-310687163/"&gt;Igor Eulalio Morgado Lopes&lt;/a&gt;发表了关于 Kubernetes 自动威胁响应引擎的精彩演讲。有很多选择，我希望我能参加所有的选择。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="四位演讲者在 2024 年阿根廷 Kubernetes 社区日舞台上发言" class="wp-image-109533" height="850" src="https://www.cncf.io/wp-content/uploads/2024/05/image-32.png" width="1600" /&gt;&lt;/figure&gt;&lt;p id="ember71"&gt;此次活动在美丽的 Ciudad Cultura Konex 举行，这是与老朋友和新面孔交流的绝佳机会。 &lt;a href="https://www.linkedin.com/in/emilia-vicini/"&gt;Emilia Vicini&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/hernanfarruggia/"&gt;Hernán Farruggia&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/edsmon/"&gt;Edward Monzon&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/axelglabruna/"&gt;Axel Gabriel Labruna&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/lucio-bassani-419106195/"&gt;Lucio Bassani&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/sergio-canales-espinoza/"&gt;Sergio Canales&lt;/a&gt;等，如果我漏掉了任何人，请原谅我。特别感谢&lt;a href="https://www.linkedin.com/company/wearekadre/"&gt;Kadre&lt;/a&gt;团队、Emilia 和 Hernan 勇敢地加入我们。作为 CNCF 大使，我想表达我的谢意。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="KCD 阿根廷队参赛者在足球桌前合影" class="wp-image-109534" height="1500" src="https://www.cncf.io/wp-content/uploads/2024/05/image-10.jpeg" width="1125" /&gt;&lt;/figure&gt;&lt;p id="ember79"&gt;这些活动以独特的方式弥合了在线联系和现实生活互动之间的差距，将网络友谊变成了真正的拥抱和握手。友情和共同的目标让每个人都感到在社区中受到重视。照片转储来了警报！ &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="KCD 阿根廷队参赛者在足球桌前合影" class="wp-image-109535" height="1000" src="https://www.cncf.io/wp-content/uploads/2024/05/image-11.jpeg" width="1333" /&gt;&lt;/figure&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="参与者在 KCD 阿根廷活动中自拍" class="wp-image-109536" height="1000" src="https://www.cncf.io/wp-content/uploads/2024/05/image-12.jpeg" width="1333" /&gt;&lt;/figure&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="参与者在 KCD 阿根廷活动上合影" class="wp-image-109537" height="1500" src="https://www.cncf.io/wp-content/uploads/2024/05/image-13.jpeg" width="1125" /&gt;&lt;/figure&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="参与者在 KCD 阿根廷活动中自拍" class="wp-image-109538" height="1000" src="https://www.cncf.io/wp-content/uploads/2024/05/image-14.jpeg" width="1333" /&gt;&lt;/figure&gt;&lt;p id="ember84"&gt;作为&lt;a href="https://www.linkedin.com/company/cuemby/"&gt;Cuemby&lt;/a&gt;的首席执行官，我相信支持社区，尤其是在开源世界快速变化和不确定的时期。我们在 KCD 阿根廷的存在，以及&lt;a href="https://www.linkedin.com/company/crubyt/"&gt;Crubyt&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/company/wearekadre/"&gt;Kadre&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/company/whitestack/"&gt;Whitestack&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/company/craftech-io/"&gt;Craftech&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/company/bgh-tech-partner/"&gt;BGH Tech Partner&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/company/mercadolibre/"&gt;Mercado Libre&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/company/dinocloud/"&gt;DinoCloud&lt;/a&gt;和&lt;a href="https://www.linkedin.com/company/sysarmy10/"&gt;Sysarmy&lt;/a&gt;等其他支持公司的存在，强调了我们对促进协作和创新的承诺。我们通过与社区的沉浸、合作和共同创造来展示这一承诺。我们集体支持的影响是鼓舞人心的，强化了这样一种理念：我们齐心协力，利用技术创造一个更美好、更可持续的世界。&lt;/p&gt;&lt;p id="ember85"&gt;在活动期间，我介绍了一个成功采用云原生的案例研究。我分享了现实生活中的挑战示例，例如云原生和 Kubernetes 的复杂采用，胜利，例如减少发布新功能的时间，以及成功所需的持续演进。公司内各个部门（包括工程和管理）之间的协作努力是我演讲的一大亮点。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="Angel Ramirez 在《平台工程对云运营的影响》的舞台上发表演讲，同时避免过度工程" class="wp-image-109539" height="1000" src="https://www.cncf.io/wp-content/uploads/2024/05/image-15.jpeg" width="1333" /&gt;&lt;/figure&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="Angel Ramirez 在《平台工程对云运营的影响》的舞台上发表演讲，同时避免过度工程" class="wp-image-109540" height="1000" src="https://www.cncf.io/wp-content/uploads/2024/05/image-16.jpeg" width="1333" /&gt;&lt;/figure&gt;&lt;p id="ember88"&gt;此外，我还主持了与&lt;a href="https://www.linkedin.com/in/hernanfarruggia/"&gt;Hernán Farruggia&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/adawolfs/"&gt;Alvin Estrada&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/roxsross/"&gt;Rossana Suarez&lt;/a&gt;和&lt;a href="https://www.linkedin.com/in/eduardo-spotti/"&gt;Eduardo Spotti&lt;/a&gt;的动态圆桌炉边聊天，我们深入探讨了人工智能的多方面主题。我们探讨了其成本影响、采用策略、人才获取和演变，甚至比较了区块链趋势。我还要感谢观众的积极参与和参与。你们的问题和见解丰富了讨论，让 KCD 阿根廷队令人难忘。 KCD 阿根廷不仅仅是一场赛事；它庆祝社区、协作以及利用技术产生积极影响的共同愿景。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="阿根廷社区齐聚一堂，参加 KCD 阿根廷活动" class="wp-image-109541" height="1000" src="https://www.cncf.io/wp-content/uploads/2024/05/image-33.jpg" width="1333" /&gt;&lt;/figure&gt;&lt;p id="ember94"&gt;我要衷心感谢 Eduardo Spotti 的热情接待和营造的宾至如归的环境。我真诚地感谢他作为社区领袖和个人的热情接待。社区就是每个人，我要感谢 Edu 的家人，他们欢迎我们并允许我们成为他们的一部分，使这成为一次美妙的经历。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="阿根廷KCD拼贴图片" class="wp-image-109542" height="1000" src="https://www.cncf.io/wp-content/uploads/2024/05/image-33.png" width="1331" /&gt;&lt;/figure&gt;&lt;p id="ember96"&gt;对于 Edu 的家人，我非常感谢和认可他们对这次活动的支持和参与，使这个社区变得独一无二。每个人都是其中的一部分！ &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Thu, 23 May 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/05/24/kcd-argentina-2024-mastering-the-kubernetes-tango-and-scoring-goals-in-container-orchestration/</guid></item><item><title>【Happy 7th Birthday, Istio!】七岁生日快乐，Istio！</title><link>https://www.cncf.io/blog/2024/05/24/happy-7th-birthday-istio/</link><description>&lt;p&gt;&lt;em&gt;项目帖子最初由 Lin Sun (Solo.io) 为 Istio 指导委员会发布在&lt;a href="https://istio.io/latest/blog/2024/happy-7th-birthday/"&gt;Istio 博客&lt;/a&gt;上&lt;/em&gt;&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;em&gt;庆祝 Istio 的发展势头和令人兴奋的未来。&lt;/em&gt; &lt;/h3&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="7 岁生日快乐，Istio 旗帜" class="wp-image-109082" height="1080" src="https://www.cncf.io/wp-content/uploads/2024/05/7th-birthday.jpg" width="1080" /&gt;&lt;/figure&gt;&lt;p&gt; 2017 年的今天， &lt;a href="https://techcrunch.com/2017/05/24/google-ibm-and-lyft-launch-istio-an-open-source-platform-for-managing-and-securing-microservices/" rel="noreferrer noopener" target="_blank"&gt;Google 和 IBM 宣布推出 Istio 服务网格&lt;/a&gt;。 Istio 是一项开放技术，使开发人员能够无缝连接、管理和保护不同服务的网络 - 无论平台、来源或供应商如何。我们简直不敢相信 Istio 今天已经七岁了！为了庆祝该项目的七岁生日，我们想要强调 Istio 的发展势头及其令人兴奋的未来。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="rapid-adoption-among-users"&gt;用户快速采用&lt;a href="https://istio.io/latest/blog/2024/happy-7th-birthday/#rapid-adoption-among-users"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt; Istio 是全球采用最广泛的服务网格项目，自 2017 年成立以来一直保持着强劲的发展势头。去年，随着&lt;a href="https://www.cncf.io/announcements/2023/07/12/cloud-native-computing-foundation-reaffirms-istio-maturity-with-project-graduation/" rel="noreferrer noopener" target="_blank"&gt;CNCF 的毕业，&lt;/a&gt; Istio 加入了 Kubernetes、Prometheus 和云原生生态系统的其他中坚力量的行列。最终用户范围从数字原生初创公司到全球最大的金融机构和电信公司，&lt;a href="https://istio.io/latest/about/case-studies/"&gt;案例研究&lt;/a&gt;来自 eBay、T-Mobile、Airbnb、Splunk、FICO、T-Mobile、Salesforce 等公司。&lt;/p&gt;&lt;p&gt; Istio 的控制平面和 sidecar 是 Docker Hub 上下载量排名第三和第四的镜像，每个镜像的&lt;a href="https://hub.docker.com/search?q=istio" rel="noreferrer noopener" target="_blank"&gt;下载量都超过 100 亿次&lt;/a&gt;。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示 Docker Hub 下载 Istio 的屏幕截图！" class="wp-image-109525" height="764" src="https://www.cncf.io/wp-content/uploads/2024/05/image-30-1.jpg" width="1874" /&gt;&lt;/figure&gt;&lt;p&gt;我们在&lt;a href="https://github.com/istio/istio/" rel="noreferrer noopener" target="_blank"&gt;Istio 的主存储库&lt;/a&gt;上拥有超过 35,000 个 GitHub star，并且还在持续增长。感谢所有为 istio/istio 存储库加注星标的人。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示 istio/istio 存储库的 GitHub star 的流程图！" class="wp-image-109527" height="1443" src="https://www.cncf.io/wp-content/uploads/2024/05/image-30.png" width="1999" /&gt;&lt;/figure&gt;&lt;p&gt;在 Istio 七岁生日之际，我们询问了一些用户的想法： &lt;/p&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;如今，Istio 成为 Airbnb 服务网格的支柱，管理着数十万个工作负载之间的所有流量。自采用 Istio 五年以来，我们一直对这个决定感到满意。能够成为这个充满活力和支持性社区的一部分真是太棒了。生日快乐，伊斯蒂奥！&lt;/p&gt; &lt;cite&gt;— 何伟博，Airbnb 高级软件工程师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote has-pink-400-color has-gray-200-background-color has-text-color has-background has-link-color wp-elements-fa614a7c81809409e1640f8e9e15d50b is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-black-color has-gray-300-background-color has-text-color has-background has-link-color wp-elements-9b51468b695269ddc38b867150ddede8"&gt; Istio 增强了我们在类似生产的隔离环境中快速部署和测试微服务以及依赖服务的能力。这种称为隔离的方法使 eBay 的开发人员能够在开发生命周期的早期识别缺陷，通过减少不稳定来提高实时环境的稳定性，并建立对自动化生产部署的信心。最终，这加快了开发进程并提高了生产部署的成功率。&lt;/p&gt; &lt;cite&gt;— Sudheendra Murthy，eBay 首席工程师兼服务网格架构师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt; Istio 通过集成分布式跟踪和 OpenTelemetry 增强了云平台的安全性，同时简化了可观察性。这种组合提供了强大的安全功能和对系统性能的深入洞察，从而能够更有效地监控我们的分布式服务并进行故障排除。&lt;/p&gt; &lt;cite&gt;— Sathish Krishnan，瑞银集团杰出工程师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;在我们采用基于微服务的架构的过程中，采用 Istio 改变了我们的工程组织的游戏规则。其包含电池的方法使我们能够轻松管理流量路由，深入了解我们的服务与分布式跟踪的服务交互，以及通过 WASM 插件进行扩展。其全面的功能集使其成为我们基础设施的重要组成部分，并允许我们的工程师将应用程序代码与基础设施管道分离。&lt;/p&gt; &lt;cite&gt;— Shray Kumar，Bluecore 首席软件工程师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt; Istio 太棒了，我已经使用它 4 到 5 年了，发现它可以非常轻松地以非常低的延迟管理数以万计的 pod 的数千个网关。如果您需要建立一个非常安全的基础设施，Istio 是一个很好的朋友。此外，它非常适合需要大量安全性且需要符合 PCI/HIPAA/SoC2 标准的基础设施。&lt;/p&gt; &lt;cite&gt;— Ezequiel Arielli，SIGMA Financial AI 云平台主管&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt; Istio 帮助我们以标准化的方式为不同客户的所有部署提供安全环境。 Istio 的灵活性和可定制性确实帮助我们通过将加密、授权和身份验证委托给服务网格来构建更好的应用程序，而不必在我们的应用程序代码库中实现这些功能。&lt;/p&gt; &lt;cite&gt;— Joel Millage，BCubed 软件工程师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;我们在 Predibase 广泛使用 Istio 来简化多集群网格之间的通信，帮助部署和训练具有低延迟和故障转移的开源微调 LLM 模型。借助 Istio，我们获得了许多开箱即用的功能，否则这些功能将需要数周时间才能实现。&lt;/p&gt; &lt;cite&gt;— Predibase 云基础设施工程师 Gyanesh Mishra&lt;/cite&gt; &lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;毫无疑问，Istio 是市场上最完整、功能最齐全的 Service Mesh 平台。这一成功是社区积极参与的直接结果，该社区能够自助并始终包含在项目方向中。祝贺周年纪念日，Istio！&lt;/p&gt; &lt;cite&gt;— Daniel Requena，iFood 的 SRE&lt;/cite&gt; &lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;我们多年来一直在生产中使用 Istio，它是我们基础设施的关键组件，使我们能够安全地连接微服务，并提供入口/出口流量管理和一流的可观察性。社区很棒，每个版本都带来了许多令人兴奋的功能。&lt;/p&gt; &lt;cite&gt;— Frédéric Gaudet，BblalaCar 高级 SRE&lt;/cite&gt;&lt;/blockquote&gt;&lt;h2 class="wp-block-heading" id="amazing-diversity-of-contributors-and-vendors"&gt;贡献者和供应商的惊人多样性&lt;a href="https://istio.io/latest/blog/2024/happy-7th-birthday/#amazing-diversity-of-contributors-and-vendors"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在过去的一年里，我们的社区在贡献公司的数量和贡献者的数量方面都出现了巨大的增长。还记得 Istio 三岁时就有 500 名贡献者吗？去年我们有超过 1,700 名贡献者！&lt;/p&gt;&lt;p&gt;随着微软开放服务网格团队加入 Istio 社区，我们将 Azure 添加到提供 Istio 兼容解决方案&lt;a href="https://istio.io/latest/about/ecosystem/"&gt;的云和企业 Kubernetes 供应商列表&lt;/a&gt;中，包括 Google Cloud、Red Hat OpenShift、VMware Tanzu、华为云、DaoCloud、Oracle Cloud、腾讯云、Akamai 云和阿里云。我们也很高兴看到 Amazon Web Services 团队发布了&lt;a href="https://aws-ia.github.io/terraform-aws-eks-blueprints/patterns/istio/" rel="noreferrer noopener" target="_blank"&gt;Istio 的 EKS 蓝图，&lt;/a&gt;因为希望在 AWS 上运行 Istio 的用户需求很高。&lt;/p&gt;&lt;p&gt;专业网络软件提供商也在推动 Istio 向前发展，Solo.io、Tetrate 和 F5 Networks 都提供可在任何环境中运行的企业 Istio 解决方案。&lt;/p&gt;&lt;p&gt;以下是过去一年贡献最大的公司，其中 Solo.io、Google 和 DaoCloud 占据前三名。虽然这些公司中的大多数都是 Istio 供应商，但 Salesforce 和 Ericsson 是最终用户，在生产中运行 Istio！ &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="去年 Istio 贡献最大的公司截图" class="wp-image-109528" height="1146" src="https://www.cncf.io/wp-content/uploads/2024/05/image-31.jpg" width="1782" /&gt;&lt;/figure&gt;&lt;p&gt;以下是我们社区领袖的一些想法： &lt;/p&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote has-gray-300-background-color has-background is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p&gt;随着各行业云原生采用的成熟，服务网格的采用在过去几年中一直在稳步上升。自从他们去年从 CNCF 毕业以来，Istio 帮助推动了这一成熟，我们祝他们生日快乐。随着 Istio 团队添加环境模式等新功能并简化服务网格体验，我们期待观察并支持这种持续增长。&lt;/p&gt; &lt;cite&gt;— CNCF 首席技术官 Chris Aniszczyk&lt;/cite&gt; &lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;服务网格是微服务架构的核心，是云原生的标志。 Istio 的生日不仅庆祝了可观察性和流量管理的普及和重要性，还庆祝了对通过加密、相互身份验证和许多其他简化采用、集成和部署体验的其他核心安全原则实现默认安全通信的日益增长的需求。&lt;/p&gt; &lt;cite&gt;— Emily Fox，CNCF TOC 主席兼红帽高级首席软件工程师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;在我看来，Istio 不是一个服务网格。这是一个由用户和贡献者组成的协作社区，他们恰好提供了世界上最受欢迎的服务网格。祝这个神奇的社区生日快乐！这是美妙的七年，我期待着在 Istio 社区中与来自世界各地的朋友和同事一起庆祝更多！&lt;/p&gt; &lt;cite&gt;— Mitch Connors，Istio 技术监督委员会成员兼 Microsoft 首席工程师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;在过去的两年里，成为世界上最受欢迎的服务网格团队的一员是一种荣幸和充实的经历。很高兴看到 Istio 从 CNCF 孵化阶段成长为毕业项目，更高兴看到最新、最伟大的 1.22 版本完成时的动力和热情。祝愿未来几年有更多成功的发布。&lt;/p&gt; &lt;cite&gt;— Faseela K，Istio 指导委员会成员兼爱立信云原生开发人员&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt; Istio 的独特之处在于，社区由来自世界各地的开发人员、用户和供应商共同努力，使 Istio 成为业界最好、最强大的开放服务网格。正是社区的力量使 Istio 如此成功，现在在 CNCF 的领导下，我期待看到 Istio 成为所有云原生应用程序事实上的服务网格标准。&lt;/p&gt; &lt;cite&gt;— Neeraj Poddar，Istio 技术监督委员会成员兼 Solo.io 工程副总裁&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;在过去的 5 年里，我很荣幸能够与 Istio 社区合作。有大量的贡献者，他们的奉献、热情和辛勤工作让我在这个项目上度过了真正愉快的时光。社区中有许多用户提供反馈，帮助 Istio 成为最好的服务网格。我仍然对社区所做的事情感到惊讶，并期待看到我们未来将取得的成功。&lt;/p&gt; &lt;cite&gt;— Eric Van Norman，Istio 技术监督委员会成员兼 IBM 咨询软件工程师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt; Istio 是 Salesforce 服务网格基础设施的支柱，如今每天为我们所有服务提供数万亿个请求。我们用网格解决了很多复杂的问题。很高兴成为这段旅程的一部分并为社区做出贡献。多年来，Istio 已经成熟为可靠的服务网格，同时不断创新。我们对未来感到兴奋！&lt;/p&gt; &lt;cite&gt;— Rama Chavali，Istio 网络工作组负责人兼 Salesforce 软件工程架构师&lt;/cite&gt;&lt;/blockquote&gt;&lt;h2 class="wp-block-heading" id="continuous-technical-innovation"&gt;持续技术创新&lt;a href="https://istio.io/latest/blog/2024/happy-7th-birthday/#continuous-technical-innovation"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;我们坚信多元化推动创新。最让我们惊讶的是Istio社区的不断创新，从让升级变得更容易，到采用Kubernetes Gateway API，到添加新的无sidecar环境数据平面模式，再到让Istio变得易于使用和尽可能透明。&lt;/p&gt;&lt;p&gt; Istio 的环境模式于 2022 年 9 月推出，旨在简化操作、更广泛的应用程序兼容性并降低基础设施成本。 Ambient 模式引入了轻量级、共享的第 4 层 (L4) 节点代理和可选的第 7 层 (L7) 代理，从而消除了数据平面对传统 sidecar 代理的需要。环境模式背后的核心创新在于它将 L4 和 L7 处理分为两个不同的层。这种分层方法允许您逐步采用 Istio，实现从无网格到安全覆盖 (L4)，再到可选的完整 L7 处理的平滑过渡 - 根据需要，在整个队列中基于每个命名空间。&lt;/p&gt;&lt;p&gt;作为&lt;a href="https://istio.io/latest/news/releases/1.22.x/announcing-1.22/"&gt;Istio 1.22 版本&lt;/a&gt;的一部分，&lt;a href="https://istio.io/latest/blog/2024/ambient-reaches-beta/"&gt;环境模式已达到 Beta 版&lt;/a&gt;，您可以在生产环境中运行 Istio，无需使用 sidecar，但需采取预防措施。&lt;/p&gt;&lt;p&gt;以下是我们的贡献者和用户的一些想法和祝福： &lt;/p&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;自 Istio 准备投入生产之前起，Auto Trader 就一直在生产中使用 Istio！它显着提高了我们的运营能力，标准化了我们保护、配置和监控服务的方式。升级已经从艰巨的任务演变为几乎不是什么大事，而 Ambient 的推出证明了我们对简化的持续承诺——使新用户比以往任何时候都更容易以最小的努力获得真正的价值。&lt;/p&gt; &lt;cite&gt;— Karl Stoney，AutoTrader UK 技术架构师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote has-gray-300-background-color has-background is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p&gt; Istio 是 Akamai 云的云原生堆栈的核心组件，为产品和服务提供安全的服务网格，每个集群可提供数百万 RPS 和数百 GB 的吞吐量。我们期待该项目的未来路线图，并很高兴能够在今年晚些时候评估新功能，例如环境网格。&lt;/p&gt; &lt;cite&gt;— Alex Chircop，Akamai 首席产品架构师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote has-gray-300-background-color has-background is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p&gt; Istio 的网络和安全功能已成为我们基础设施运营的基本组成部分。 Istio 环境模式的引入极大地简化了管理，并将我们的 Kubernetes 集群节点的大小减少了大约 20%。我们成功地将生产系统迁移到使用环境数据平面。&lt;/p&gt; &lt;cite&gt;— Saarko Eilers，EISST International Ltd 基础设施运营经理&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote has-gray-300-background-color has-background is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p&gt;祝 Istio 生日快乐！多年来，我很荣幸成为这个伟大社区的一员，特别是当我们继续利用环境模式构建世界上最好的服务网格时。&lt;/p&gt; &lt;cite&gt;— John Howard，最多产的 Istio 贡献者、Istio 技术监督委员会成员、Solo.io 高级架构师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;很高兴看到像 Istio 这样的成熟项目继续发展和蓬勃发展。成为 CNCF 项目的毕业项目吸引了一批新的开发人员，为其持续成功做出了贡献。同时，环境网格和网关 API 支持有望迎来服务网格采用的新时代。我很高兴看到即将发生的事情！&lt;/p&gt; &lt;cite&gt;— Justin Pettit，Istio 指导委员会成员兼 Google 高级工程师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;祝这个令人难以置信的 Istio 项目生日快乐，它不仅彻底改变了我们处理服务网格技术的方式，而且还培养了一个充满活力和包容性的社区！见证 Istio 从 CNCF 孵化项目到毕业项目的演变是非常了不起的。最近发布的 Istio 1.22 强调了其持续发展和对卓越的承诺，提供了增强的功能和改进的性能。期待该项目的下一步。&lt;/p&gt; &lt;cite&gt;— Iris Ding，Istio 指导委员会成员兼英特尔软件工程师&lt;/cite&gt;&lt;/blockquote&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p class="has-gray-300-background-color has-background"&gt;我很荣幸从一开始就成为 Istio 项目的一部分，见证了它和社区多年来的成熟和发展。就我个人而言，过去八年里，Istio 一直是我职业生涯的核心！我坚信 Istio 的最佳状态尚未到来，在未来几年中，我们将看到 Istio 的持续增长、成熟和采用。为美好的社区共同实现这一里程碑干杯。&lt;/p&gt; &lt;cite&gt;— Zack Butcher，Istio 指导委员会成员兼 Tetrate 创始人兼首席工程师&lt;/cite&gt;&lt;/blockquote&gt;&lt;h2 class="wp-block-heading" id="learn-more-about-istio"&gt;了解有关 Istio 的更多信息&lt;a href="https://istio.io/latest/blog/2024/happy-7th-birthday/#learn-more-about-istio"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt; 如果您是 Istio 新手，这里有一些资源可以帮助您了解更多信息：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;查看&lt;a href="https://istio.io/"&gt;项目网站&lt;/a&gt;和&lt;a href="https://github.com/istio/istio/" rel="noreferrer noopener" target="_blank"&gt;GitHub 存储库&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;阅读&lt;a href="https://istio.io/latest/docs/"&gt;文档&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;加入&lt;a href="https://slack.istio.io/" rel="noreferrer noopener" target="_blank"&gt;Slack&lt;/a&gt;社区。&lt;/li&gt;&lt;li&gt;在&lt;a href="https://twitter.com/IstioMesh" rel="noreferrer noopener" target="_blank"&gt;Twitter&lt;/a&gt;和&lt;a href="https://www.linkedin.com/company/istio" rel="noreferrer noopener" target="_blank"&gt;LinkedIn&lt;/a&gt;上关注该项目。&lt;/li&gt;&lt;li&gt;参加&lt;a href="https://github.com/istio/community/blob/master/README.md#community-meeting" rel="noreferrer noopener" target="_blank"&gt;用户社区会议&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;参加&lt;a href="https://github.com/istio/community/blob/master/WORKING-GROUPS.md#working-group-meetings" rel="noreferrer noopener" target="_blank"&gt;工作组会议&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;合并拉取请求后，通过提交&lt;a href="https://github.com/istio/community/blob/master/ROLES.md#member" rel="noreferrer noopener" target="_blank"&gt;成员资格请求&lt;/a&gt;成为 Istio 贡献者和开发人员。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果您已经是 Istio 社区的一员，请祝 Istio 项目七岁生日快乐，并在社交媒体上分享您对该项目的想法。感谢您的帮助和支持！ &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Thu, 23 May 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/05/24/happy-7th-birthday-istio/</guid></item><item><title>【Kubestronaut in Orbit: Yongkang He】在轨宇航员：何永康</title><link>https://www.cncf.io/blog/2024/05/23/kubestronaut-in-orbit-yongkang-he/</link><description>&lt;h2 class="wp-block-heading"&gt;认识永康&lt;/h2&gt;&lt;p&gt;永康是我们首批&lt;a href="https://www.cncf.io/training/kubestronaut/"&gt;Kubetronaut&lt;/a&gt;之一，总部位于新加坡，为亚太地区的一家公司提供支持。他将重点转向了云原生技术，现在已获得 Kubernetes 的全面认证（KCNA、CKA、CKAD、CKS 和 KCSA）。他致力于开源，在多个国家组织了主要的 Kubernetes 聚会，并在 GitHub 上提供自动化脚本，用于快速设置 Kubernetes 集群。他还运营着一个专注于 Kubernetes 数据管理和安全性的 YouTube 频道。&lt;/p&gt;&lt;p&gt;在这里查看永康的 K8s 频道： &lt;a href="http://k8sug.com/"&gt;http://k8sug.com、http&lt;/a&gt; &lt;a href="http://g.k8sug.com/"&gt;://g.k8sug.com、http&lt;/a&gt; &lt;a href="http://y.k8sug.com/"&gt;://y.k8sug.com&lt;/a&gt;&lt;/p&gt;&lt;p&gt;如果您想成为 Kubetronaut，请在&lt;a href="https://www.cncf.io/training/kubestronaut/"&gt;CNCF Kubetronaut&lt;/a&gt;页面上获取更多详细信息。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;strong&gt;您什么时候开始使用 Kubernetes ——您的第一个项目是什么？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt; 2021 年，我启动了一个项目，通过自动化展示 Kubernetes 备份、灾难恢复 (DR) 和迁移功能。这一努力促使我开发了全面的自动化脚本，现在可以在 GitHub 上访问这些脚本&lt;a href="https://github.com/yongkanghe"&gt;：https://github.com/yongkanghe。&lt;/a&gt;&lt;/p&gt;&lt;p&gt;借助这些脚本，任何人都可以在 AWS、Azure 或 GCP 等平台上快速部署托管 Kubernetes 环境，并在几分钟内启用容器备份，从而轻松进行实验和探索。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;strong&gt;您现在从事或使用的主要 CNCF 项目是什么？在您的职业生涯中，您最喜欢哪些项目？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;我的主要关注点是 Kubernetes，它构成了我工作的支柱。在 CNCF 项目中，我特别喜欢使用&lt;a href="https://github.com/vmware-tanzu/velero"&gt;Velero&lt;/a&gt; 、 &lt;a href="https://github.com/falcosecurity/falco"&gt;Falco&lt;/a&gt; 、 &lt;a href="https://github.com/kubearmor/KubeArmor"&gt;KubeArmor&lt;/a&gt; 、 &lt;a href="https://github.com/aquasecurity"&gt;Trivy&lt;/a&gt; 、 &lt;a href="https://github.com/kubescape/kubescape"&gt;Kubescape&lt;/a&gt;等数据管理和安全工具。这些项目不仅增强了我的工作流程，而且还有助于确保数据完整性和防范潜在的安全威胁。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;strong&gt;是什么促使您获得所有 Kubernetes 证书？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;对我来说，这是要突破自己的界限，接受掌握新事物的挑战，并扩大我的知识基础。此外，当我知道我的旅程可以激励其他人开始探索 Kubernetes 和多云环境时，我感到非常满意。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;strong&gt;这些证书对您的职业生涯有何帮助？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;我拥有涵盖多云、Kubernetes、安全、DevOps 和相关领域的 60 多项认证，我的职业生涯腾飞的原因如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;丰富专业知识&lt;/strong&gt;：每项认证都加深了我的知识，使我成为云、容器和自动化方面的专家。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;证书验证&lt;/strong&gt;：这些认证验证了我的技能，推动我获得工作机会和职业发展。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;职业发展：&lt;/strong&gt;凭借这些专业知识，我已做好在云架构、Kubernetes 管理和 DevOps 工程方面取得进步的准备。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;解决问题的技能：&lt;/strong&gt;我多样化的技能使我能够轻松应对复杂的挑战，从构建弹性云基础设施到自动化复杂流程。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;行业认可：&lt;/strong&gt;我被视为该领域的领导者，指导团队、分享知识并推动创新。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;社区参与：&lt;/strong&gt;通过认证与同行互动可以促进集体学习和成长。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;总之，我的认证是在云计算、DevOps 等领域取得成功的关键！&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;strong&gt;您为想要使用 k8s 的人推荐了哪些其他书籍/网站/课程？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;说到学习，我个人更喜欢在线课程。在成为一名 Kubetronaut 的过程中，我尝试了各种学习平台。经过比较后，我发现 KodeKloud 是最有效的实践学习平台，特别是如果您的目标是获得实践经验并通过 CKA、CKAD 和 CKS 等基于实践的考试。为了准备参加朝中社，我利用了 YouTube 上安德鲁·布朗 (Andrew Brown) 的免费课程。&lt;/p&gt;&lt;p&gt;此外，我强烈建议尝试 Killer.sh 进行考试模拟。注册后，您将获得 36 小时的在线模拟平台访问权限，这对于准备考试非常宝贵。&lt;/p&gt;&lt;p&gt;至于书籍，我听说过 Nigel Poulton 的《The Kubernetes Book》和 Chad M. Crowell 的《Acing the Certified Kubernetes Administrator Exam》。这些资源受到强烈推荐，并且众所周知对考试准备很有帮助。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;strong&gt;你在空闲时间做什么？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;我热爱旅行，喜欢探索不同的目的地，同时珍惜与家人在一起的美好时光。最近，我开始了一次激动人心的冒险，首先是参观在西雅图举行的 Microsoft MVP 全球峰会。从那里，我继续前往巴黎的 KubeCon + CloudNativeCon Europe，然后前往圣克拉拉的英特尔博物馆，然后前往拉斯维加斯的 Google Next &amp;#39;24。在回家之前，我在奥克兰进行了一次愉快的停留，沿途欣赏了每个地方的美丽景色。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;strong&gt;正如您所知，Kubernetes 今年已满 10 岁了，您对 Kubernetes 未来 10 年最兴奋的是什么？&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;成熟度增强，巩固了其作为容器编排标准的地位。&lt;/li&gt;&lt;li&gt;加速服务网格、无服务器和 AI/ML 集成等云原生技术的创新。&lt;/li&gt;&lt;li&gt;使用新工具和平台扩展生态系统，以简化开发。&lt;/li&gt;&lt;li&gt;在无缝工作负载编排的混合云和多云采用中发挥核心作用。&lt;/li&gt;&lt;li&gt;通过资源优化关注可持续性和效率。&lt;/li&gt;&lt;li&gt;持续的社区合作推动成功和创新。我很自豪能够领导全球最活跃的 Kubernetes 用户组，迄今为止拥有超过 14,000 名成员。随着我们的不断发展，我们准备在未来产生更大的影响。&lt;/li&gt;&lt;/ul&gt;&lt;h3 class="wp-block-heading"&gt;&lt;strong&gt;您会对刚刚开始 K8s 认证之旅的人说些什么？有什么提示或技巧吗？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;踏上 Kubernetes 认证之旅永远不会太晚。随着 Kubernetes 在本地、多云和边缘环境中得到广泛采用，对经验丰富的 Kubernetes 专家的需求在未来十年只会继续增长。如果您拥有强大的 Kubernetes 技能，这将为您的职业发展提供绝佳的机会。因此，如果您对 Kubernetes 充满热情并渴望在该领域取得优异成绩，那么现在正是投入并抓住这一职业成长和发展机会的最佳时机。&lt;/p&gt;&lt;p&gt;精通 Kubernetes 需要持续学习；没有捷径。通过持续的教育，掌握就会随之而来。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;strong&gt;如今，云原生生态系统的意义远不止 Kubernetes。您是否计划获得 CNCF 的其他云原生认证？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;如果有时间，我渴望获得剩余的云原生认证：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://www.cncf.io/training/certification/capa/"&gt;Argo 认证项目助理 (CAPA)&lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href="https://www.cncf.io/training/certification/cca/"&gt;Cilium 认证助理 (CCA)&lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a href="https://www.cncf.io/training/certification/ica/"&gt;Istio 认证工程师 (ICA)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.cncf.io/training/certification/pca/"&gt;普罗米修斯认证助理 (PCA)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 class="wp-block-heading"&gt;&lt;strong&gt;您是如何涉足云原生和 Kubernetes 的？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这一切都始于一次挫折：我之前工作中的概念验证 (POC) 失败，当时我很难有效地备份容器。这激发了我对容器和 Kubernetes 的浓厚兴趣。巧合的是，大约在同一时间，我与那个雇主分道扬镳。我没有被吓倒，决定通过获得 Kubernetes 管理员认证 (CKA) 认证来加深我的理解。成功完成 CKA 认证后，我抓住机会加入了一家专门从事容器备份、灾难恢复 (DR) 和迁移的公司。这标志着我进入 Kubernetes 和容器管理世界的旅程的开始。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;strong&gt;还有其他想法吗？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;尽管人工智能目前是一个非常突出的领域，无疑是一个值得追求的方向，但认识到 Kubernetes 作为其基础设施至关重要。事实上，大多数人工智能工作负载都在 Kubernetes 上运行。因此，掌握 Kubernetes 势在必行，因为它是该领域的关键技术&lt;/p&gt;&lt;p&gt;如果您想成为像永康一样的 Kubetronaut，请在&lt;a href="https://www.cncf.io/training/kubestronaut/"&gt;CNCF Kubetronaut&lt;/a&gt;页面上获取更多详细信息。 &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Wed, 22 May 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/05/23/kubestronaut-in-orbit-yongkang-he/</guid></item><item><title>【Say goodbye to your sidecars: Istio’s ambient mode reaches Beta in v1.22】告别 Sidecar：Istio 的环境模式在 v1.22 中达到 Beta 版</title><link>https://www.cncf.io/blog/2024/05/23/say-goodbye-to-your-sidecars-istios-ambient-mode-reaches-beta-in-v1-22/</link><description>&lt;p&gt;&lt;em&gt;项目帖子最初由 Lin Sun、Solo.io 发布在&lt;a href="https://istio.io/latest/blog/2024/ambient-reaches-beta/"&gt;Istio 博客&lt;/a&gt;上，供 Istio 指导和技术监督委员会使用&lt;/em&gt;&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;&lt;em&gt;第 4 层和第 7 层功能现已准备好投入生产。&lt;/em&gt;&lt;/h3&gt;&lt;p&gt;今天，Istio 革命性的新环境数据平面模式已达到 Beta 版。环境模式旨在简化操作、扩大应用程序兼容性并降低基础设施成本。它为您提供了一个集成到您的基础设施中的无 sidecar 数据平面，同时保留了 Istio 的零信任安全性、遥测和流量管理等核心功能。&lt;/p&gt;&lt;p&gt;环境模式&lt;a href="https://istio.io/latest/blog/2022/introducing-ambient-mesh/"&gt;于 2022 年 9 月宣布&lt;/a&gt;。从那时起，我们的社区投入了 20 个月的辛勤工作和协作，其中包括 Solo.io、Google、Microsoft、Intel、Aviatrix、华为、IBM、Red Hat 和许多其他公司的贡献。 1.22 中的 Beta 状态表明环境模式的功能现已准备好用于生产工作负载，并采取适当的预防措施。这对于 Istio 来说是一个巨大的里程碑，将第 4 层和第 7 层网格功能带入生产状态，无需 sidecar。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="why-ambient-mode"&gt;为什么选择环境模式？&lt;a href="https://istio.io/latest/blog/2024/ambient-reaches-beta/#why-ambient-mode"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;在听取 Istio 用户的反馈时，我们发现应用程序对网格功能的需求不断增长，但听说许多人发现 sidecar 的资源开销和操作复杂性难以克服。 sidecar 用户向我们分享的挑战包括添加 sidecar 后 Istio 如何破坏应用程序、sidecar 对 CPU 和内存的大量消耗，以及每次新代理发布时都需要重新启动应用程序 Pod 带来的不便。&lt;/p&gt;&lt;p&gt;作为一个社区，我们设计了环境模式来解决这些问题，减轻了用户之前在实现服务网格时所面临的复杂性障碍。新功能集被命名为“环境模式”，因为它被设计为对您的应用程序透明，确保无需额外配置即可采用它，并且不需要用户重新启动应用程序。&lt;/p&gt;&lt;p&gt;在环境模式下，从网格中添加或删除应用程序很简单。现在，您可以简单地&lt;a href="https://istio.io/latest/docs/ambient/usage/add-workloads/"&gt;标记一个名称空间&lt;/a&gt;，该名称空间中的所有应用程序都会添加到网格中。这会立即使用 mTLS 保护所有流量，并且无需 sidecar 或重新启动应用程序。&lt;/p&gt;&lt;p&gt;有关我们为何构建环境模式的更多信息，请参阅&lt;a href="https://istio.io/latest/blog/2022/introducing-ambient-mesh/"&gt;环境网格简介博客&lt;/a&gt;。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="how-does-ambient-mode-make-adoption-easier"&gt;环境模式如何让采用变得更容易？ &lt;a href="https://istio.io/latest/blog/2024/ambient-reaches-beta/#how-does-ambient-mode-make-adoption-easier"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt; Istio 的环境模式引入了轻量级、共享的第 4 层 (L4) 节点代理和可选的第 7 层 (L7) 代理，从而消除了数据平面对传统 sidecar 代理的需求。环境模式背后的核心创新在于它将 L4 和 L7 处理分为两个不同的层。这种分层方法允许您逐步采用 Istio，实现从无网格到安全覆盖 (L4)，再到可选的完整 L7 处理的平滑过渡 - 根据需要，在整个队列中基于每个命名空间。&lt;/p&gt;&lt;p&gt;环境模式无需对现有 Kubernetes 部署进行任何修改即可工作。您可以标记命名空间以将其所有工作负载添加到网格中，或根据需要选择某些部署。通过利用环境模式，用户绕过了 sidecar 模型之前的一些限制性元素。服务器发送优先协议现在可以工作，大多数保留端口现在可用，并且容器绕过 sidecar 的能力（无论是恶意还是非恶意）都被消除了。&lt;/p&gt;&lt;p&gt;轻量级共享L4节点代理称为&lt;em&gt;&lt;a href="https://istio.io/latest/docs/ambient/overview/#ztunnel"&gt;ztunnel&lt;/a&gt;&lt;/em&gt; （零信任隧道）。 Ztunnel 无需在集群内过度配置内存和 CPU 来处理预期负载，从而大大降低了运行网格的开销。在某些使用案例中，节省可以超过 90% 或更多，同时仍然使用具有加密身份的双向 TLS、简单的 L4 授权策略和遥测来提供零信任安全性。&lt;/p&gt;&lt;p&gt; L7 代理称为&lt;em&gt;&lt;a href="https://istio.io/latest/docs/ambient/overview/#waypoint-proxies"&gt;路径点&lt;/a&gt;&lt;/em&gt;。 Waypoints 处理 L7 功能，例如流量路由、丰富的授权策略实施和企业级弹性。路点在应用程序部署之外运行，并且可以根据您的需求独立扩展，这可以针对整个命名空间或命名空间内的多个服务。与 Sidecar 相比，每个应用程序 Pod 不需要一个路点，并且可以根据其范围有效地扩展路点，从而在大多数情况下节省大量 CPU 和内存。&lt;/p&gt;&lt;p&gt; L4 安全覆盖层和 L7 处理层之间的分离允许增量采用环境模式数据平面，这与早期的 sidecar 二进制“全输入”注入形成鲜明对比。用户可以从安全的 L4 覆盖开始，它提供了人们部署 Istio 的大部分功能（mTLS、授权策略和遥测）。然后可以根据具体情况启用复杂的 L7 处理，例如重试、流量分割、负载平衡和可观察性收集。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="what-is-in-the-scope-of-the-beta"&gt; Beta 版的范围包括哪些内容？ &lt;a href="https://istio.io/latest/blog/2024/ambient-reaches-beta/#what-is-in-the-scope-of-the-beta"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;我们建议您在测试环境中进行验证后，采取适当的预防措施，在生产中探索环境模式的以下 Beta 功能：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://istio.io/latest/docs/ambient/install/"&gt;安装支持环境模式的 Istio&lt;/a&gt; 。&lt;/li&gt;&lt;li&gt;&lt;a href="https://istio.io/latest/docs/ambient/usage/add-workloads/"&gt;将您的工作负载添加到网格中&lt;/a&gt;，以获得具有加密身份、 &lt;a href="https://istio.io/latest/docs/ambient/usage/l4-policy/"&gt;L4 授权策略&lt;/a&gt;和遥测的双向 TLS。&lt;/li&gt;&lt;li&gt;&lt;a href="https://istio.io/latest/docs/ambient/usage/waypoint/"&gt;配置路点&lt;/a&gt;以&lt;a href="https://istio.io/latest/docs/ambient/usage/l7-features/"&gt;使用 L7 功能&lt;/a&gt;，例如流量转移、请求路由和丰富的授权策略实施。&lt;/li&gt;&lt;li&gt;在环境模式下将 Istio 入口网关连接到工作负载，支持所有现有的 Istio API。&lt;/li&gt;&lt;li&gt;使用&lt;code&gt;istioctl&lt;/code&gt;操作路点，并对 ztunnel 和路点进行故障排除。&lt;/li&gt;&lt;/ul&gt;&lt;h3 class="wp-block-heading" id="alpha-features"&gt;阿尔法功能&lt;a href="https://istio.io/latest/blog/2024/ambient-reaches-beta/#alpha-features"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;我们想要包含在环境模式中的许多其他功能已经实现，但在此版本中仍处于 Alpha 状态。请帮助测试它们，以便它们可以在 1.23 或更高版本中升级为 Beta：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;多集群安装&lt;/li&gt;&lt;li&gt;DNS代理&lt;/li&gt;&lt;li&gt;与 sidecar 的互操作性&lt;/li&gt;&lt;li&gt;IPv6/双栈&lt;/li&gt;&lt;li&gt;SOCKS5 支持（用于出站）&lt;/li&gt;&lt;li&gt; Istio 的经典 API（ &lt;code&gt;VirtualService&lt;/code&gt;和&lt;code&gt;DestinationRule&lt;/code&gt; ）&lt;/li&gt;&lt;/ul&gt;&lt;h3 class="wp-block-heading" id="roadmap"&gt;路线图&lt;a href="https://istio.io/latest/blog/2024/ambient-reaches-beta/#roadmap"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;我们有许多功能尚未在环境模式下实现，但计划在即将发布的版本中实现：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;受控的出口流量&lt;/li&gt;&lt;li&gt;多网络支持&lt;/li&gt;&lt;li&gt;改进资源的&lt;code&gt;status&lt;/code&gt;消息，以帮助排除故障和了解网格&lt;/li&gt;&lt;li&gt;虚拟机支持&lt;/li&gt;&lt;/ul&gt;&lt;h2 class="wp-block-heading" id="what-about-sidecars"&gt;边车呢？&lt;a href="https://istio.io/latest/blog/2024/ambient-reaches-beta/#what-about-sidecars"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt; Sidecar 不会消失，并且仍然是 Istio 中的一等公民。您可以继续使用 sidecar，它们将保持完全支持。对于环境模式的 Alpha 或 Beta 范围之外的任何功能，您应该考虑使用 sidecar 模式，直到该功能添加到环境模式。一些用例，例如基于源标签的流量转移，将继续使用 sidecar 模式来最好地实现。虽然我们相信大多数用例最好在环境模式下使用网格，但 Istio 项目仍然致力于持续支持 sidecar 模式。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="try-ambient-mode-today"&gt;今天尝试环境模式&lt;a href="https://istio.io/latest/blog/2024/ambient-reaches-beta/#try-ambient-mode-today"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;随着 Istio 1.22 版本和环境模式 Beta 版本的发布，现在在您自己的工作负载上尝试 Istio 比以往任何时候都更加容易。按照&lt;a href="https://istio.io/latest/docs/ambient/getting-started/"&gt;入门指南&lt;/a&gt;探索环境模式，或阅读我们的新&lt;a href="https://istio.io/latest/docs/ambient/usage/"&gt;用户指南&lt;/a&gt;，了解如何逐步采用环境来实现双向 TLS 和 L4 授权策略、流量管理、丰富的 L7 授权策略等。您可以在&lt;a href="https://slack.istio.io/" rel="noreferrer noopener" target="_blank"&gt;Istio Slack&lt;/a&gt;上的 #ambient 频道中与开发人员互动，或者使用&lt;a href="https://github.com/istio/istio/discussions" rel="noreferrer noopener" target="_blank"&gt;GitHub&lt;/a&gt;上的论坛来解答您可能遇到的任何问题。&lt;/p&gt;&lt;h4 class="wp-block-heading"&gt;在社交媒体上分享这个博客！ &lt;/h4&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Wed, 22 May 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/05/23/say-goodbye-to-your-sidecars-istios-ambient-mode-reaches-beta-in-v1-22/</guid></item><item><title>【Does your observability practice lack maturity? Here’s what to do】您的可观察性实践是否不够成熟？这是该怎么做</title><link>https://www.cncf.io/blog/2024/05/22/does-your-observability-practice-lack-maturity-heres-what-to-do/</link><description>&lt;p&gt;&lt;em&gt;会员博客文章最初由&lt;a href="https://logz.io/author/jake-odonnell/"&gt;Jake O&amp;#39;Donnell&lt;/a&gt;发布在&lt;a href="https://logz.io/blog/observability-maturity/?utm_medium=referral&amp;amp;utm_source=cncf&amp;amp;utm_campaign=obs_maturity_blog"&gt;Logz.io 博客&lt;/a&gt;上&lt;/em&gt;&lt;/p&gt;&lt;p&gt;可观察性并不是什么新鲜事。但组织正在努力采用成熟的可观察性实践，这对业务的影响是显而易见的。&lt;/p&gt;&lt;p&gt;组织正在看到可观察性对其应用程序和基础设施的价值 - &lt;a href="https://logz.io/observability-pulse-2024/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;我们对 500 名全球 IT 专业人员进行的 2024 年可观察性脉搏调查&lt;/a&gt;的结果全面反映了这一点。但受访者面临以下挑战：扩展工具和流程、确保数据安全、管理大量数据及其相关成本，以及团队缺乏如何处理这一切的知识。&lt;/p&gt;&lt;p&gt;我们第一次询问受访者他们在今天的可观察性旅程中所处的位置。总的来说，89% 的受访者在他们的雷达上拥有可观察性——从那些至少计划开始可观察性之旅的人到那些现在正在使用完全可观察性的人。&lt;/p&gt;&lt;p&gt;其中，约 36% 的受访者表示，他们认为自己已经部分开始了他们的旅程，并计划添加更多功能，其次是 20% 的受访者表示他们正计划开始。然而，只有 10% 的人表示他们已经实现了完全可观察。&lt;/p&gt;&lt;p&gt;我们还询问组织目前如何实践可观察性，两个最常见的回答是使用指标来深入了解系统或应用程序 (64%) 以及日志和指标的综合分析 (61%)。可以公平地说，这些是可观察性的相当基本的基石，但看到组织利用这些学科是有启发性的。&lt;/p&gt;&lt;p&gt;一些在更广泛的可观测性市场中受到关注的领域似乎吸收速度较慢。其中包括&lt;a href="https://logz.io/blog/implementing-kubernetes-observability/?utm_medium=referral&amp;amp;utm_source=cncf&amp;amp;utm_campaign=imp_k8s_obs" rel="noreferrer noopener" target="_blank"&gt;Kubernetes&lt;/a&gt;基础设施的统一分析 (27%)、将安全数据与其他遥测数据相结合 (23%) 以及将管道分析应用于优化的相关数据 (18%)。&lt;/p&gt;&lt;p&gt;团队确实看到了可观察性增强带来的好处，60% 的团队表示他们正在改进并加速故障排除，56% 的团队表示他们正在获得对应用程序和基础设施的集中可见性。但重大挑战依然存在。&lt;/p&gt;&lt;p&gt;可观测性成熟度刚刚起步的另一个迹象是， &lt;a href="https://logz.io/blog/how-lack-knowledge-impacts-observability/?utm_medium=referral&amp;amp;utm_source=cncf&amp;amp;utm_campaign=lack_knowledge_obs" rel="noreferrer noopener" target="_blank"&gt;团队之间缺乏知识被认为是获得云原生环境可观测性的最大挑战&lt;/a&gt;，占 48%。这比 2023 年的 30% 有所上升。&lt;/p&gt;&lt;p&gt;面对全球工程人才缺口，即使是那些积极致力于可观察性的组织也似乎缺乏前进所需的关键经验和见解。&lt;/p&gt;&lt;p&gt;尽管可观察性工具得到广泛采用，并且非常注重相关实践和数据的集成，但大多数组织尚未实现可观察性实践的愿景。由于普遍缺乏解决这一普遍问题的专业知识，这一问题更加突出。&lt;/p&gt;&lt;p&gt;此外，尽管大量分析和故障排除工具很流行，并且人们越来越认识到可观测性的相关重要性，但 MTTR（可能是衡量可观测性实践有效性的最关键指标）已连续第三年走向错误的方向。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;如何提高可观察性实践的成熟度&lt;/h2&gt;&lt;p&gt;单独进行可观察性实践（特别是如果您是一个技术资源有限的小型组织）可能是一项极具挑战性的练习。但通过采用工具和框架，您可以开始朝着更好、更成熟的方向前进。&lt;/p&gt;&lt;p&gt;调查的一些结果显示，对某些人来说，事情趋势更加积极。我们首次询问 Pulse 调查受访者对&lt;a href="https://logz.io/learn/opentelemetry-guide/#collector?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;OpenTelemetry&lt;/a&gt; (OTEL) 的使用情况，该开源项目提供了一个可观察性框架，有助于从云原生软件生成和捕获遥测数据。超过四分之三 (76%) 的受访者表示，采用 OTEL 或以 OTEL 为中心的工具对于他们的整体可观测性策略至少有一定的重要性。&lt;/p&gt;&lt;p&gt;随着环境变得越来越复杂，获得可观察性的成本也越来越高，Pulse 的受访者似乎越来越不依赖孤立的开源工具来实现他们的目标。&lt;/p&gt;&lt;p&gt;尽管用于可观察性的开源工具保持了广泛的采用，但组织对它们的依赖似乎比前几年有所减少。报告称其可观测工具中只有不到一半是开源的组织从 2023 年的 46% 增长到 2024 年的 68%。&lt;/p&gt;&lt;p&gt;除了框架之外，组织还应该依靠可信平台来帮助提供实现可观察性目标和发展成熟实践所需的工具。 &lt;a href="https://logz.io/platform/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;Logz.io Open 360™&lt;/a&gt;是一个云原生可观测性平台，为您提供监控、故障排除和修复遥测数据（日志、指标和跟踪）中出现的问题的工具，以及监控关键数据的前瞻性方法。应用程序和基础设施。&lt;/p&gt;&lt;p&gt;通过 Open 360，您将可以访问我们的以下产品：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://logz.io/platform/log-management/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;日志管理&lt;/a&gt;：使用直观且高性能的搜索过滤器快速探索数据，或使用日志模式加速故障排除，在几秒钟内扫描日志数据。使用预构建和可定制的监控仪表板可视化日志中的峰值、下降和其他趋势。我们提供基于 OpenSearch 仪表板的日志管理体验以及&lt;a href="https://logz.io/blog/explore-log-management/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;Explore&lt;/a&gt; （我们基于 OpenSearch 构建的完全托管服务）。&lt;/li&gt;&lt;li&gt; &lt;a href="https://logz.io/platform/infrastructure-monitoring/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;基础设施监控&lt;/a&gt;：对您的指标数据进行切片和切块，以快速深入了解临时基础设施中的任何组件。通过基于开源的集成（例如 Prometheus 或 Logz.io 的遥测收集器）跟踪数万个开箱即用的指标，同时轻松过滤掉不需要的数据以降低成本。&lt;/li&gt;&lt;li&gt; &lt;a href="https://logz.io/platform/distributed-tracing/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;分布式跟踪&lt;/a&gt;：快速发现和调试微服务架构中的问题。首先概述整个服务的应用程序性能，然后快速深入了解各个事务以诊断问题的根本原因。您可以轻松地可视化微服务架构中跨应用程序请求的延迟来源。&lt;/li&gt;&lt;li&gt; &lt;a href="https://logz.io/platform/kubernetes-360/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;Kubernetes 360&lt;/a&gt; ：结合 Kubernetes 日志、指标和跟踪进行统一分析、故障排除，并提供自动上下文化并按节点或部署组织相关遥测数据。该解决方案通过使用生产事件对监控仪表板进行注释，为监控仪表板添加上下文，从而简化了将生产变化与服务运行状况和性能关联起来的过程。&lt;/li&gt;&lt;li&gt; &lt;a href="https://logz.io/platform/app-360/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;App 360&lt;/a&gt; ：统一分布式跟踪、服务拓扑和服务分析，以提供对应用程序运行状况和性能的全面可见性，正式形成传统 APM 的基于应用程序可观察性的替代方案。 App 360 与 Logz.io 的遥测收集器一起使用非常简单，可实现日志、指标和跟踪的自动服务发现、检测和数据收集。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;此外，Logz.io 还开发了一个架构完善的可观察性框架，以帮助像您这样的组织规划、确定优先级并衡量构成可观察性计划的许多要素的进度。这项工作的最终目标是帮助您实现所需的可观测性结果，包括更快的 MTTR、更低的成本、简化的可观测性操作和数据安全。&lt;a href="https://logz.io/request-demo/" rel="noreferrer noopener" target="_blank"&gt;请联系我们了解更多信息&lt;/a&gt;。&lt;/p&gt;&lt;p&gt; &lt;a href="https://logz.io/blog/observability-iq-data-insights/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;您还可以在此处了解有关 Observability IQ 的更多信息&lt;/a&gt;，这是我们基于人工智能的新尖端功能，它有助于以对话方式自动查询和与平台交互。  现在，您不仅可以查看数据，还可以与数据进行动态对话。 Observability IQ 特别邀请您更深入地研究指标，进行分析以揭示全面的见解并促进对系统的无与伦比的理解。&lt;/p&gt;&lt;p&gt;总的来说，尽管在可观察性方面取得了很大进展，但总体而言，组织成熟度和流程效率的实现显然仍处于初级阶段。&lt;/p&gt;&lt;p&gt;组织必须找到一种方法来克服当前的技术和流程挑战，以实现实际可观察​​性，从而满足统一、跨堆栈可见性和高级故障排除的愿景，从而改善用户体验并降低 MTTR。&lt;/p&gt;&lt;p&gt;根据从业者对这项研究的反馈，提高成熟度以最好地利用可用人才，同时更严格地控​​制成本将仍然是关键要求。&lt;/p&gt;&lt;p&gt;如果您想了解 Logz.io Open 360 如何帮助您实现可观察性成熟度目标， &lt;a href="https://logz.io/freetrial/?utm_medium=referral&amp;amp;utm_source=cncf" rel="noreferrer noopener" target="_blank"&gt;请立即注册免费试用&lt;/a&gt;。 &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Tue, 21 May 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/05/22/does-your-observability-practice-lack-maturity-heres-what-to-do/</guid></item><item><title>【AWS Karpenter vs Kubernetes Cluster Autoscaler: choosing the right auto-scaling tool】AWS Karpenter 与 Kubernetes Cluster Autoscaler：选择正确的自动扩展工具</title><link>https://www.cncf.io/blog/2024/05/22/aws-karpenter-vs-kubernetes-cluster-autoscaler-choosing-the-right-auto-scaling-tool/</link><description>&lt;p&gt;&lt;em&gt;会员帖子最初由 Prakarsh 发布在&lt;a href="https://devtron.ai/blog/karpenter-vs-kubernetes-cluster-autoscaler-choosing-right-autoscaling-tool/"&gt;Devtron 博客&lt;/a&gt;上&lt;/em&gt;&lt;/p&gt;&lt;p&gt;TL;DR：了解 AWS Karpenter 和 Kubernetes Cluster Autoscaler 之间的主要区别，并为您的基础设施选择正确的自动扩展工具&lt;/p&gt;&lt;p&gt;&lt;strong&gt;在 Kubernetes 自动扩展的世界中，找到完美的工具可以是速度、控制和兼容性之间的平衡。该领域的两个突出竞争者是 AWS Karpenter 和 Kubernetes Cluster Autoscaler，每个都提供了一组独特的优势和局限性。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;您是否正在为自动扩展基础设施而在 AWS Karpenter 和 Kubernetes Cluster Autoscaler 之间做出选择？别再犹豫了！在这篇博文中，我们将详细分析这两种流行工具之间的差异，并帮助您选择适合您特定需求的工具。&lt;/strong&gt;&lt;/p&gt;&lt;h3 class="wp-block-heading" id="aws-karpenter-the-swift-solution"&gt; AWS Karpenter：Swift 解决方案&lt;/h3&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示卡彭特架构的图表" class="wp-image-109521" height="470" src="https://www.cncf.io/wp-content/uploads/2024/05/karpenter-infra-diagram-devtron.png" width="1052" /&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;快速实例周转：&lt;/strong&gt; Karpenter 在启动新实例方面拥有令人印象深刻的速度，确保了快速的可扩展性。 Karpenter 绕过自动伸缩组的云层直接配置实例，从而使实例可以更快地用于调度。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;多样化的实例类型：&lt;/strong&gt;该工具支持各种实例类型，无需更改基础设施，提供灵活性。只需在目标 Kuberentes 集群中创建一个配置程序/节点池/节点类即可添加不同规格的新节点。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;缺乏可用区重新平衡控制：&lt;/strong&gt;由于缺乏可用区重新平衡等 ASG 组功能，用户对实例可用区放置的控制有限。特别是在使用 Spot 实例时，这可能会成为问题，因为 Karpenter 不断从单个可用区引入额外的节点，因为其默认的价格容量优化的现货分配策略，该策略不断从单个可用区引入 Spot 实例，因为它具有最高的可用性和最低的价格。&lt;/li&gt;&lt;li&gt; &lt;strong&gt;CloudWatch 上缺少 ASG 指标：&lt;/strong&gt; CloudWatch 上缺少 ASG 指标可能会妨碍全面监控。您必须依靠外部指标才能了解最高值&lt;/li&gt;&lt;li&gt;&lt;strong&gt;集群大小管理挑战：&lt;/strong&gt;处理集群内的大量实例大小可能会导致复杂性和管理问题，特别是在使用多个守护程序集时。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;兼容性问题：&lt;/strong&gt;使用构建 k8s 驱动程序时出现了一些报告的问题，影响了平稳运行。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;支持范围受限：&lt;/strong&gt; Karpenter 缺乏对托管在其他云提供商或自托管设置上的 K8s 集群的前期支持。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;对整合的控制较少：&lt;/strong&gt; AWS Karpenter 拥有对两种整合策略的支持：“whenUnderutilized”和“whenEmpty”。这些策略分别规定了 Karpenter 在未充分利用或节点为空时应扩展资源的条件。虽然这为扩展决策提供了基本框架，但它在提供对中间场景的精细控制方面存在不足。&lt;/li&gt;&lt;/ol&gt;&lt;h3 class="wp-block-heading" id="kubernetes-cluster-autoscaler-empowering-control"&gt; Kubernetes Cluster Autoscaler：增强控制能力&lt;/h3&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示 Kubernetes Cluster Autoscaler 架构的流程图" class="wp-image-109523" height="387" src="https://www.cncf.io/wp-content/uploads/2024/05/cluster-autoscaler-architecture-devtron.jpg" width="741" /&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;增强对实例和可用区的控制：&lt;/strong&gt;提供对实例类型及其关联可用区的更精细的控制。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;精细的取消配置控制：&lt;/strong&gt;提供对取消配置过程的更好控制，有助于资源优化。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;多云兼容性：&lt;/strong&gt;跨多个云提供商无缝工作，增强多功能性。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;访问 ASG 指标：&lt;/strong&gt;用户可以访问 ASG 指标，确保全面的监控和洞察。&lt;/li&gt;&lt;li&gt; &lt;strong&gt;AWS 托管节点组兼容性：&lt;/strong&gt;与 AWS 托管节点组兼容，促进 AWS 环境中的操作更顺畅。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;扩展速度稍慢：&lt;/strong&gt;与 Karpenter 相比，Kubernetes Cluster Autoscaler 可能需要更长的时间来扩展和添加新节点。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;所需的基础设施更改：&lt;/strong&gt;合并新节点类型涉及通过 Terraform、EKSCTL 或 CloudFormation 等工具触发基础设施更改。&lt;/li&gt;&lt;/ol&gt;&lt;figure class="wp-block-table"&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;特征&lt;/th&gt;&lt;th&gt;卡彭特&lt;/th&gt;&lt;th&gt;集群自动缩放器&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;安装&lt;/td&gt;&lt;td&gt;舵图&lt;/td&gt;&lt;td&gt;Helm Chart + 某些托管服务中的自动&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;配置速度&lt;/td&gt;&lt;td&gt;快点&lt;/td&gt;&lt;td&gt;慢点&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;到期&lt;/td&gt;&lt;td&gt;新的&lt;/td&gt;&lt;td&gt;稳定的&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;实例类型多样&lt;/td&gt;&lt;td&gt;高（没有基础设施变化）&lt;/td&gt;&lt;td&gt;高（需要进行基础设施更改）&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; AZ再平衡控制&lt;/td&gt;&lt;td&gt;有限的&lt;/td&gt;&lt;td&gt;高的&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CloudWatch 上的 ASG 指标&lt;/td&gt;&lt;td&gt;不&lt;/td&gt;&lt;td&gt;是的&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;集群规模管理&lt;/td&gt;&lt;td&gt;可以很复杂，有多种尺寸&lt;/td&gt;&lt;td&gt;更简单&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;兼容性&lt;/td&gt;&lt;td&gt;有限（AWS，无自托管）&lt;/td&gt;&lt;td&gt;更广泛（多云、自托管）&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;取消配置控制&lt;/td&gt;&lt;td&gt;有限的&lt;/td&gt;&lt;td&gt;更多控制&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;云提供商支持&lt;/td&gt;&lt;td&gt;有限公司（AWS）&lt;/td&gt;&lt;td&gt;更宽的&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AWS 托管节点组&lt;/td&gt;&lt;td&gt;不&lt;/td&gt;&lt;td&gt;是的&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;补救控制&lt;/td&gt;&lt;td&gt;基本（未充分利用/空时）&lt;/td&gt;&lt;td&gt;更细粒度&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 class="wp-block-heading" id="making-the-choice"&gt;做出选择&lt;/h3&gt;&lt;p&gt;虽然 AWS Karpenter 倡导速度和灵活性，但 Kubernetes Cluster Autoscaler 的亮点在于其跨不同云环境的控制和兼容性。该决定最终取决于您的基础设施的具体需求。&lt;/p&gt;&lt;p&gt;对于寻求在 AWS 环境中快速扩展和轻松部署的组织来说，Karpenter 可能是理想的选择。相反，那些优先考虑精细控制、多云兼容性和细致监控的人可能会倾向于 Kubernetes Cluster Autoscaler。&lt;/p&gt;&lt;p&gt;了解每种工具的细微差别、其优势和局限性对于做出符合您的基础设施目标和运营偏好的明智决策至关重要。这两种工具都具有独特的优势，可以满足不断发展的 Kubernetes 环境中的不同需求。&lt;/p&gt;&lt;h3 class="wp-block-heading" id="still-confused-heres-how-to-choose"&gt;仍然困惑吗？以下是如何选择： &lt;/h3&gt;&lt;blockquote class="wp-block-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;blockquote class="wp-block-quote is-style-smaller-quote is-layout-flow wp-block-quote-is-layout-flow"&gt;&lt;p&gt; Kubernetes Cluster Autoscaler 在 AWS 环境之外成为明显的赢家。但是，如果您的基础设施仅限于 AWS，则必须考虑以下问题。&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;p&gt;本快速指南将帮助您根据您的具体需求在 Karpenter 和 Cluster Autoscaler 之间做出选择：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;优先考虑 AWS 上的快速扩展和灵活的实例类型？&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;选择 Karpenter：&lt;/strong&gt;它擅长快速启动具有不同配置的实例，而无需更改基础设施。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;在 AWS 上管理具有多种虚拟机类型的复杂集群而不需要更改基础设施？&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;考虑 Karpenter：&lt;/strong&gt;它处理实例类型/大小变化的更简单方法可能更可取。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;需要对节点扩展和放置进行精细控制？&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;选择 Cluster Autoscaler：&lt;/strong&gt;它可以更精确地控制实例类型、放置区域 (AZ) 和取消配置策略。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;运行多云或自托管 Kubernetes 环境？&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;选择 Cluster Autoscaler：&lt;/strong&gt;它支持各种云提供商和自托管设置，而 Karpenter 目前专注于 AWS。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;正在寻找 ASG 指标的全面监控？&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;选择 Cluster Autoscaler：&lt;/strong&gt;它提供对 CloudWatch 上详细 ASG 指标的访问，以实现更好的监控。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;长话短说&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Karpenter&lt;/strong&gt;在实例类型中提供更快的扩展和灵活性，但对放置和取消配置的控制较少。&lt;/li&gt;&lt;li&gt; &lt;strong&gt;Cluster Autoscaler&lt;/strong&gt;提供更精细的控制和更广泛的云支持，但扩展速度稍慢。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;em&gt;如果您有任何疑问或想要进一步集思广益，请随时在我们积极发展的&lt;a href="https://rebrand.ly/Devtron-Discord?ref=devtron.ai" rel="noreferrer noopener" target="_blank"&gt;Discord 社区&lt;/a&gt;中与我们联系。&lt;/em&gt; &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Tue, 21 May 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/05/22/aws-karpenter-vs-kubernetes-cluster-autoscaler-choosing-the-right-auto-scaling-tool/</guid></item><item><title>【Love, hate, and policy languages: an introduction to decision-making engines】爱、恨和政策语言：决策引擎简介</title><link>https://www.cncf.io/blog/2024/05/21/love-hate-and-policy-languages-an-introduction-to-decision-making-engines/</link><description>&lt;p&gt;&lt;em&gt;Permit.io DevRel 总监 Gabriel L. Manor 的社区帖子&lt;/em&gt;&lt;/p&gt;&lt;p&gt;自早期以来，特定领域的声明性语言一直是软件开发的重要组成部分。它们的创建是为了解决通用编程语言难以有效管理的复杂性和特殊要求，现在它们已成为每个开发人员工具包中不可或缺的一部分。&lt;/p&gt;&lt;p&gt;近年来，在 IAM 领域，授权变得越来越具有挑战性——应用程序变得越来越复杂，用户需求也越来越复杂。结果？专注于授权的特定领域声明性语言的激增。从 Open Policy Agent 的 Rego 等旧语言通过即将推出的 V1 进行了改版，到 OpenFGA 等新语言以及最近创建的 AWS Cedar，授权领域正在取得重大进展，以解决这种日益增长的复杂性。&lt;/p&gt;&lt;p&gt;在本博客中，我们将讨论为什么这些特定于领域的声明性语言如此重要，以及如何利用它们来构建更好、更安全的应用程序。我们将首先讨论特定领域的声明性语言的来源以及它们的创建是为了解决哪些问题 –&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;从汇编到特定领域的声明性语言&lt;/h2&gt;&lt;h3 class="wp-block-heading"&gt;混乱&lt;/h3&gt;&lt;figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"&gt;&lt;div class="wp-block-embed__wrapper"&gt;&lt;/div&gt;&lt;/figure&gt;&lt;p&gt;自早期使用软件解决问题以来，开发人员就一直在尝试提高生产力和自动化程度。早期，我们使用机器语言——手动编写二进制或汇编代码。但这效率很低，因此我们为个人计算机和服务器创建了 C 等语言，以&lt;strong&gt;消除混乱&lt;/strong&gt;。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;复杂&lt;/h3&gt;&lt;p&gt;随着程序变得越来越大和复杂，用 C 编写它们有很多限制并且会适得其反。这导致了面向对象编程设计模式和 C++ 等语言的发展，以更有效地管理复杂性。然而，Java 和 Python 等高级语言引入的抽象虽然使开发变得更容易，但往往会导致性能问题。为了解决这些问题，特别是并发处理问题，开发了 Go 语言，提供更高效的性能。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;速度&lt;/h3&gt;&lt;p&gt;此时，一个新的问题出现了——&lt;strong&gt;速度&lt;/strong&gt;。例如，如果我们想向浏览器交付软件，我们需要以极快的速度交付它，以便用户可以在我们交付软件后立即访问它。这需要将语言转化为框架。如果您考虑像 JavaScript 这样的语言，那么 JavaScript 开发人员是不存在的；有 Node.js 开发人员；有 React 开发人员——我们使用这些语言是因为它们是面向框架的，可以提高软件速度。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;信心&lt;/h3&gt;&lt;p&gt;速度固然很好，但它也带来了一个大问题——它往往会破坏东西。此时，我们最缺乏的就是对我们软件的&lt;strong&gt;信心&lt;/strong&gt;。以用户界面为例——我们希望它们的外观和执行方式是我们可以完全预见和依赖的。这就是特定于领域的声明性语言的用武之地。例如，HTML 虽然本身不​​是一种编程语言，但它创建了特定于领域的信心，确保我们提供的 UI（希望）看起来与用户体验完全相同。&lt;/p&gt;&lt;p&gt;当我们审视这段旅程的起点和终点时，差异立即显而易见。特定于领域的声明性语言随处可见，为我们提供了高度的信心，使我们能够高速做事，处理复杂的用例，并在混乱中恢复秩序。但这对授权有何影响？ &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="从汇编到特定于领域的声明性语言的阶梯图" class="wp-image-108577" height="741" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-1.jpg" width="1317" /&gt;&lt;/figure&gt;&lt;h2 class="wp-block-heading"&gt;细粒度的决策&lt;/h2&gt;&lt;p&gt;最近，软件开发领域出现了一个新问题：&lt;strong&gt;决策&lt;/strong&gt;问题。决策是软件开发最基本的方面之一，简单的“if”语句是任何编程语言的基础。但在绝大多数情况下，这还不够。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示细粒度决策的表格" class="wp-image-108578" height="560" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-2.png" width="1080" /&gt;&lt;/figure&gt;&lt;p&gt;许多现代应用程序需要极其细粒度的决策，特别是有关授权中的安全问题（处理用户或服务在应用程序中可以或不能执行的操作）。细粒度授权带来的挑战使我们经历与编程语言完全相同的旅程，解决相同的问题——混乱、复杂性、速度和信心。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;授权如何变化，我们能做些什么？&lt;/h2&gt;&lt;h3 class="wp-block-heading"&gt;混沌——应用程序架构&lt;/h3&gt;&lt;p&gt;早在 2010 年，作为一名开发人员，您就可以轻松想象拥有一台服务器、一种编程语言、一种数据库和一种应用程序。如今，即使是最基本的应用程序从一开始就启动了大量的服务，但我们仍然不希望用户访问他们不应该访问的数据。这意味着所有这些服务都需要有一个具体的决策来源，并且这些决策必须在整个堆栈中进行简化。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示混沌应用程序架构的流程图" class="wp-image-108579" height="981" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-3.jpg" width="2000" /&gt;&lt;/figure&gt;&lt;h3 class="wp-block-heading"&gt;解决方案——结构&lt;/h3&gt;&lt;p&gt;这个问题的解决方案是以结构的形式出现的。就像C解决了使用机器代码的问题一样。首先，我们需要了解应该在哪里做出这些复杂的决定——&lt;/p&gt;&lt;ul&gt;&lt;li&gt;最基本的层是&lt;strong&gt;代码本身&lt;/strong&gt;。如今的开发人员对代码的交付方式和生产方式有着很大的影响。因此，需要做出的第一个决定是“谁可以交付什么”？或者，更基本地说，“开发人员可以做什么？”&lt;/li&gt;&lt;li&gt;然后是&lt;strong&gt;服务&lt;/strong&gt;。这里存在“哪个服务可以与其他服务对话？”、“它们如何部署在 CI/CD 中并如何相互对话”等问题？&lt;/li&gt;&lt;li&gt;上面是应用程序数据库。在这里，我们需要做出“谁可以从数据库中读取什么？”的决定。&lt;/li&gt;&lt;li&gt;最重要的是，还有应用程序后端，我们需要在其中决定“应用程序用户可以执行哪些操作？”&lt;/li&gt;&lt;li&gt;最重要的是，我们有前端，我们需要问自己“我们的应用程序用户可以看到什么？” &lt;/li&gt;&lt;/ul&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示授权层的流程图" class="wp-image-108580" height="769" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-4.jpg" width="1365" /&gt;&lt;/figure&gt;&lt;p&gt;有了清晰的授权决策结构，我们就可以更轻松地设计出真正可以处理这些决策的解决方案。以下是如何完成此操作的抽象架构：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;集中策略配置：&lt;/strong&gt;将所有配置整合到一个地方将有助于我们简化配置并确保我们遵循我们试图建立的所有标准。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;策略引擎：&lt;/strong&gt;必须拥有一个知道如何采用我们配置的策略并知道如何做出正确决策的软件。该平面需要去中心化有几个原因：首先，它必须反应超快，其次，我们希望堆栈的每个部分都能够直接与该平面通信并根据这些决策强制执行权限。 &lt;/li&gt;&lt;/ul&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示抽象授权服务模型的流程图" class="wp-image-108581" height="771" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-5.jpg" width="1368" /&gt;&lt;/figure&gt;&lt;h3 class="wp-block-heading"&gt;复杂性——数据点和决策疲劳&lt;/h3&gt;&lt;p&gt;在 LAMP 或更旧的架构中，我们曾经只有一个 SQL 数据库。如今，即使是最简单的应用程序也会使用多个数据源，而且这些数据源只会变得越来越复杂。在做出决策时，所有这些数据仍然需要遵守相同的安全级别。这意味着做出这些决策的方式也变得越来越复杂。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示复杂性架构的流程图" class="wp-image-108582" height="745" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-6.jpg" width="1325" /&gt;&lt;/figure&gt;&lt;p&gt;我们拥有的数据越多，我们需要做出的决策就越多，决策过程中需要包含的数据也就越多。在某些时候，它会变得太复杂，我们无法继续支持越来越多的粒度。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示决策疲劳综合症架构的流程图" class="wp-image-108583" height="750" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-7.jpg" width="1331" /&gt;&lt;/figure&gt;&lt;h3 class="wp-block-heading"&gt;解决方案——设计模式&lt;/h3&gt;&lt;p&gt;这个问题可以通过利用适当的&lt;strong&gt;设计模式&lt;/strong&gt;来解决。&lt;/p&gt;&lt;p&gt;我们需要做的第一件事是定义做出决定所需的组件。这是一个非常简单的设计模式提案，使我们能够做到这一点： &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示抽象决策组件设计模式提案的流程图" class="wp-image-108584" height="769" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-8.jpg" width="1366" /&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;策略&lt;/strong&gt;是配置决策的代码&lt;/li&gt;&lt;li&gt;&lt;strong&gt;数据（&lt;/strong&gt;例如应用程序的数据库、我们的身份提供程序以及 Kubernetes 集群的配置）包含我们支持正确决策所需的任何信息。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;上下文&lt;/strong&gt;，例如动态数据、日期和时间以及地理位置，****使我们能够更好地了解做出决策的情况。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;拥有这种结构可以让我们更清楚地思考在决策过程的每一步中应该关注什么。是制定政策吗？是做出决定所需的数据吗？是否存在需要做出此决定的独特背景？&lt;/p&gt;&lt;p&gt;我们还可以考虑我们想要做出的决定类型 -&lt;/p&gt;&lt;ul&gt;&lt;li&gt;决定可能是二元的——是允许还是拒绝某件事？&lt;/li&gt;&lt;li&gt;更复杂的决策涉及过滤数据并根据相关数据做出决策。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;有了所有这些信息，我们应该能够非常轻松地创建一个&lt;a href="https://docs.permit.io/how-to/enforce-permissions/check"&gt;“检查功能”&lt;/a&gt; ，使我们能够在考虑每个相关元素的同时做出决策。此函数将定义一个用户（或主体 - 就像服务）、一个操作（他们想要在应用程序中执行的操作）、他们想要执行该操作的资源以及应允许执行此操作的上下文（如某些决策需要更精细的上下文，而不仅仅是谁对什么资源执行什么操作）：&lt;/p&gt;&lt;p&gt; &lt;code&gt;check({user}, {action}, {resource}, {context});&lt;/code&gt;&lt;/p&gt;&lt;p&gt;如果我们使用这四个参数创建一个服务器，我们可以以允许跨堆栈决策的方式简化设计模式。如果我们想做过滤，我们可以使用所谓的“部分评估”——因为软件是基于源树和抽象二叉树和非二叉树构建的，所以您始终可以将决策转换为查询语言。这使我们能够创建一个引擎，它不仅知道如何根据一组数据做出决策，还知道如何将其转换为查询语言，这有助于我们只获取所需的数据。&lt;/p&gt;&lt;pre class="wp-block-code"&gt; &lt;code class="language-cpp" lang="cpp"&gt;check({ user }, { action }, { resource }, { context }); response = requests.post(&amp;#39;&amp;lt;http://host.docker.internal:8180/v1/is_authorized&amp;gt;&amp;#39;, json={ &amp;quot;principal&amp;quot;: f&amp;quot;User::\\&amp;quot;{user}\\&amp;quot;&amp;quot;, &amp;quot;action&amp;quot;: f&amp;quot;Action::\\&amp;quot;{method.lower()}\\&amp;quot;&amp;quot;, &amp;quot;resource&amp;quot;: f&amp;quot;ResourceType::\\&amp;quot;{original_url.split(&amp;#39;/&amp;#39;)[1]}\\&amp;quot;&amp;quot;, &amp;quot;context&amp;quot;: request.json }) const response = await fetch( &amp;quot;&amp;lt;http://host.docker.internal:8180/v1/is_authorized&amp;gt;&amp;quot;, { method: &amp;quot;POST&amp;quot;, body: JSON.stringify({ principal: `User::\\&amp;quot;${user}\\&amp;quot;`, action: `Action::\\&amp;quot;${method.toLowerCase()}\\&amp;quot;`, resource: `ResourceType::\\&amp;quot;${originalUrl.split(&amp;quot;/&amp;quot;)[1]}\\&amp;quot;`, context: body, }), } );&lt;/code&gt;&lt;/pre&gt;&lt;h3 class="wp-block-heading"&gt;速度——还有更多&lt;/h3&gt;&lt;p&gt;我们正在提供更多软件。这意味着更多的端点和更多的生产环境每时每刻都在增长。这就需要一个我们可以信任的层，以便在访问时始终做出正确的决定。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="显示每月夜间工作速度和多个日常部署报告的流程图" class="wp-image-108585" height="751" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-9.jpg" width="1326" /&gt;&lt;/figure&gt;&lt;h3 class="wp-block-heading"&gt;解决方案——框架&lt;/h3&gt;&lt;p&gt;在授权背景下思考框架的最简单方法是查看策略模型。那里有很多，但让我们关注主要的四个，看看他们做什么，并简要讨论他们的差异 -&lt;/p&gt;&lt;ul&gt;&lt;li&gt;基于策略的访问控制 (PBAC) – 允许我们快速定义策略规则。如果我们有一种可以用来编写授权规则的指定语言，它就允许我们创建授权策略。 PBAC 的问题是它不能考虑太多数据。如果我们的决策需要大量有关用户可以做什么或不能做什么的数据，或者需要利用来自我们的计费系统等系统的数据，那么 PBAC 不会削减它。&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.permit.io/blog/an-introduction-to-role-based-access-control"&gt;基于角色的访问控制 (RBAC)&lt;/a&gt; – 最传统的选择，甚至经常被人们用作授权的替代名称，RBAC 根据预定义的角色对用户进行细分，并定义允许这些角色对某些资源执行哪些操作。它非常简单，但缺乏粒度。&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.permit.io/blog/what-is-rebac"&gt;基于关系的访问控制 (ReBAC)&lt;/a&gt; – ReBAC 利用应用程序内部的关系来派生基于它们的角色。因此，例如，如果我为一个文件夹分配&lt;code&gt;owner&lt;/code&gt;角色，并且在数据库中，该文件夹与其中的文件和文件夹相关联，那么我将能够根据我的&lt;code&gt;owner&lt;/code&gt;角色派生对这些文件和文件夹的权限在父文件夹上。如果我的软件是分布式和去中心化的，ReBAC 允许我将我的授权重新想象为图表，从而允许更细粒度的策略。&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.permit.io/blog/what-is-attribute-based-access-control"&gt;基于属性的访问控制 (ABAC)&lt;/a&gt; – ABAC 是所有模型中最细粒度的，允许我们基于属性创建授权策略。属性（无论是主题属性、资源属性、操作属性还是环境属性）允许我们创建无限复杂的规则来管理我们的访问策略。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;要对这些进行更深入的比较，请查看我们关于&lt;a href="https://www.permit.io/blog/rbac-vs-abac-vs-rebac"&gt;RBAC 与 ABAC 与 ReBAC 的&lt;/a&gt;博客&lt;/p&gt;&lt;p&gt;大多数情况下，授权模型更像是思考工具，而不是具体的指导方针，大多数应用程序最终都会将它们混合在一起。为了说明这一点，我们构建了&lt;a href="https://docs.permit.io/modeling/pink-mobile"&gt;一个相当简单的演示应用程序，供所有用户使用&lt;/a&gt;。&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;信心——不再只是最终用户&lt;/h3&gt;&lt;p&gt;现代应用程序的用户往往基本上想要不可能的功能。一方面，他们希望拥有自己的数据并管理其隐私，您需要支持这一点。这意味着支持非常细粒度的所有权、临时数据访问功能、基于位置的访问策略；你的名字。另一方面，应用程序用户不再是传统意义上的真正用户。想想 DevOps、RevOps 和 AppSec——它们都希望访问代码，并且它们影响软件的交付方式。最重要的是，它们影响访问决策的制定方式。&lt;/p&gt;&lt;p&gt;所有这些复杂性并不包括最新的参与者——人工智能代理和法学硕士。这些造成了非结构化决策的问题，因为他们想要非结构化地访问我们的数据——我们如何为他们提供正确的访问权限&lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="图片显示用户对信心要求的停止标志" class="wp-image-108586" height="768" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-10.jpg" width="1364" /&gt;&lt;/figure&gt;&lt;h3 class="wp-block-heading"&gt;解决方案——特定领域的声明性代码&lt;/h3&gt;&lt;p&gt;使用特定于领域的声明性语言的好处可以帮助我们克服这些挑战，这要归功于将&lt;a href="https://docs.permit.io/integrations/gitops/overview/#policy-as-code"&gt;策略作为代码&lt;/a&gt;的好处 -&lt;/p&gt;&lt;ol&gt;&lt;li&gt;它们是&lt;strong&gt;可读的。&lt;/strong&gt;当您将策略视为用用于授权策略的语言编写的代码时，您应该立即了解正在发生的事情 – 谁可以做什么、在什么时间做什么。&lt;/li&gt;&lt;li&gt;他们提高绩效。由于所有决策都是在单个域中做出的，因此没有任何事情会妨碍他们毫无延迟地做出和交付。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;不仅如此，使用代码定义策略使您能够确保在不同系统和环境中一致执行策略，这有助于防止策略违规并降低未经授权访问的风险。它允许您轻松管理和更新策略，就像使用用于管理和部署软件的相同工具和流程一样。这使得跟踪策略随时间的变化变得更加容易，必要时回滚更改，并且通常可以享受代码世界经过深思熟虑的最佳实践（例如，GitOps）。&lt;/p&gt;&lt;p&gt;政策语言有很多种，每种都更适合处理不同的场景： &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="Open Policy Agent、AWS Cedar 和 OpenFGA 上的策略语言" class="wp-image-108587" height="767" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-11.jpg" width="1365" /&gt;&lt;/figure&gt;&lt;h3 class="wp-block-heading"&gt;开放策略代理 (OPA) – Rego&lt;/h3&gt;&lt;pre class="wp-block-code"&gt; &lt;code class=""&gt;allow { input.user.role == &amp;quot;viewer&amp;quot; validate_department(input.user, input.document) validate_classification(input.user.role, input.document.classification) validate_dynamic_rules(input.user, input.document) } validate_department(user, document) { user.department == document.department } validate_classification(user_role, doc_classification) { role_permissions[user_role][_] == doc_classification } validate_dynamic_rules(user, document) { dynamic_rules[_](user, document) }&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; OPA 最初是一个多用途的政策引擎，这就是它的力量的来源。它是一种极其灵活的语言，可以帮助您对所需的任何类型的决策进行建模。事实是，Rego 可能会变得相当复杂——它不是声明性语言简单直观的完美示例，但它确实为您提供了在任何层处理极其复杂的决策的能力。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="OPA 多域支持" class="wp-image-108588" height="764" src="https://www.cncf.io/wp-content/uploads/2024/05/Untitled-12.jpg" width="1365" /&gt;&lt;/figure&gt;&lt;p&gt;如果您有能力学习这种新语言，并且希望在整个堆栈中拥有一个具有一种策略语言的代理，那么开放策略代理是一个不错的选择。&lt;/p&gt;&lt;p&gt;在这里阅读更多相关信息：&lt;a href="https://www.permit.io/blog/implement-rbac-using-opa"&gt;带有开放策略代理 (OPA) 的 RBAC&lt;/a&gt;&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt; AWS 的雪松&lt;/h3&gt;&lt;pre class="wp-block-code"&gt;&lt;code class="language-cpp" lang="cpp"&gt;permit ( principal == PhotoApp::User::&amp;quot;stacey&amp;quot;, action == PhotoApp::Action::&amp;quot;viewPhoto&amp;quot;, resource ) when { resource in PhotoApp::Account::&amp;quot;stacey&amp;quot; };&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;a href="https://www.permit.io/blog/oss-aws-cedar-is-a-gamechanger-for-iam"&gt;Cedar 一年前由 AWS 推出&lt;/a&gt;，最初是一种用于应用程序级授权的专用语言。与 AWS IAM 不同，它是一种可以在任何应用程序中使用的语言。 Cedar 使用 Dafny 语言提供正确性和性能的科学证明，但在处理非结构化数据时使用它仍然具有挑战性，并且缺乏 ReBAC 支持。它是基于 ABAC 的快速决策的绝佳选择，并且支持开箱即用的审计、静态分析和部分评估。&lt;/p&gt;&lt;p&gt;在这里阅读更多相关信息： &lt;a href="https://www.permit.io/blog/cedar-rbac"&gt;RBAC With AWS&amp;#39; Cedar&lt;/a&gt;&lt;/p&gt;&lt;h3 class="wp-block-heading"&gt;开放FGA&lt;/h3&gt;&lt;p&gt; OpenFGA 本身不是一种策略语言，而是一个基于&lt;a href="https://www.permit.io/blog/zanzibar-vs-opa"&gt;Google 桑给巴尔白皮书的&lt;/a&gt;授权平台，在处理 ReBAC 时，OpenFGA 是一个不错的选择。由Auth0支持和维护并用于授权，内置基于图的引擎，是大规模授权实施的完美解决方案。 OpenFGA 不太适合 RBAC 和 ABAC。&lt;/p&gt;&lt;p&gt;您可以在此处详细了解它与 Cedar 的比较： &lt;a href="https://www.youtube.com/watch?v=sG2OUXes8Hs&amp;amp;t=1s"&gt;OpenFGA&lt;/a&gt;&lt;/p&gt;&lt;p&gt;可以在此处找到所有三种语言的更广泛的概述和比较： &lt;a href="https://www.permit.io/blog/policy-engines"&gt;Open Policy Agent 与 AWS Cedar 和 Google Zanzibar 的比较如何&lt;/a&gt;&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;OPAL – 使用开源在您的应用程序附近运行策略语言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/permitio/opal"&gt;OPAL（开放策略管理层）&lt;/a&gt;&lt;/strong&gt;是政策引擎的开源管理层，例如开放策略代理 (OPA) 和&lt;strong&gt;&lt;a href="https://github.com/permitio/cedar-agent"&gt;AWS 的 Cedar Agent&lt;/a&gt;&lt;/strong&gt; 。 OPAL 自动同步策略存储和策略决策所需的实时数据，确保始终使用最新信息评估策略。&lt;/p&gt;&lt;p&gt; OPAL 允许您充分利用这些策略语言，使您的授权策略达到现代应用程序所需的速度。&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;请考虑&lt;a href="https://github.com/permitio/opal"&gt;在 GitHub 上给 OPAL 一颗星&lt;/a&gt;来支持我们的开源工作。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;结论&lt;/h2&gt;&lt;p&gt;事实证明，特定领域的声明性语言是管理软件开发中复杂任务的关键工具。它们帮助我们构建高性能、安全且用户友好的系统。无论是管理细粒度的访问控制还是适应人工智能代理的需求，这些语言都让我们保持领先地位。&lt;/p&gt;&lt;p&gt;授权是任何现代应用程序的关键组成部分，我们可以看到特定领域的声明性语言给这个领域带来的巨大好处。开放策略代理 (OPA)、AWS 的 Cedar 和 OpenFGA 使我们能够应对 IAM 现代状态带来的挑战，而 OPAL（开放策略管理层）通过自动执行策略存储与真实策略之间的同步来增强其功能。 -决策所需的时间数据，确保政策与最新的相关数据一致应用。这种集成使我们能够创建安全、可靠和动态的授权系统，能够适应不断变化的条件和要求。&lt;/p&gt;&lt;p&gt;想与志同道合的人讨论政策语言吗？我们的 OPAL Slack 社区是最大的授权社区。现在加入 → &lt;a href="http://io.permit.io/slack"&gt;io.permit.io/slack&lt;/a&gt; &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Mon, 20 May 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/05/21/love-hate-and-policy-languages-an-introduction-to-decision-making-engines/</guid></item><item><title>【Cloud Native Glossary — the Russian version is live!】云原生术语表 — 俄语版本已上线！</title><link>https://www.cncf.io/blog/2024/05/20/cloud-native-glossary-the-russian-version-is-live/</link><description>&lt;p&gt;&lt;em&gt;社区帖子&lt;/em&gt;&lt;em&gt;，作者： &lt;a href="https://github.com/kirkonru"&gt;&lt;strong&gt;Kirill Kononovich&lt;/strong&gt;&lt;/a&gt; 、 &lt;a href="https://www.linkedin.com/in/shurupov/"&gt;&lt;strong&gt;Dmitry Shurupov&lt;/strong&gt;&lt;/a&gt; 、 &lt;a href="https://github.com/tym83"&gt;&lt;strong&gt;Timur Tukaev&lt;/strong&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://glossary.cncf.io/"&gt;&lt;em&gt;云原生术语表&lt;/em&gt;&lt;/a&gt;&lt;em&gt;是&lt;/em&gt;&lt;em&gt;由 CNCF 商业价值小组委员会领导的项目。其目标是用清晰简单的语言解释云原生概念，而不需要任何先前的技术知识。我们正在将术语表的英文版本地化为尽可能多的语言。本周我们重点关注俄语以及为俄语使用者本地化术语表的团队！&lt;/em&gt;&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;关于俄语和俄语词汇表&lt;/h2&gt;&lt;p&gt;尤里·加加林的名言“我们走吧！” （“Поехали！”）预示着太空探索新时代的开始。三十年后，GNU通用公共许可证（GPL）的发布和第一个Linux内核的发布标志着另一个时代的黎明：世界各地的人们共同致力于软件造福所有人的时代。&lt;/p&gt;&lt;p&gt;我们相信，无国界合作是我们文明成功的关键。这就是为什么我们致力于让世界各地的俄语使用者更轻松地参与开源项目。&lt;/p&gt;&lt;p&gt;我们很高兴地宣布 CNCF 云原生术语表的俄语本地化现已全面推出！该术语表是用于学习云原生计算的综合资源，我们很高兴能够参与其中，让每个人（无论其母语是什么）都可以使用它。&lt;/p&gt;&lt;p&gt;东斯拉夫语言属于印欧语系，在东斯拉夫语言中，俄语是全球使用人数最多的语言，有超过 2.58 亿人使用该语言。俄语不仅是世界上使用最广泛的斯拉夫语言，也是欧洲最常见的母语，也是欧亚大陆地理分布最广的语言。&lt;/p&gt;&lt;p&gt;俄语西里尔字母由33个字母组成，其中10个元音、21个辅音和两个不代表任何声音的字母。这些字母与其他斯拉夫语言中使用的字母相似，尽管某些字母的发音方式不同。&lt;/p&gt;&lt;p&gt;全世界有超过 2.58 亿人使用俄语，其中主要是前苏联国家。蒙古、中国、德国、以色列和美国的重要少数群体也使用这种语言。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;您为什么认为俄语术语表本地化很重要？&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;让俄语社区更容易获取云原生知识。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;云原生计算是一个快速发展的领域，CNCF 的云原生术语表对于任何想要了解这种构建和运行软件的新方式的人来说都是重要资源。然而，该术语表目前仅提供英语和其他几种语言版本，这对于讲俄语的开发人员和其他专业人士来说可能是一个障碍。将术语表本地化为俄语将使这个庞大且不断发展的社区更容易使用它，并有助于加速云原生技术在俄语国家的采用。它还将有助于锚定最相关的俄语术语，并记录从英语借用的术语的既定拼写。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;促进云原生社区的多样性和包容性。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;云原生社区是一个全球性社区，但确保听到所有声音很重要。通过将 CNCF 云原生术语表本地化为俄语，我们可以传达一个强烈的信息：我们致力于多样性和包容性，并且我们希望每个人都能够参与云原生生态系统。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;创造新的合作和创新机会。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;当来自不同文化和背景的人们聚集在一起时，他们可以创造新的创新解决方案。通过提供俄语版 CNCF 云原生术语表，我们可以鼓励更多俄语开发人员和其他专业人士为云原生项目做出贡献。这可能会带来新的想法和新的做事方式，这将使整个云原生社区受益。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;认识俄语词汇表团队&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/kirkonru"&gt;&lt;strong&gt;基里尔·科诺诺维奇&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;基里尔是弗兰特的一名翻译。他是各种操作系统项目（例如&lt;a href="https://github.com/werf/werf"&gt;werf&lt;/a&gt; 、 &lt;a href="https://github.com/werf/trdl"&gt;trdl&lt;/a&gt;以及 Kubernetes 文档）的俄语或英语本地化背后的人员之一。他的兴趣范围从 Python 编程到法学硕士微调和开发人工智能系统。&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.linkedin.com/in/shurupov/"&gt;&lt;strong&gt;德米特里·舒鲁波夫&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Palark GmbH 的联合创始人，负责领导与 DevOps 相关的技术内容制作和社区关系。自 2001 年以来，Dmitry 一直是开源软件的忠实用户和爱好者，他在在线和印刷媒体上撰写了无数与 Linux 相关的文章，并为各种开源项目做出了贡献。自 2022 年以来，他一直领导 Kubernetes 文档的俄语翻译。&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/tym83"&gt;&lt;strong&gt;帖木儿·图卡耶夫&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Timur 是 Fl​​ant 的技术营销主管。 Timur 是一名 OSS 爱好者，熟悉云趋势和发展。他曾参与 Scribus 文档的翻译。 Timur 是当地一所大学新闻系改用 Linux 的幕后推手。他对 Kotlin 编程充满热情，并主持了一个有关现代媒体如何运作的播客。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;您为什么决定本地化术语表？为什么它对你很重要？&lt;/h2&gt;&lt;p&gt;在每个人都说同一种语言的世界中，您可以与全球任何地方的任何人进行交流。然而，欣赏语言和文化的多样性也很重要。每种语言都有其独特的美感和表现力。&lt;/p&gt;&lt;p&gt; CNCF 的云原生术语表就像云原生世界的罗塞塔石碑。它提供了一种通用语言，每个人都可以使用它来讨论云原生技术。&lt;/p&gt;&lt;p&gt;将 CNCF 云原生术语表本地化为俄语就像向数百万人赠送演讲礼物。这将使他们能够充分参与云原生社区并分享他们的知识和想法。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;体验如何？&lt;/h2&gt;&lt;p&gt;总的来说，这次经历非常有益。我们很高兴参与该项目并成为 CNCF 社区的一部分。社区如此庞大、多元化且充满支持，我们很高兴有机会做出贡献。我们很高兴能借此机会更多地了解 CNCF 及其使命，以及该基金会如何帮助塑造云计算的未来。&lt;/p&gt;&lt;p&gt;尽管如此，由于语言的差异，一路上还是遇到了一些挑战。在某些情况下，我们必须调整术语以使潜在读者能够理解它们。为某些术语找到正确的语气或具体翻译也很困难。为了确保翻译准确并传达预期含义，我们必须在贡献者之间进行大量的讨论和协商。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;您想与社区分享任何经验教训吗？&lt;/h2&gt;&lt;p&gt;从事任何开源项目就像爬山一样。你一步步向上，最终更广阔的视野展现在你的面前。你最大的挑战是迈出第一步。不要害怕去做，因为周围总有一些有爱心的人随时准备帮助和支持你。&lt;/p&gt;&lt;h2 class="wp-block-heading"&gt;其他人应该如何以及为何做出贡献&lt;/h2&gt;&lt;p&gt;为 CNCF 云原生术语表做出贡献是一个很好的方法：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;了解云原生计算的基本概念和技术。该术语表提供了云原生环境的全面概述，包括关键术语的定义、示例以及其他资源的链接。&lt;/li&gt;&lt;li&gt;加深您对云原生术语的理解。该术语表由专家团队精心策划，提供了云原生术语的准确且最新的定义。您还可以贡献自己的定义并帮助改进每个人的术语表。&lt;/li&gt;&lt;li&gt;与云原生社区的其他成员建立关系。 CNCF 社区热情且支持，为术语表做出贡献是结识其他热衷于云原生计算的开发人员和专业人士的好方法。&lt;/li&gt;&lt;/ul&gt;&lt;h2 class="wp-block-heading"&gt;您还有什么需要我们通知的吗？&lt;/h2&gt;&lt;p&gt;想象一个每个人都可以获得知识和资源的世界，无论他们的母语是什么。云原生术语表提供了进入这个世界的一个很好的切入点。我们很高兴将其提供给俄语社区。如果您对俄语充满热情并希望提高您的语言技能，我们邀请您加入我们的旅程。我们走吧！&lt;/p&gt;&lt;p&gt; PS 请随时在&lt;a href="https://cloud-native.slack.com/archives/C05G46RMQTX"&gt;Slack 频道&lt;/a&gt;或&lt;a href="https://t.me/ru_cloudnative"&gt;Telegram 聊天&lt;/a&gt;中给我们留言 — 这会很有趣！ &lt;/p&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Sun, 19 May 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/05/20/cloud-native-glossary-the-russian-version-is-live/</guid></item><item><title>【Announcing Flux 2.3 GA】宣布 Flux 2.3 GA</title><link>https://www.cncf.io/blog/2024/05/17/announcing-flux-2-3-ga/</link><description>&lt;p&gt;&lt;em&gt;项目帖子最初由 Stefan Prodan 发布在&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/"&gt;Flux 博客&lt;/a&gt;上&lt;/em&gt;&lt;/p&gt;&lt;p&gt;我们很高兴地宣布&lt;a href="https://github.com/fluxcd/flux2/releases/tag/v2.3.0"&gt;Flux v2.3.0&lt;/a&gt;发布！在这篇文章中，我们将重点介绍此版本中包含的一些新功能和改进。 &lt;/p&gt;&lt;figure class="wp-block-image size-full"&gt;&lt;img alt="Helm 横幅 Flux v2.3.0 正式发布 helm-controller 和 Helm Kubernetes CRD" class="wp-image-109440" height="1260" src="https://www.cncf.io/wp-content/uploads/2024/05/featured-image-1.png" width="2240" /&gt;&lt;/figure&gt;&lt;h2 class="wp-block-heading" id="general-availability-of-flux-helm-features-and-apis"&gt; Flux Helm 功能和 API 全面可用&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#general-availability-of-flux-helm-features-and-apis"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;此版本标志着 Flux 项目的一个重要里程碑，经过近四年的开发，helm 控制器和 Helm 相关 API 已普遍可用。&lt;/p&gt;&lt;p&gt;以下 Kubernetes CRD 已升级为 GA：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://fluxcd.io/flux/components/helm/helmreleases/"&gt;HelmRelease&lt;/a&gt; – &lt;code&gt;helm.toolkit.fluxcd.io/v2&lt;/code&gt;&lt;/li&gt;&lt;li&gt; &lt;a href="https://fluxcd.io/flux/components/source/helmcharts/"&gt;HelmChart&lt;/a&gt; – &lt;code&gt;source.toolkit.fluxcd.io/v1&lt;/code&gt;&lt;/li&gt;&lt;li&gt; &lt;a href="https://fluxcd.io/flux/components/source/helmrepositories/"&gt;HelmRepository&lt;/a&gt; – &lt;code&gt;source.toolkit.fluxcd.io/v1&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt; Helm 功能和 API 已经过社区在生产环境中的实际测试，现在被认为是稳定的。 Helm API 的未来更改将以向后兼容的方式进行，我们将在可预见的未来继续支持和维护它们。&lt;/p&gt;&lt;h3 class="wp-block-heading" id="enhanced-helm-oci-support"&gt;增强的 Helm OCI 支持&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#enhanced-helm-oci-support"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;HelmRelease&lt;/code&gt; v2 API 附带了一个新字段&lt;a href="https://fluxcd.io/flux/components/helm/helmreleases/#chart-reference"&gt;&lt;code&gt;.spec.chartRef&lt;/code&gt;&lt;/a&gt; ，该字段添加了对在&lt;code&gt;HelmRelease&lt;/code&gt;中引用&lt;code&gt;OCIRepository&lt;/code&gt;和&lt;code&gt;HelmChart&lt;/code&gt;对象的支持。当使用&lt;code&gt;.spec.chartRef&lt;/code&gt;而不是&lt;code&gt;.spec.chart&lt;/code&gt;时，控制器允许跨多个&lt;code&gt;HelmRelease&lt;/code&gt;资源重用 Helm 图表版本。&lt;/p&gt;&lt;p&gt;从这个版本开始，引用容器注册表中存储的 Helm 图表的推荐方法是通过&lt;a href="https://fluxcd.io/flux/components/source/ocirepositories/"&gt;OCIRepository&lt;/a&gt; 。&lt;/p&gt;&lt;p&gt;使用&lt;code&gt;OCIRepository&lt;/code&gt;对象代替&lt;code&gt;HelmRepository&lt;/code&gt;可以提高控制器的性能并简化调试过程。 &lt;code&gt;OCIRepository&lt;/code&gt;在管理 Helm 图表方面提供了更大的灵活性，因为它允许通过&lt;code&gt;tag&lt;/code&gt; 、 &lt;code&gt;semver&lt;/code&gt;或 OCI &lt;code&gt;digest&lt;/code&gt;固定来定位 Helm 图表版本。如果容器注册表中的图表版本被覆盖，控制器将检测上游 OCI 摘要中的更改，并相应地协调&lt;code&gt;HelmRelease&lt;/code&gt;资源。&lt;/p&gt;&lt;p&gt; &lt;code&gt;HelmRelease&lt;/code&gt;引用&lt;code&gt;OCIRepository&lt;/code&gt;的示例：&lt;/p&gt;&lt;pre class="wp-block-code"&gt; &lt;code class="language-javascript" lang="javascript"&gt;&lt;strong&gt;apiVersion&lt;/strong&gt; : helm.toolkit.fluxcd.io/v2 &lt;strong&gt;kind&lt;/strong&gt; : HelmRelease &lt;strong&gt;metadata&lt;/strong&gt; : &lt;strong&gt;name&lt;/strong&gt; : metrics-server &lt;strong&gt;spec&lt;/strong&gt; : &lt;strong&gt;interval&lt;/strong&gt; : 10m &lt;strong&gt;chartRef&lt;/strong&gt; : &lt;strong&gt;kind&lt;/strong&gt; : OCIRepository &lt;strong&gt;name&lt;/strong&gt; : metrics-server &lt;strong&gt;driftDetection&lt;/strong&gt; : &lt;strong&gt;mode&lt;/strong&gt; : enabled &lt;strong&gt;values&lt;/strong&gt; : &lt;strong&gt;apiService&lt;/strong&gt; : &lt;strong&gt;create&lt;/strong&gt; : &lt;strong&gt;true&lt;/strong&gt; &lt;strong&gt;---&lt;/strong&gt; &lt;strong&gt;apiVersion&lt;/strong&gt; : source.toolkit.fluxcd.io/v1beta2 &lt;strong&gt;kind&lt;/strong&gt; : OCIRepository &lt;strong&gt;metadata&lt;/strong&gt; : &lt;strong&gt;name&lt;/strong&gt; : metrics-server &lt;strong&gt;spec&lt;/strong&gt; : &lt;strong&gt;interval&lt;/strong&gt; : 12h &lt;strong&gt;layerSelector&lt;/strong&gt; : &lt;strong&gt;mediaType&lt;/strong&gt; : &amp;quot;application/vnd.cncf.helm.chart.content.v1.tar+gzip&amp;quot; &lt;strong&gt;operation&lt;/strong&gt; : copy &lt;strong&gt;url&lt;/strong&gt; : oci://docker.io/bitnamicharts/metrics-server &lt;strong&gt;ref&lt;/strong&gt; : &lt;strong&gt;semver&lt;/strong&gt; : &amp;quot;&amp;gt;=7.0.0&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;h3 class="wp-block-heading" id="improved-observability-of-helm-releases"&gt;改进了 Helm 版本的可观察性&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#improved-observability-of-helm-releases"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;根据大众的需求，helm-controller 现在除了&lt;code&gt;version&lt;/code&gt;信息之外还发出用 Helm 图表&lt;code&gt;appVersion&lt;/code&gt;注释的 Kubernetes 事件。为 Helm 版本配置&lt;a href="https://fluxcd.io/flux/components/notification/alerts/"&gt;警报&lt;/a&gt;时， &lt;code&gt;appVersion&lt;/code&gt;现在可用作警报元数据中的字段，并显示在通知消息中。 &lt;code&gt;appVersion&lt;/code&gt;字段还包含在&lt;code&gt;HelmRelease&lt;/code&gt;状态和&lt;code&gt;gotk_resource_info&lt;/code&gt; Prometheus 指标中。&lt;/p&gt;&lt;p&gt;当使用&lt;code&gt;OCIRepository&lt;/code&gt;作为&lt;code&gt;HelmRelease&lt;/code&gt;图表源时，控制器还将在 Kubernetes 事件和&lt;code&gt;HelmRelease&lt;/code&gt;状态中包含 Helm 图表工件的 OCI 摘要。&lt;/p&gt;&lt;h3 class="wp-block-heading" id="benchmark-results"&gt;基准测试结果&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#benchmark-results"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;为了衡量掌舵控制器 GA 对现实世界的影响，我们建立了衡量平均生产时间 (MTTP) 的基准。 MTTP 基准衡量 Flux 将应用程序更改部署到生产中所需的时间。以下是在 GitHub 托管运行器（Ubuntu，16 核）上运行的基准测试结果：&lt;/p&gt;&lt;figure class="wp-block-table"&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;对象&lt;/th&gt;&lt;th&gt;类型&lt;/th&gt;&lt;th&gt;助焊剂成分&lt;/th&gt;&lt;th&gt;期间&lt;/th&gt;&lt;th&gt;最大内存&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;舵图&lt;/td&gt;&lt;td&gt;源控制器&lt;/td&gt;&lt;td&gt;25秒&lt;/td&gt;&lt;td&gt;40米&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;头盔释放&lt;/td&gt;&lt;td&gt;舵控制器&lt;/td&gt;&lt;td&gt;28秒&lt;/td&gt;&lt;td&gt;190米&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;500&lt;/td&gt;&lt;td&gt;舵图&lt;/td&gt;&lt;td&gt;源控制器&lt;/td&gt;&lt;td&gt;45秒&lt;/td&gt;&lt;td&gt;68米&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;500&lt;/td&gt;&lt;td&gt;头盔释放&lt;/td&gt;&lt;td&gt;舵控制器&lt;/td&gt;&lt;td&gt;2分45秒&lt;/td&gt;&lt;td&gt;250米&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1000&lt;/td&gt;&lt;td&gt;舵图&lt;/td&gt;&lt;td&gt;源控制器&lt;/td&gt;&lt;td&gt;1分30秒&lt;/td&gt;&lt;td&gt;110米&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1000&lt;/td&gt;&lt;td&gt;头盔释放&lt;/td&gt;&lt;td&gt;舵控制器&lt;/td&gt;&lt;td&gt;8米1秒&lt;/td&gt;&lt;td&gt;490米&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;与 Flux v2.2 相比，该版本中 helm-controller 的内存消耗改善了很多，尤其是当集群注册了数百个 CRD 时。在 Flux v2.2 中，Kubernetes v1.28 上的 helm-controller 内存不足，仅注册了 100 个 CRD。而在 Kubernetes v1.29 上的 Flux v2.3 中，它可以毫无问题地处理 500 多个 CRD。鉴于这些结果，建议将 Kubernetes 控制平面升级到 v1.29，将 Flux 升级到 v2.3。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="image-update-automation-improvements"&gt;图像更新自动化改进&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#image-update-automation-improvements"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt; &lt;code&gt;ImageUpdateAutomation&lt;/code&gt; API 已升级至 v1beta2，并且重构了 image-automation-controller 以增强协调过程。&lt;/p&gt;&lt;p&gt; v1beta2 API 附带了一个新的&lt;a href="https://fluxcd.io/flux/components/image/imageupdateautomations/#message-template"&gt;模板模型&lt;/a&gt;，可用于在控制器更新 Git 存储库中的图像引用时自定义提交消息。提交模板支持对包含策略标记的文件所做的更改的旧值和新值。此外，提交消息包含在控制器发出的 Kubernetes 事件中，从而可以更好地了解自动化过程。&lt;/p&gt;&lt;p&gt; &lt;code&gt;ImageUpdateAutomation&lt;/code&gt; API 现在支持使用新字段&lt;a href="https://fluxcd.io/flux/components/image/imageupdateautomations/#policyselector"&gt;&lt;code&gt;.spec.policySelector&lt;/code&gt;&lt;/a&gt;中的标签选择器选择&lt;code&gt;ImagePolicies&lt;/code&gt; 。&lt;/p&gt;&lt;h3 class="wp-block-heading" id="migration-to-v1beta2-template-model"&gt;迁移到 v1beta2 模板模型&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#migration-to-v1beta2-template-model"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;要迁移到 v1beta2 API，请将&lt;code&gt;ImageUpdateAutomation&lt;/code&gt;资源中的&lt;code&gt;apiVersion&lt;/code&gt;字段更新为&lt;code&gt;image.toolkit.fluxcd.io/v1beta2&lt;/code&gt; ，并修改&lt;code&gt;messageTemplate&lt;/code&gt;以使用&lt;code&gt;Changed&lt;/code&gt;模板数据。&lt;/p&gt;&lt;p&gt;示例模板：&lt;/p&gt;&lt;pre class="wp-block-code"&gt; &lt;code class="language-javascript" lang="javascript"&gt;&lt;strong&gt;apiVersion&lt;/strong&gt; : image.toolkit.fluxcd.io/v1beta2 &lt;strong&gt;kind&lt;/strong&gt; : ImageUpdateAutomation &lt;strong&gt;metadata&lt;/strong&gt; : &lt;strong&gt;name&lt;/strong&gt; : &amp;lt;automation-name&amp;gt; &lt;strong&gt;spec&lt;/strong&gt; : &lt;strong&gt;git&lt;/strong&gt; : &lt;strong&gt;commit&lt;/strong&gt; : &lt;strong&gt;messageTemplate&lt;/strong&gt; : |-&lt;em&gt;
&lt;/em&gt;&lt;em&gt; Automated image update&lt;/em&gt;&lt;em&gt;                
&lt;/em&gt;&lt;em&gt; Changes:&lt;/em&gt;&lt;em&gt; {{ range .Changed.Changes -}}&lt;/em&gt;&lt;em&gt; - {{ .OldValue }} -&amp;gt; {{ .NewValue }}&lt;/em&gt;&lt;em&gt; {{ end -}}&lt;/em&gt;&lt;em&gt;        
&lt;/em&gt;&lt;em&gt; Files:&lt;/em&gt;&lt;em&gt; {{ range $filename, $_ := .Changed.FileChanges -}}&lt;/em&gt;&lt;em&gt; - {{ $filename }}&lt;/em&gt;&lt;em&gt; {{ end -}}&lt;/em&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;生成的提交消息示例：&lt;/p&gt;&lt;pre class="wp-block-code"&gt; &lt;code class="language-javascript" lang="javascript"&gt;Automated image update Changes: - docker.io/nginx:1.25.4 -&amp;gt; docker.io/nginx:1.25.5 - docker.io/org/app:1.0.0 -&amp;gt; docker.io/org/app:1.0.1 Files: - apps/my-app/deployment.yaml&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;有关更多示例和详细信息，请参阅&lt;a href="https://fluxcd.io/flux/components/image/imageupdateautomations/#message-template"&gt;ImageUpdateAutomation 文档&lt;/a&gt;。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="signatures-verification-with-notation"&gt;使用符号进行签名验证&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#signatures-verification-with-notation"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt; Flux 源控制器现在支持验证使用&lt;a href="https://github.com/notaryproject/notation"&gt;Notation&lt;/a&gt;签名的 OCI 工件的真实性（CNCF Notary 项目）。&lt;/p&gt;&lt;p&gt;要启用Notation签名验证，请参阅以下文档：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;a href="https://fluxcd.io/flux/components/source/helmcharts/#notation"&gt;HelmChart 验证&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/source/ocirepositories/#notation"&gt;OCI存储库验证&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;此外，Flux CLI 现在支持使用&lt;code&gt;flux create secret notation&lt;/code&gt;命令通过 Notation 信任策略生成 Kubernetes 机密。&lt;/p&gt;&lt;p&gt;非常感谢 Microsoft 为该功能的开发做出的贡献！&lt;/p&gt;&lt;h2 class="wp-block-heading" id="terraform-provider-improvements"&gt; Terraform 提供程序改进&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#terraform-provider-improvements"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt; &lt;a href="https://github.com/fluxcd/terraform-provider-flux"&gt;Flux Terraform 提供程序&lt;/a&gt;经过了重大重构，现在支持 Flux 组件的气隙引导、漂移检测和校正，以及升级和恢复集群内 Flux 控制器的能力。从这个版本开始，该提供程序与 OpenTofu 完全兼容。&lt;/p&gt;&lt;p&gt; &lt;a href="https://github.com/fluxcd/terraform-provider-flux?tab=readme-ov-file#guides" rel="noreferrer noopener" target="_blank"&gt;提供程序&lt;/a&gt;&lt;a href="https://github.com/fluxcd/terraform-provider-flux?tab=readme-ov-file#guides"&gt;文档&lt;/a&gt;已更新，包含示例和详细的使用说明。&lt;/p&gt;&lt;h4 class="wp-block-heading"&gt;新维护者&lt;/h4&gt;&lt;p&gt;我们非常高兴地宣布&lt;a href="https://github.com/swade1987"&gt;Steven Wade&lt;/a&gt;已加入 Flux 项目，作为 Terraform 提供商的维护者。 Steven 一直是 Flux 项目的长期贡献者，我们很高兴他能加入！&lt;/p&gt;&lt;h2 class="wp-block-heading" id="controllers-improvements"&gt;控制器改进&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#controllers-improvements"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Flux &lt;code&gt;Kustomization&lt;/code&gt; API 获得两个可选字段&lt;code&gt;.spec.namePrefix&lt;/code&gt;和&lt;code&gt;.spec.nameSuffix&lt;/code&gt; ，可用于指定要添加到所有托管资源名称中的前缀和后缀。&lt;/li&gt;&lt;li&gt; kustomize-controller 现在支持&lt;code&gt;--feature-gates=StrictPostBuildSubstitutions=true&lt;/code&gt;标志，启用后，如果文件中声明了没有默认值的变量但输入变量中缺少默认值，则构建后替换将失败。&lt;/li&gt;&lt;li&gt;通知控制器&lt;code&gt;Receiver&lt;/code&gt; API 已扩展为支持&lt;a href="https://fluxcd.io/flux/components/notification/receivers/#cdevents"&gt;CDEvents&lt;/a&gt; 。&lt;/li&gt;&lt;li&gt; &lt;code&gt;OCIRepository&lt;/code&gt; API 已得到扩展，支持&lt;a href="https://fluxcd.io/flux/components/source/ocirepositories/#semverfilter-example"&gt;semver 过滤&lt;/a&gt;。&lt;/li&gt;&lt;li&gt; &lt;code&gt;HelmChart&lt;/code&gt; API v1 附带了一个新的可选字段&lt;a href="https://fluxcd.io/flux/components/source//helmcharts/#ignore-missing-values-files"&gt;&lt;code&gt;.spec.ignoreMissingValuesFiles&lt;/code&gt;&lt;/a&gt; 。&lt;/li&gt;&lt;/ul&gt;&lt;h2 class="wp-block-heading" id="cli-improvements"&gt; CLI 改进&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#cli-improvements"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;boostrap 功能已扩展为支持&lt;a href="https://fluxcd.io/flux/installation/bootstrap/oracle-vbs-git-repositories/"&gt;Oracle VBS&lt;/a&gt;存储库。&lt;/li&gt;&lt;li&gt; &lt;a href="https://fluxcd.io/flux/installation/bootstrap/azure-devops/#bootstrap-using-ssh-keys"&gt;Azure DevOps&lt;/a&gt;存储库的 boostrap 过程已更新，支持 SSH RSA SHA-2 密钥。&lt;/li&gt;&lt;li&gt; &lt;code&gt;flux bootstrap&lt;/code&gt;命令获得一个新标志&lt;code&gt;--ssh-hostkey-algos&lt;/code&gt; ，可用于指定用于 SSH 连接的主机密钥算法。&lt;/li&gt;&lt;li&gt; &lt;code&gt;flux bootstrap&lt;/code&gt;和&lt;code&gt;flux install&lt;/code&gt;命令现在支持&lt;code&gt;--registry-creds&lt;/code&gt;标志，该标志可用于为存储在私有注册表中的容器映像生成映像拉取机密。&lt;/li&gt;&lt;li&gt;添加了一个新命令&lt;code&gt;flux envsubst&lt;/code&gt; ，可用于复制 Flux &lt;code&gt;Kustomization&lt;/code&gt;构建后替换的行为。&lt;/li&gt;&lt;li&gt; &lt;code&gt;flux create source oci&lt;/code&gt;命令现在支持&lt;code&gt;--verify-subject&lt;/code&gt;和&lt;code&gt;--verify-issuer&lt;/code&gt;进行共同签名无密钥验证。&lt;/li&gt;&lt;li&gt;添加了用于管理 HelmChart 对象的新命令： &lt;code&gt;flux create|delete|export source chart&lt;/code&gt; 。&lt;/li&gt;&lt;/ul&gt;&lt;h2 class="wp-block-heading" id="breaking-changes-and-deprecations"&gt;重大变更和弃用&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#breaking-changes-and-deprecations"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;已弃用的字段已从&lt;code&gt;HelmRelease&lt;/code&gt; v2 API 中删除：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;code&gt;.spec.chart.spec.valuesFile&lt;/code&gt;替换为&lt;code&gt;.spec.chart.spec.valuesFiles&lt;/code&gt;&lt;/li&gt;&lt;li&gt; &lt;code&gt;.spec.postRenderers.kustomize.patchesJson6902&lt;/code&gt;替换为&lt;code&gt;.spec.postRenderers.kustomize.patches&lt;/code&gt;&lt;/li&gt;&lt;li&gt; &lt;code&gt;.spec.postRenderers.kustomize.patchesStrategicMerge&lt;/code&gt;替换为&lt;code&gt;.spec.postRenderers.kustomize.patches&lt;/code&gt;&lt;/li&gt;&lt;li&gt; &lt;code&gt;.status.lastAppliedRevision&lt;/code&gt;替换为&lt;code&gt;.status.history.chartVersion&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;以下 API 已被弃用，并将在未来版本中删除：&lt;/p&gt;&lt;ul&gt;&lt;li&gt; &lt;code&gt;HelmRelease&lt;/code&gt; v2beta2 和 v2beta1&lt;/li&gt;&lt;li&gt; &lt;code&gt;HelmChart&lt;/code&gt; v1beta2 和 v1beta1&lt;/li&gt;&lt;li&gt; &lt;code&gt;HelmRepository&lt;/code&gt; v1beta2 和 v1beta1&lt;/li&gt;&lt;li&gt; &lt;code&gt;ImageUpdateAutomation&lt;/code&gt; v1beta1&lt;/li&gt;&lt;/ul&gt;&lt;h2 class="wp-block-heading" id="supported-versions"&gt;支持的版本&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#supported-versions"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Flux v2.0 已结束生命周期，不再受支持。&lt;/p&gt;&lt;p&gt; Flux v2.3 支持以下 Kubernetes 版本：&lt;/p&gt;&lt;figure class="wp-block-table"&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;分配&lt;/th&gt;&lt;th&gt;版本&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;库伯内斯&lt;/td&gt;&lt;td&gt;1.28、1.29、1.30&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;开放式班次&lt;/td&gt;&lt;td&gt;4.15&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt; Flux v2.3 是第一个在 OpenShift 上进行端到端测试的版本。非常感谢&lt;a href="https://www.replicated.com/"&gt;Replicated&lt;/a&gt;通过按需 OpenShift 集群赞助 Flux 项目。有关如何在 OpenShift 上引导 Flux 的更多信息，请参阅&lt;a href="https://fluxcd.io/flux/installation/configuration/openshift/"&gt;OpenShift 安装指南&lt;/a&gt;。&lt;/p&gt;&lt;h4 class="wp-block-heading"&gt;企业支持&lt;/h4&gt;&lt;p&gt;请注意，CNCF Flux 项目仅提供对 Kubernetes 最新三个次要版本的支持。&lt;/p&gt;&lt;p&gt; &lt;a href="https://control-plane.io/enterprise-for-flux-cd/"&gt;ControlPlane&lt;/a&gt;等为 Flux 提供企业支持的供应商提供了与旧版本 Kubernetes 和 OpenShift 的向后兼容性。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="installing-or-upgrading-flux"&gt;安装或升级 Flux&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#installing-or-upgrading-flux"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;要安装 Flux，请查看我们的&lt;a href="https://fluxcd.io/flux/installation/"&gt;安装&lt;/a&gt;和&lt;a href="https://fluxcd.io/flux/get-started/"&gt;入门&lt;/a&gt;指南。&lt;/p&gt;&lt;p&gt;要将 Flux 从&lt;code&gt;v2.x&lt;/code&gt;升级到&lt;code&gt;v2.3.0&lt;/code&gt; ，请&lt;a href="https://fluxcd.io/flux/installation/#bootstrap-upgrade"&gt;重新运行&lt;code&gt;flux bootstrap&lt;/code&gt;&lt;/a&gt;或使用&lt;a href="https://github.com/fluxcd/flux2/tree/main/action"&gt;Flux GitHub Action&lt;/a&gt; 。&lt;/p&gt;&lt;p&gt;要升级 Git 中存储的清单中的 API：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;升级之前，请确保&lt;code&gt;HelmRelease&lt;/code&gt; v2beta2 YAML 清单未使用已弃用的字段。搜索&lt;code&gt;valuesFile&lt;/code&gt;并将其替换为&lt;code&gt;valuesFiles&lt;/code&gt; ，将&lt;code&gt;patchesJson6902&lt;/code&gt;和&lt;code&gt;patchesStrategicMerge&lt;/code&gt;替换为&lt;code&gt;patches&lt;/code&gt; 。&lt;/li&gt;&lt;li&gt;提交更改并将其推送到 Git 存储库，然后等待 Flux 协调更改。&lt;/li&gt;&lt;li&gt;使用 Flux v2.3 版本升级集群上的控制器和 CRD。&lt;/li&gt;&lt;li&gt;将&lt;code&gt;HelmRelease&lt;/code&gt;资源的&lt;code&gt;apiVersion&lt;/code&gt;字段更新为&lt;code&gt;helm.toolkit.fluxcd.io/v2&lt;/code&gt; 。&lt;/li&gt;&lt;li&gt;将&lt;code&gt;HelmRepository&lt;/code&gt;资源的&lt;code&gt;apiVersion&lt;/code&gt;字段更新为&lt;code&gt;source.toolkit.fluxcd.io/v1&lt;/code&gt; 。&lt;/li&gt;&lt;li&gt;将&lt;code&gt;ImageUpdateAutomation&lt;/code&gt;资源的&lt;code&gt;apiVersion&lt;/code&gt;字段更新为&lt;code&gt;image.toolkit.fluxcd.io/v1beta2&lt;/code&gt; 。&lt;/li&gt;&lt;li&gt;提交更改并将其推送到 Git 存储库。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;更改清单中的 API 版本可以逐步完成。建议不要延迟此过程，因为已弃用的版本将在 6 个月后删除。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="whats-next-for-flux"&gt; Flux 的下一步是什么？&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#whats-next-for-flux"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt; Flux 项目的下一个里程碑是 v2.4，计划于 2024 年第三季度发布，并将重点关注图像自动化 API 和 S3 兼容的存储 API。有关即将推出的功能和改进的更多详细信息，请参阅&lt;a href="https://fluxcd.io/roadmap/"&gt;Flux 项目路线图&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;在 2022 年推出 OCI Artifacts 后，用户反复询问我们如何改进与 Git 完全解耦的 Flux 运行的用户体验。作为回应，我们提出了一个&lt;code&gt;flux bootstrap oci&lt;/code&gt;命令和一个新的 Terraform/OpenTofu 提供程序的提案，该提供程序依赖容器注册表作为 Kubernetes 集群所需状态的统一数据存储。 RFC 可以在&lt;a href="https://github.com/fluxcd/flux2/pull/4749"&gt;Fluxcd/flux2#4749&lt;/a&gt;找到，我们欢迎社区的反馈。&lt;/p&gt;&lt;h2 class="wp-block-heading" id="over-and-out"&gt;完了，走吧&lt;a href="https://fluxcd.io/blog/2024/05/flux-v2.3.0/#over-and-out"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;如果您有任何疑问，或者只是喜欢您所读到的内容并希望参与其中，请通过以下几种方式联系我们：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;参加我们&lt;a href="https://fluxcd.io/community/#meetings"&gt;即将举行的开发会议&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;加入&lt;a href="https://lists.cncf.io/g/cncf-flux-dev"&gt;Flux 邮件列表&lt;/a&gt;，让我们知道您需要什么帮助。&lt;/li&gt;&lt;li&gt;在&lt;a href="https://slack.cncf.io/"&gt;CNCF Slack&lt;/a&gt;上的 #flux 频道与我们交谈。&lt;/li&gt;&lt;li&gt;加入&lt;a href="https://github.com/fluxcd/flux2/discussions" rel="noreferrer noopener" target="_blank"&gt;规划讨论&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;&lt;a href="https://twitter.com/fluxcd"&gt;在 Twitter 上关注 Flux&lt;/a&gt; ，或加入&lt;a href="https://www.linkedin.com/groups/8985374/"&gt;Flux LinkedIn 群组&lt;/a&gt;。 &lt;/li&gt;&lt;/ul&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;&lt;div class="wp-block-spacer is-style-80-120" style="height: 80px;"&gt;&lt;/div&gt;</description><pubDate>Thu, 16 May 2024 16:00:00 GMT</pubDate><guid isPermaLink="true">https://www.cncf.io/blog/2024/05/17/announcing-flux-2-3-ga/</guid></item></channel></rss>